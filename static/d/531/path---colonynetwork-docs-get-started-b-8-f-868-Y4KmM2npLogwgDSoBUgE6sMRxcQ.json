{"data":{"doc":{"editUrl":"https://github.com/JoinColony/colonyNetwork/edit/master/docs/_Docs_GetStarted.md","frontmatter":{"title":"Get Started"},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This page details how to engage purely on the contract-level, and is intended more for developers looking to contribute new features, extensions, or contract-level integrations. See our "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/JoinColony/colonyNetwork/blob/develop/docs/CONTRIBUTING.md"},"children":[{"type":"text","value":"guidelines"}]},{"type":"text","value":" if you're interested in contributing to the colonyNetwork codebase."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're a dapp developer looking to integrate with colony, we recommend using "},{"type":"element","tagName":"a","properties":{"href":"/colonyjs/intro-welcome/"},"children":[{"type":"text","value":"colonyJS"}]},{"type":"text","value":" as an entry point. There you'll find analogous instructions better suited to building applications on top of the colonyNetwork. For those without patience, we have built a "},{"type":"element","tagName":"a","properties":{"href":"/colonystarter/docs-overview/"},"children":[{"type":"text","value":"colonyStarter kit"}]},{"type":"text","value":" which contains boilerplate examples for dapp development, including frontend frameworks like react, and is the fastest way to start building with Colony."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Either way, if you run into trouble or have any questions/comments, please post in our "},{"type":"element","tagName":"a","properties":{"href":"https://build.colony.io/"},"children":[{"type":"text","value":"developer forums"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{"className":["md-toc"]},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#colony-network"},"children":[{"type":"text","value":"Colony Network"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#glider-rc3-on-the-g%C3%B6rli-testnet"},"children":[{"type":"text","value":"glider-rc.3 on the Görli testnet"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#access-with-remix-good-for-experimenting"},"children":[{"type":"text","value":"Access with Remix (good for experimenting)"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#access-with-the-truffle-console"},"children":[{"type":"text","value":"Access with the Truffle console"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#safely-testing-transactions-against-goerli-and-mainnet"},"children":[{"type":"text","value":"Safely testing transactions against Goerli and Mainnet"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"colony-network"},"children":[{"type":"element","tagName":"a","properties":{"href":"#colony-network","ariaLabel":"colony network permalink","className":["md-heading-link"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Colony Network"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For local development and testing, follow instructions listed in the "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/JoinColony/colonyNetwork/blob/develop/docs/README.md"},"children":[{"type":"text","value":"repository readme page"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For more detailed instructions, and additional steps required to set up an environment for use with "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/JoinColony/colonyJS"},"children":[{"type":"text","value":"colonyJS"}]},{"type":"text","value":", check out the colonyJS "},{"type":"element","tagName":"a","properties":{"href":"/colonyjs/intro-local-setup/"},"children":[{"type":"text","value":"Local Setup"}]},{"type":"text","value":" documentation."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"glider-rc3-on-the-görli-testnet"},"children":[{"type":"element","tagName":"a","properties":{"href":"#glider-rc3-on-the-g%C3%B6rli-testnet","ariaLabel":"glider rc3 on the görli testnet permalink","className":["md-heading-link"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"glider-rc.3"}]},{"type":"text","value":" on the Görli testnet"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/JoinColony/colonyNetwork/releases/tag/glider-rc.3"},"children":[{"type":"text","value":"Glider release candidate"}]},{"type":"text","value":" is in many ways a simpler and easier way to experiment than setting up a local development environment, and can be very useful if you're looking to just get a sense of how the colonyNetwork contracts work, or want to build extensions/integrations that remain inside the EVM."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To connect, you'll need to know the address of the colonyNetwork (which is, in reality, the address of the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"etherRouter"}]},{"type":"text","value":" contract; see "},{"type":"element","tagName":"a","properties":{"href":"/colonynetwork/docs-upgrade-design/"},"children":[{"type":"text","value":"upgrade design"}]},{"type":"text","value":" for more info)."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ColonyNetwork"}]},{"type":"text","value":": "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"0x79073fc2117dD054FCEdaCad1E7018C9CbE3ec0B"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You will also require Görli test ETH, and a deployed ERC20 token to import."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"access-with-remix-good-for-experimenting"},"children":[{"type":"element","tagName":"a","properties":{"href":"#access-with-remix-good-for-experimenting","ariaLabel":"access with remix good for experimenting permalink","className":["md-heading-link"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Access with Remix (good for experimenting)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For simple interactions, "},{"type":"element","tagName":"a","properties":{"href":"http://remix-alpha.ethereum.org/"},"children":[{"type":"text","value":"Remix"}]},{"type":"text","value":" is a good lightweight way to call specific functions and get network information from the contracts."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Rather than import the entire set of contracts into remix, use the included "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"solidity-steamroller"}]},{"type":"text","value":" to flatten the needed interface contracts to the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"build/flattened/"}]},{"type":"text","value":" directory:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$ yarn flatten:contracts"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Navigate to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"colonyNetwork/build/flattened/"}]},{"type":"text","value":" to find the contracts you need to import to Remix."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Remix, instantiate "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"flatIColonyNetwork.sol"}]},{"type":"text","value":" to the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ColonyNetwork"}]},{"type":"text","value":" address "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"0x79073fc2117dD054FCEdaCad1E7018C9CbE3ec0B"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use the address of your existing ERC20 token contract to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"createColony()"}]},{"type":"text","value":", then immidiately use "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"getColonyCount()"}]},{"type":"text","value":" to get your colony's ID."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Call "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"getColony()"}]},{"type":"text","value":" to get your colony's address from the ID, then instantiate "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"flatIColony.sol"}]},{"type":"text","value":" to your colony's address in Remix."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"access-with-the-truffle-console"},"children":[{"type":"element","tagName":"a","properties":{"href":"#access-with-the-truffle-console","ariaLabel":"access with the truffle console permalink","className":["md-heading-link"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Access with the Truffle console"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"First, add a private key of your choice to the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"truffle.js"}]},{"type":"text","value":" configuration file:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"goerli: {\n      provider: () => {\n        return new HDWalletProvider(\"replace-with-private-key-when-using\", \"https://goerli.infura.io/v3/e21146aa267845a2b7b4da025178196d\");\n      },\n      network_id: \"5\"\n    }\n  },"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Then, start up the truffle console and connect to testnet:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$ yarn truffle console --network goerli"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the truffle console, instantiate the IColonyNetwork interface on Görli:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"truffle(goerli)> let colonyNetwork = await IColonyNetwork.at(\"0x79073fc2117dD054FCEdaCad1E7018C9CbE3ec0B\")"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"From here, you can create a new colony (with an ERC20 token already deployed):"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"truffle(goerli)> await colonyNetwork.createColony(\"your-erc20-token-address\")"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And find your colony's id (the newest created colony) after the transaction is mined:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"truffle(goerli)> await colonyNetwork.getColonyCount()"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Helpers for multisig"}]},{"type":"text","value":"\nConstructing multisig transactions is required for certain parts of the task workflow. These transactions involve "},{"type":"element","tagName":"a","properties":{"href":"https://blog.colony.io/parameterized-transaction-reviews-11f0cdc40479/"},"children":[{"type":"text","value":"parameterized transaction reviews"}]},{"type":"text","value":" signed by at least one of the task role members. The operations work through the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"executeTaskChange"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"executeTaskRoleAssignment"}]},{"type":"text","value":" methods.  "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To simplify their execution, we provide a set of convenience functions which you can import in the truffle console via\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const sigHelper = require(\"../helpers/task-review-signing.js\")"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To execute a signed task change, for example, cancel a task with id 5, you can call the helper in the truffle console as follows:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"await sigHelper.executeSignedTaskChange({colony, functionName:\"cancelTask\",taskId:5, signers:[TASK_MANAGER_ADDRESS], privKeys:[TASK_MANAGER_PRIVATE_KEY], sigTypes: [0],args: [5]})"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"colony"}]},{"type":"text","value":" is your colony instantiated in the console via "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"const colony = await IColony.at(COLONY_ADDRESS)"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"TASK_MANAGER_ADDRESS"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"TASK_MANAGER_PRIVATE_KEY"}]},{"type":"text","value":" are the address and private key of the manager account for task 5."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that in this example the task is not yet assigned a worker, otherwise both the signatures and private keys of manager and worker would be required."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"safely-testing-transactions-against-goerli-and-mainnet"},"children":[{"type":"element","tagName":"a","properties":{"href":"#safely-testing-transactions-against-goerli-and-mainnet","ariaLabel":"safely testing transactions against goerli and mainnet permalink","className":["md-heading-link"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Safely testing transactions against Goerli and Mainnet"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you want to safely test your transactions before executing them against a network, you can fork the target network and do a practice run there. To fork either goerli or mainnet networks with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ganache-cli"}]},{"type":"text","value":" use"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"yarn run ganache-cli --fork https://goerli.infura.io/v3/e21146aa267845a2b7b4da025178196d"}]},{"type":"text","value":"\nfor goerli"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"yarn run ganache-cli --fork https://mainnet.infura.io/v3/e21146aa267845a2b7b4da025178196d"}]},{"type":"text","value":"\nfor mainnet"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This will start a local copy of the target network running on "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ganache-cli"}]},{"type":"text","value":" which returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"revert"}]},{"type":"text","value":" error messages for failed transactions that are essential in troubleshooting. Other benefits of the forked network include instant mining and zero gas costs."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Then you can connect via the truffle console to this local node via the usual way "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"yarn run truffle console"}]},{"type":"text","value":". In the console you can then safely execute your transactions to test their results."}]}],"data":{"quirksMode":false}}},"project":{"slug":"colonynetwork","name":"colonyNetwork","logo":"img/colonyNetwork_color.svg","logoSmall":"img/logomark_colonyNetwork_blue.svg","repoUrl":"https://github.com/JoinColony/colonyNetwork","sectionOrder":["intro","docs","bug-bounty-program","whitepaper-tldr","interface"],"sectionTranslations":null,"sections":[{"name":"Docs","slug":"docs","docs":[{"slug":"extensions","fields":{"locale":"en","slug":"/colonynetwork/docs-extensions"},"frontmatter":{"title":"Extensions","order":6,"section":"Docs"}},{"slug":"get-started","fields":{"locale":"en","slug":"/colonynetwork/docs-get-started"},"frontmatter":{"title":"Get Started","order":1,"section":"Docs"}},{"slug":"overview","fields":{"locale":"en","slug":"/colonynetwork/docs-overview"},"frontmatter":{"title":"Overview","order":2,"section":"Docs"}},{"slug":"modular-permissions","fields":{"locale":"en","slug":"/colonynetwork/docs-modular-permissions"},"frontmatter":{"title":"Modular Permissions","order":4,"section":"Docs"}},{"slug":"reputation-mining-client","fields":{"locale":"en","slug":"/colonynetwork/docs-reputation-mining-client"},"frontmatter":{"title":"Reputation Mining Client","order":5,"section":"Docs"}},{"slug":"upgrade-design","fields":{"locale":"en","slug":"/colonynetwork/docs-upgrade-design"},"frontmatter":{"title":"Upgrade design","order":3,"section":"Docs"}}]},{"name":"Interface","slug":"interface","docs":[{"slug":"icolony","fields":{"locale":"en","slug":"/colonynetwork/interface-icolony"},"frontmatter":{"title":"IColony","order":3,"section":"Interface"}},{"slug":"icolonynetwork","fields":{"locale":"en","slug":"/colonynetwork/interface-icolonynetwork"},"frontmatter":{"title":"IColonyNetwork","order":2,"section":"Interface"}},{"slug":"ietherrouter","fields":{"locale":"en","slug":"/colonynetwork/interface-ietherrouter"},"frontmatter":{"title":"IEtherRouter","order":1,"section":"Interface"}},{"slug":"imetacolony","fields":{"locale":"en","slug":"/colonynetwork/interface-imetacolony"},"frontmatter":{"title":"IMetaColony","order":4,"section":"Interface"}},{"slug":"irecovery","fields":{"locale":"en","slug":"/colonynetwork/interface-irecovery"},"frontmatter":{"title":"IRecovery","order":6,"section":"Interface"}},{"slug":"ireputationminingcycle","fields":{"locale":"en","slug":"/colonynetwork/interface-ireputationminingcycle"},"frontmatter":{"title":"IReputationMiningCycle","order":7,"section":"Interface"}},{"slug":"itokenlocking","fields":{"locale":"en","slug":"/colonynetwork/interface-itokenlocking"},"frontmatter":{"title":"ITokenLocking","order":5,"section":"Interface"}}]},{"name":"Intro","slug":"intro","docs":[{"slug":"welcome","fields":{"locale":"en","slug":"/colonynetwork/intro-welcome"},"frontmatter":{"title":"Welcome","order":0,"section":"Intro"}}]},{"name":"Whitepaper TL;DR","slug":"whitepaper-tldr","docs":[{"slug":"colony","fields":{"locale":"en","slug":"/colonynetwork/whitepaper-tldr-colony"},"frontmatter":{"title":"Colony","order":0,"section":"Whitepaper TL;DR"}},{"slug":"objections-and-disputes","fields":{"locale":"en","slug":"/colonynetwork/whitepaper-tldr-objections-and-disputes"},"frontmatter":{"title":"Objections and Disputes","order":7,"section":"Whitepaper TL;DR"}},{"slug":"domains-and-skills","fields":{"locale":"en","slug":"/colonynetwork/whitepaper-tldr-domains-and-skills"},"frontmatter":{"title":"Domains and Skills","order":5,"section":"Whitepaper TL;DR"}},{"slug":"glossary-of-terms","fields":{"locale":"en","slug":"/colonynetwork/whitepaper-tldr-glossary-of-terms"},"frontmatter":{"title":"Glossary of Terms","order":11,"section":"Whitepaper TL;DR"}},{"slug":"the-meta-colony-and-clny","fields":{"locale":"en","slug":"/colonynetwork/whitepaper-tldr-the-meta-colony-and-clny"},"frontmatter":{"title":"The Meta Colony and CLNY","order":8,"section":"Whitepaper TL;DR"}},{"slug":"pots-and-funding","fields":{"locale":"en","slug":"/colonynetwork/whitepaper-tldr-pots-and-funding"},"frontmatter":{"title":"Pots and Funding","order":6,"section":"Whitepaper TL;DR"}},{"slug":"reputation","fields":{"locale":"en","slug":"/colonynetwork/whitepaper-tldr-reputation"},"frontmatter":{"title":"Reputation","order":4,"section":"Whitepaper TL;DR"}},{"slug":"reputation-mining","fields":{"locale":"en","slug":"/colonynetwork/whitepaper-tldr-reputation-mining"},"frontmatter":{"title":"Reputation Mining","order":9,"section":"Whitepaper TL;DR"}},{"slug":"tasks-and-payments","fields":{"locale":"en","slug":"/colonynetwork/whitepaper-tldr-tasks-and-payments"},"frontmatter":{"title":"Tasks and Payments","order":3,"section":"Whitepaper TL;DR"}}]},{"name":"Bug Bounty Program","slug":"bug-bounty-program","docs":[{"slug":"overview","fields":{"locale":"en","slug":"/colonynetwork/bug-bounty-program-overview"},"frontmatter":{"title":"Overview","order":0,"section":"Bug Bounty Program"}},{"slug":"terms-and-conditions","fields":{"locale":"en","slug":"/colonynetwork/bug-bounty-program-terms-and-conditions"},"frontmatter":{"title":"Terms and Conditions","order":1,"section":"Bug Bounty Program"}}]}]},"allProject":{"edges":[{"node":{"name":"colonyNetwork"}},{"node":{"name":"colonyJS"}},{"node":{"name":"colonyStarter"}},{"node":{"name":"purser"}},{"node":{"name":"tailor"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"docId":"620376b1-f80b-50ac-bff3-31c255e86c5a","projectName":"colonyNetwork"}}