{"version":3,"sources":["webpack:///./src/modules/parts/components/DevRelCta/CtaItem/CtaItem.jsx","webpack:///./src/modules/parts/components/DevRelCta/DevRelCta.jsx","webpack:///./src/modules/pages/components/DocPage/Content/Content.jsx","webpack:///./src/modules/pages/components/DocPage/SectionListItem/SectionListItem.jsx","webpack:///./src/modules/pages/components/DocPage/SectionList/SectionList.jsx","webpack:///./src/modules/pages/components/DocPage/Sidebar/Sidebar.jsx","webpack:///./src/modules/pages/components/DocPage/Sidebar/Sidebar.js","webpack:///./src/modules/pages/components/DocPage/DocPage.jsx","webpack:///./src/modules/core/components/Link/Link.jsx","webpack:///./src/modules/core/components/Link/Link.js","webpack:///./src/modules/core/components/Link/index.js","webpack:///./src/modules/core/components/Heading/Heading.jsx","webpack:///./src/modules/core/components/Heading/index.js","webpack:///./src/utils/css/index.js","webpack:///./src/routes/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/modules/core/components/Icon/Icon.jsx","webpack:///./src/modules/core/components/Icon/index.js","webpack:///./src/modules/core/components/Button/Button.jsx","webpack:///./src/modules/core/components/Button/index.js","webpack:///./src/utils/docs/index.js","webpack:///./src/modules/core/components/Image/Image.jsx","webpack:///./src/modules/core/components/Image/index.js","webpack:///./src/utils/strings/index.js","webpack:///./src/context/FileContext.js","webpack:///./i18nConfig.js","webpack:///./src/hoc/location/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/modules/layouts/components/GlobalLayout/GlobalLayout.jsx","webpack:///./src/modules/layouts/components/GlobalLayout/GlobalLayout.js","webpack:///./src/modules/layouts/components/GlobalLayout/index.js","webpack:///./src/modules/core/components/Search/Search.jsx","webpack:///./src/docsearch-settings.js","webpack:///./src/modules/core/components/Search/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/modules/core/components/NavigationToggle/NavigationToggle.jsx","webpack:///./src/modules/core/components/Popover/getPopoverArrowClasses.js","webpack:///./src/modules/core/components/Popover/PopoverWrapper.jsx","webpack:///./src/modules/core/components/Popover/Popover.jsx","webpack:///./src/modules/core/components/VerticalMenu/VerticalMenu.jsx","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/DocsDropdownContent/DocsDropdownContent.jsx","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/Header/Header.jsx","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/Footer/Footer.jsx","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/DeveloperPortalLayout.jsx","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/DeveloperPortalLayout.js","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/index.js","webpack:///./src/modules/parts/components/SEO/SEO.jsx","webpack:///./src/modules/parts/components/SEO/SEO.js","webpack:///./src/hoc/files/index.js","webpack:///./src/modules/parts/components/SEO/index.js"],"names":["CtaItem","_ref","contentText","headingText","linkText","linkUrl","react_default","a","createElement","className","styles","main","contentContainer","Heading","appearance","margin","size","theme","weight","text","index_es","linkContainer","Button","padding","linkTo","style","fontSize","buttonTextSize","displayName","MSG","defineMessages","supportHeading","id","defaultMessage","supportContent","supportLinkText","improveDocHeading","improveDocContent","improveDocLinkText","DevRelCta","editUrl","ctaItem","DevRelCta_CtaItem_CtaItem","COLONY_DISCOURSE_SUPPORT","Content","children","commonHeadingAppearanceProps","doc","locale","intl","project","Fragment","es","path","getProjectEntryPoint","_ref2","match","titleWrapper","name","titleRuler","astContent","Object","assign","frontmatter","title","injectIntl","SectionListItem","_ref$section","section","docs","_useState","useState","isSectionOpen","setIsSectionOpen","sectionHeadingProps","aria-expanded","mobileSectionExpander","onClick","Icon","expandArrow","sectionTitle","docsList","getDocsForLocale","sort","orderDocs","map","key","slug","docsItem","Link","activeClassName","active","itemLink","href","fields","persistLocale","state","fromParent","SectionList","sectionsList","getSectionsForLocale","DocPage_SectionListItem_SectionListItem","linkHome","btnBackToTop","iconTitleVisitLink","renderAst","RehypeReact","components","rest","objectWithoutPropertiesLoose_default","listItemStyles","fromChild","subItemLink","li","props","p","withProps","Compiler","Sidebar","htmlAst","_ref2$locationState","locationState","projectName","projectEntryPoint","tableOfContents","getMainClasses","hasNoItems","length","menuContentsWrapper","_ref3","arrow","homeLink","PAGE_DEVELOPER_PORTAL","mobileProjectTitle","chevron","menuContents","projectTitle","DocPage_SectionList_SectionList","lineHeight","projectTitleLineHeight","tocMenuWrapper","tocWrapper","backToTop","handleBackToTop","e","window","preventDefault","scrollTo","enhance","compose","withLocation","location","headingWithSize","DocPage","_this","_Component","call","this","getElementTextValue","node","child","value","join","getAllImages","imagePaths","isTagName","properties","push","src","getToc","defaultReturn","type","tagName","find","element","hasClassname","transformInternalUrls","_this$props","projectNodes","data","allProject","edges","slugPrefix","pageContext","url","toLowerCase","projectNameSlugs","reduce","names","slugify","lower","urlParts","split","filter","part","hasLocale","localePrefix","isDocPage","some","startsWith","replace","transformUrl","h1","h2","h3","h4","h5","img","Image","ul","ulProps","render","_this$props$data","forEach","isMethodHeading","Array","isArray","methodHeading","toc","metaTitle","seoDescription","seoImages","logo","DeveloperPortalLayout","Helmet_default","SEO","description","images","mainInnerContainer","sidebar","components_DocPage_Sidebar_Sidebar","content","DocPage_Content_Content","components_DevRelCta_DevRelCta","Component","includes","pageQuery","formatMessage","isInternal","textValues","linkContent","classNames","gatsby_browser_entry","to","defaultProps","test","isOnPageAnchor","shouldPersistLocale","DEFAULT_LOCALE","rel","undefined","target","__webpack_require__","d","__webpack_exports__","core_components_Link_Link","_ref$appearance","HeadingElement","huge","large","medium","mediumLarge","normal","small","tiny","getChildrenOrText","components_Heading_Heading","styleObject","_appearance","modifiers","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_3___default","styleArray","themeClass","capitalize","camelcase","modifierClasses","keys","i","stateClasses","concat","PAGE_INDEX","PAGE_GET_STARTED_COLONYJS","PAGE_GET_INVOLVED","PAGE_LOGIN","PAGE_PRIVACY_POLICY","PAGE_TERMS_SERVICE","PAGE_BUG_BOUNTY","COLONY_BLOG","COLONY_DISCOURSE","COLONY_GITHUB","COLONY_GITTER","COLONY_GITTER_COLONYJS","COLONY_REDDIT","COLONY_TWITTER","COLONY_WEBSITE","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","query","propTypes","PropTypes","object","string","isRequired","func","icons","iconNames","prev","current","withPrefix","titleValues","_ref$viewBox","viewBox","viewBoxOverride","icon","titleText","role","aria-label","xlinkHref","components_Icon_Icon","_ref$type","buttonContent","components_Button_Button","b","order","sectionOrderForLocale","sectionOrder","sectionTranslations","localeTranslatedSectionConfig","sections","indexOf","bind","docSections","firstSectionDocs","docsForLocale","firstDoc","transformProjectData","edge","edgeNode","entryPoint","alt","altValues","altText","FileContext","files","components_Image_Image","word","charAt","toUpperCase","slice","CONFIGURED_LOCALES","module","exports","_reach_router__WEBPACK_IMPORTED_MODULE_0__","recompose__WEBPACK_IMPORTED_MODULE_1__","BaseComponent","fromRenderProps","Location","locationProps","m","require","default","localeMessages","en","messages","enMessages","enLocaleData","configuredLocalesData","accumulator","configKey","addLocaleData","configuredMessageLocales","localesWithoutMessages","missingLocalesString","localesString","console","warn","checkLocaleConfig","GlobalLayout","getLocaleString","pathname","getMessagesForLocale","_2396874169","Provider","next","_Object$assign","sourceInstanceName","relativePath","publicURL","defaultLocale","layouts_components_GlobalLayout_GlobalLayout","defaultPlaceholderText","Search","isEnabled","focusInput","inputRef","focus","createRef","componentDidMount","inputId","then","t","docsearch","apiKey","indexName","inputSelector","setState","placeholderText","placeholderTextValues","placeholderTextContent","isQuickSearch","searchInput","placeholder","ref","tabIndex","quickSearchIcon","components_Search_Search","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape","btnTitleToggleNavigation","NavigationToggle","isNavOpen","aria-hidden","mobileIcon","mobileIconLine","getPopoverArrowClasses","_temp","placement","placementClass","PopoverWrapper","arrowProps","innerRef","onFocus","retainRefFocus","_ref$wrapperClassName","wrapperClassName","hideArrow","showArrow","data-placement","Popover","removeOutsideClickListener","document","body","removeEventListener","handleOutsideClick","getChildProps","assertThisInitialized_default","trigger","childProps","aria-describedby","isOpen","hover","onMouseEnter","requestOpen","onMouseLeave","close","click","toggle","disabled","evt","HTMLElement","contentNode","contains","refNode","openDelay","openTimeout","setTimeout","open","onClose","clearTimeout","registerRefNode","registerContentNode","handleWrapperFocus","HTMLInputElement","renderReference","_assertThisInitialize2","cloneElement","renderContent","_this$props2","contentValues","isValidElement","nanoid","componentDidUpdate","_ref4","closeOnOutsideClick","prevIsOpenProp","prevOpen","isOpenProp","addEventListener","componentWillUnmount","_this2","_this$props3","origPlacement","popperProps","esm","_ref5","Popover_PopoverWrapper","navAriaLabelDefault","VerticalMenu","_ref$headingAppearanc","headingAppearance","headingTextValues","menuItems","_ref$numColumns","numColumns","columnStyles","columnCount","labelText","ariaProps","menu","menuItemProps","menuItem","ariaLabel","heroTitle","heroSubTitle","headingCoreProducts","headingOpenSourceProducts","getProjectLinks","DocsDropdownContent","coreProjects","openSourceProjects","coreProjectsLinks","openSourceProjectsLinks","featureProject","heroLink","hero","logoContainer","logoSmall","cta","menuContent","menuContainer","components_VerticalMenu_VerticalMenu","margins","expandForViewport","imageAltDevPortal","navAriaLabel","navLinkDocs","navLinkSupport","Header","setIsNavOpen","menuWrapper","navContainer","navigation","navLink","docsDropdownParent","components_Popover_Popover","DeveloperPortalLayout_DocsDropdownContent_DocsDropdownContent","offset","docsDropdownContainer","dropdownParent","aria-haspopup","mobileDocsDropdown","searchContainer","navToggle","components_NavigationToggle_NavigationToggle","hideAtSize","linkVisitColony","navTitleGetStarted","navTitleCoreProducts","navTitleOpenSourceTools","metaLinkTos","metaLinkPrivacy","metaLinkMediaKit","repoUrl","Footer","footerContent","navRow","domain","navGroup","navGroupItem","metaRow","metaNavContainer","metaNav","metaNavLink","socialIconContainer","socialIcon","projectQueryData","_3078273232","DeveloperPortalLayout_Header_Header","DeveloperPortalLayout_Footer_Footer","nest","layouts_components_DeveloperPortalLayout_DeveloperPortalLayout","siteName","baseUrl","descriptionContent","descriptionValues","getAbsoluteImagePath","siteLogo","titleContent","_ref$images","absolutePath","ogType","schemaOrgJSONLD","@context","@type","itemListElement","position","item","@id","image","author","headline","imagePath","JSON","stringify","itemProp","property","withHandlers","parts_components_SEO_SEO"],"mappings":"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","file":"component---src-modules-pages-components-doc-page-doc-page-jsx-50b2767dbcc6549cc7fa.js","sourcesContent":["/* @flow */\nimport type { MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '~core/Button';\nimport Heading from '~core/Heading';\n\nimport styles from './CtaItem.module.css';\n\ntype Props = {|\n  contentText: MessageDescriptor | string,\n  headingText: MessageDescriptor | string,\n  linkText: MessageDescriptor | string,\n  linkUrl: string,\n|};\n\nconst displayName = 'parts.DevRelCta.CtaItem';\n\nconst CtaItem = ({ contentText, headingText, linkText, linkUrl }: Props) => (\n  <div className={styles.main}>\n    <div className={styles.contentContainer}>\n      <Heading\n        appearance={{\n          margin: 'large',\n          size: 'mediumLarge',\n          theme: 'dark',\n          weight: 'medium',\n        }}\n        text={headingText}\n      />\n      <p className={styles.contentText}>\n        {typeof contentText === 'string' ? (\n          contentText\n        ) : (\n          <FormattedMessage {...contentText} />\n        )}\n      </p>\n    </div>\n    <div className={styles.linkContainer}>\n      <Button\n        appearance={{ padding: 'small', theme: 'primaryHollow' }}\n        linkTo={linkUrl}\n        style={{ fontSize: styles.buttonTextSize }}\n        text={linkText}\n      />\n    </div>\n  </div>\n);\n\nCtaItem.displayName = displayName;\n\nexport default CtaItem;\n","/* @flow */\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport { COLONY_DISCOURSE_SUPPORT } from '~routes';\n\nimport CtaItem from './CtaItem';\n\nimport styles from './DevRelCta.module.css';\n\nconst MSG = defineMessages({\n  supportHeading: {\n    id: 'parts.DevRelCta.supportHeading',\n    defaultMessage: 'Support',\n  },\n  supportContent: {\n    id: 'parts.DevRelCta.supportContent',\n    defaultMessage:\n      'Questions? Problems? Existential dilemmas? We’re here to help!',\n  },\n  supportLinkText: {\n    id: 'parts.DevRelCta.supportLinkText',\n    defaultMessage: 'Contact DevRel',\n  },\n  improveDocHeading: {\n    id: 'parts.DevRelCta.improveDocHeading',\n    defaultMessage: 'Improve this doc.',\n  },\n  improveDocContent: {\n    id: 'parts.DevRelCta.improveDocContent',\n    defaultMessage:\n      // eslint-disable-next-line max-len\n      'All improvements to documentation are welcome and encouraged. Submit a PR for documentation on GitHub.',\n  },\n  improveDocLinkText: {\n    id: 'parts.DevRelCta.supportLinkText',\n    defaultMessage: 'To the repo!',\n  },\n});\n\ntype Props = {|\n  editUrl: string,\n|};\n\nconst displayName = 'parts.DevRelCta';\n\nconst DevRelCta = ({ editUrl }: Props) => (\n  <div className={styles.main}>\n    <div className={styles.ctaItem}>\n      <CtaItem\n        contentText={MSG.supportContent}\n        headingText={MSG.supportHeading}\n        linkText={MSG.supportLinkText}\n        linkUrl={COLONY_DISCOURSE_SUPPORT}\n      />\n    </div>\n    <div className={styles.ctaItem}>\n      <CtaItem\n        contentText={MSG.improveDocContent}\n        headingText={MSG.improveDocHeading}\n        linkText={MSG.improveDocLinkText}\n        linkUrl={editUrl}\n      />\n    </div>\n  </div>\n);\n\nDevRelCta.displayName = displayName;\n\nexport default DevRelCta;\n","/* @flow */\nimport type { Node } from 'react';\nimport type { IntlShape } from 'react-intl';\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Match } from '@reach/router';\n\nimport type { Doc, Project } from '~types';\nimport type { Appearance as HeadingAppearance } from '~core/Heading';\n\nimport Heading from '~core/Heading';\nimport { getProjectEntryPoint } from '~utils/docs';\n\nimport styles from './Content.module.css';\n\ntype Props = {|\n  children?: Node,\n  commonHeadingAppearanceProps: HeadingAppearance,\n  doc: Doc,\n  /** Injected via `injectIntl` */\n  intl: IntlShape,\n  project: Project,\n|};\n\nconst displayName = 'pages.DocPage.Content';\n\nconst Content = ({\n  children,\n  commonHeadingAppearanceProps,\n  doc,\n  intl: { locale },\n  project,\n}: Props) => (\n  <>\n    <Match path={getProjectEntryPoint(project, locale)}>\n      {({ match }) =>\n        match ? (\n          <div className={styles.titleWrapper}>\n            <Heading\n              appearance={{ margin: 'none', size: 'large', theme: 'dark' }}\n              text={project.name}\n            />\n            <hr className={styles.titleRuler} />\n          </div>\n        ) : null\n      }\n    </Match>\n    <div className={styles.astContent}>\n      <Heading\n        appearance={{\n          ...commonHeadingAppearanceProps,\n          size: 'large',\n        }}\n        text={doc.frontmatter.title}\n      />\n      {children}\n    </div>\n  </>\n);\n\nContent.displayName = displayName;\n\nexport default injectIntl(Content);\n","/* @flow */\nimport React, { useState } from 'react';\n\nimport type { Section } from '~types';\n\nimport Button from '~core/Button';\nimport Heading from '~core/Heading';\nimport Icon from '~core/Icon';\nimport Link from '~core/Link';\nimport { getDocsForLocale, orderDocs } from '~utils/docs';\n\nimport styles from './SectionListItem.module.css';\n\ntype Props = {|\n  locale: string,\n  section: Section,\n|};\n\nconst displayName = 'pages.DocPage.SectionListItem';\n\nconst SectionListItem = ({ locale, section: { docs, name } }: Props) => {\n  const [isSectionOpen, setIsSectionOpen] = useState(false);\n  const sectionHeadingProps = {\n    appearance: {\n      margin: 'none',\n      size: 'normal',\n      theme: 'dark',\n      weight: 'medium',\n    },\n    text: name,\n  };\n  return (\n    <li className={styles.main} aria-expanded={isSectionOpen}>\n      <span className={styles.mobileSectionExpander}>\n        <Button\n          appearance={{ theme: 'reset' }}\n          onClick={() => setIsSectionOpen(!isSectionOpen)}\n        >\n          <Heading {...sectionHeadingProps} />\n          <Icon className={styles.expandArrow} name=\"chevron\" title={name} />\n        </Button>\n      </span>\n      <span className={styles.sectionTitle}>\n        <Heading {...sectionHeadingProps} />\n      </span>\n      <ul className={styles.docsList}>\n        {getDocsForLocale(docs, locale)\n          .sort(orderDocs)\n          .map(doc => (\n            <li key={doc.slug} className={styles.docsItem}>\n              <Link\n                activeClassName={styles.active}\n                className={styles.itemLink}\n                href={doc.fields.slug}\n                persistLocale={false}\n                state={{ fromParent: true }}\n                text={doc.frontmatter.title}\n                title={doc.frontmatter.title}\n              />\n            </li>\n          ))}\n      </ul>\n    </li>\n  );\n};\n\nSectionListItem.displayName = displayName;\n\nexport default SectionListItem;\n","/* @flow */\nimport type { IntlShape } from 'react-intl';\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport type { Project } from '~types';\n\nimport SectionListItem from '~pages/DocPage/SectionListItem';\nimport { getSectionsForLocale } from '~utils/docs';\n\nimport styles from './SectionList.module.css';\n\ntype Props = {|\n  /* Injected via `injectIntl` */\n  intl: IntlShape,\n  project: Project,\n|};\n\nconst displayName = 'pages.DocPage.SectionList';\n\nconst SectionList = ({ intl: { locale }, project }: Props) => (\n  <ul className={styles.sectionsList}>\n    {getSectionsForLocale(project, locale).map(section => (\n      <SectionListItem key={section.slug} locale={locale} section={section} />\n    ))}\n  </ul>\n);\n\nSectionList.displayName = displayName;\n\nexport default injectIntl(SectionList);\n","/* @flow */\nimport React, { createElement } from 'react';\nimport { defineMessages } from 'react-intl';\nimport { withProps } from 'recompose';\nimport { Match } from '@reach/router';\nimport RehypeReact from 'rehype-react';\n\nimport type { Project, HtmlAst } from '~types';\n\nimport Button from '~core/Button';\nimport Heading from '~core/Heading';\nimport Icon from '~core/Icon';\nimport Link from '~core/Link';\nimport SectionList from '~pages/DocPage/SectionList';\nimport { PAGE_DEVELOPER_PORTAL } from '~routes';\nimport { getMainClasses } from '~utils/css';\n\nimport styles from './Sidebar.module.css';\nimport listItemStyles from '../SectionListItem/SectionListItem.module.css';\n\nconst MSG = defineMessages({\n  linkHome: {\n    id: 'pages.DocPage.Sidebar.linkHome',\n    defaultMessage: 'Home',\n  },\n  btnBackToTop: {\n    id: 'pages.DocPage.Sidebar.btnBackToTop',\n    defaultMessage: 'Back to Top',\n  },\n  iconTitleVisitLink: {\n    id: 'pages.DocPage.Sidebar.iconTitleVisitLink',\n    defaultMessage: 'Visit Link',\n  },\n});\n\ntype Props = {|\n  locationState: {\n    fromChild: boolean,\n    fromParent: boolean,\n    key: string,\n  },\n  project: Project,\n  projectEntryPoint: string,\n  tableOfContents: HtmlAst,\n  title?: string,\n|};\n\nconst hasNodes = (htmlAst?: HtmlAst) =>\n  htmlAst && htmlAst.children && htmlAst.children.length > 0;\n\nconst ItemLink = ({ children, ...rest }: Object) => (\n  <Link\n    {...rest}\n    className={listItemStyles.itemLink}\n    state={{ fromChild: true }}\n  >\n    <div className={styles.subItemLink}>{children}</div>\n  </Link>\n);\n\nconst renderAst = new RehypeReact({\n  createElement,\n  components: {\n    a: ItemLink,\n    li: props =>\n      createElement('li', { ...props, className: listItemStyles.docsItem }),\n    p: withProps({\n      appearance: {\n        margin: 'none',\n        size: 'normal',\n        theme: 'dark',\n        weight: 'medium',\n      },\n    })(Heading),\n  },\n}).Compiler;\n\nconst displayName = 'pages.DocPage.Sidebar';\n\nconst Sidebar = ({\n  locationState: { fromChild, fromParent },\n  project: { name: projectName },\n  project,\n  projectEntryPoint,\n  tableOfContents,\n  title,\n}: Props) => (\n  <nav\n    className={getMainClasses({}, styles, {\n      fromChild,\n      fromParent,\n      hasNoItems: !hasNodes(tableOfContents),\n    })}\n  >\n    <div className={styles.menuContentsWrapper}>\n      <Match path={projectEntryPoint}>\n        {({ match }) =>\n          match ? (\n            <>\n              <Link\n                arrow=\"left\"\n                className={styles.homeLink}\n                href={PAGE_DEVELOPER_PORTAL}\n                text={MSG.linkHome}\n              />\n              <div className={styles.mobileProjectTitle}>\n                <Link href={PAGE_DEVELOPER_PORTAL}>\n                  <Icon\n                    className={styles.chevron}\n                    name=\"chevron\"\n                    title={projectName}\n                  />\n                  <Heading\n                    appearance={{\n                      margin: 'none',\n                      size: 'mediumLarge',\n                      theme: 'dark',\n                      weight: 'medium',\n                    }}\n                    text={projectName}\n                  />\n                </Link>\n              </div>\n              <div className={styles.menuContents}>\n                <div className={styles.projectTitle}>\n                  <Heading\n                    appearance={{\n                      size: 'mediumLarge',\n                      theme: 'dark',\n                      weight: 'medium',\n                    }}\n                    text={projectName}\n                  />\n                </div>\n                <SectionList project={project} />\n              </div>\n            </>\n          ) : (\n            <>\n              <Link\n                arrow=\"left\"\n                className={styles.homeLink}\n                href={projectEntryPoint}\n                state={{ fromChild: true }}\n                text={projectName}\n              />\n              {title && (\n                <>\n                  <div className={styles.mobileProjectTitle}>\n                    <Link href={projectEntryPoint} state={{ fromChild: true }}>\n                      <Icon\n                        className={styles.chevron}\n                        name=\"chevron\"\n                        title={title}\n                      />\n                      <Heading\n                        appearance={{\n                          margin: 'none',\n                          size: 'mediumLarge',\n                          theme: 'dark',\n                          weight: 'medium',\n                        }}\n                        text={title}\n                      />\n                    </Link>\n                  </div>\n                  <div className={styles.menuContents}>\n                    <div className={styles.projectTitle}>\n                      <Heading\n                        appearance={{\n                          size: 'mediumLarge',\n                          theme: 'dark',\n                          weight: 'medium',\n                        }}\n                        style={{ lineHeight: styles.projectTitleLineHeight }}\n                        text={title}\n                      />\n                    </div>\n                    <div className={styles.tocMenuWrapper}>\n                      <div className={styles.tocWrapper}>\n                        {renderAst(tableOfContents)}\n                      </div>\n                    </div>\n                  </div>\n                </>\n              )}\n            </>\n          )\n        }\n      </Match>\n    </div>\n    <div className={styles.backToTop}>\n      <Button\n        className={styles.itemLink}\n        onClick={handleBackToTop}\n        text={MSG.btnBackToTop}\n      />\n    </div>\n  </nav>\n);\n\nSidebar.displayName = displayName;\n\nfunction handleBackToTop(e) {\n  if (typeof window !== 'undefined') {\n    e.preventDefault();\n    window.scrollTo(0, 0);\n  }\n}\n\nexport default Sidebar;\n","/* @flow */\nimport { injectIntl } from 'react-intl';\nimport { compose, withProps } from 'recompose';\n\nimport { getProjectEntryPoint } from '~utils/docs';\nimport { withLocation } from '~hoc/location';\n\nimport Sidebar from './Sidebar.jsx';\n\nconst enhance = compose(\n  injectIntl,\n  withLocation(),\n  withProps(({ intl: { locale }, location: { state }, project }) => {\n    const fromChild = state && state.fromChild ? state.fromChild : false;\n    const fromParent = state && state.fromParent ? state.fromParent : false;\n    return {\n      locationState: {\n        fromChild,\n        fromParent,\n        key: (state && state.key) || '0', // state.key only relevant if it already exists\n      },\n      projectEntryPoint: getProjectEntryPoint(project, locale),\n    };\n  }),\n);\n\nexport default enhance(Sidebar);\n","/* @flow */\nimport React, { Component, createElement } from 'react';\nimport RehypeReact from 'rehype-react';\nimport Helmet from 'react-helmet';\nimport { withProps } from 'recompose';\nimport { graphql } from 'gatsby';\nimport slugify from 'slugify';\n\nimport type { Doc, HtmlAst, Project } from '~types';\nimport type { Appearance as HeadingAppearance } from '~core/Heading';\n\nimport Heading from '~core/Heading';\nimport Image from '~core/Image';\nimport Link from '~core/Link';\nimport DeveloperPortalLayout from '~layouts/DeveloperPortalLayout';\nimport DevRelCta from '~parts/DevRelCta';\nimport SEO from '~parts/SEO';\n\nimport Content from './Content';\nimport Sidebar from './Sidebar';\n\nimport styles from './DocPage.module.css';\n\nconst commonHeadingAppearanceProps: HeadingAppearance = {\n  theme: 'dark',\n  weight: 'medium',\n};\n\nconst headingWithSize = (size: string) =>\n  withProps({\n    appearance: { ...commonHeadingAppearanceProps, size },\n  })(Heading);\n\ntype Props = {|\n  data: {\n    project: Project,\n    doc: Doc,\n    allProject: {\n      edges: Array<{\n        node: {\n          name: string,\n        },\n      }>,\n    },\n  },\n  pageContext: {\n    slugPrefix: string,\n  },\n|};\n\nclass DocPage extends Component<Props> {\n  renderAst: (node: Object) => void;\n\n  static displayName = 'pages.DocPage';\n\n  static hasClassname = (element: HtmlAst, className: string): boolean => {\n    return (\n      !!element.properties &&\n      element.properties.className &&\n      element.properties.className.includes(className)\n    );\n  };\n\n  static isTagName = (element: HtmlAst, tagName: string): boolean => {\n    return !!element.tagName && element.tagName === tagName;\n  };\n\n  static isMethodHeading = (section: HtmlAst) => {\n    return (\n      section.children &&\n      section.children.length === 2 &&\n      DocPage.isTagName(section.children[0], 'a') &&\n      DocPage.isTagName(section.children[1], 'code')\n    );\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.renderAst = new RehypeReact({\n      createElement,\n      components: {\n        a: withProps({\n          transformUrl: this.transformInternalUrls,\n          persistLocale: false,\n        })(Link),\n        h1: headingWithSize('large'),\n        h2: headingWithSize('medium'),\n        h3: headingWithSize('normal'),\n        h4: headingWithSize('small'),\n        h5: headingWithSize('tiny'),\n        img: withProps({ project: props.data.project.name })(Image),\n        // remove toc from ast\n        ul: ({ ...ulProps }) =>\n          ulProps.className === 'md-toc' ? null : createElement('ul', ulProps),\n      },\n    }).Compiler;\n  }\n\n  getElementTextValue = (node?: HtmlAst) => {\n    if (node && node.children && node.children.length > 0) {\n      const textValues = node.children.map(child => {\n        if (child.children && child.children.length > 0) {\n          return this.getElementTextValue(child);\n        }\n        return child.value;\n      });\n      return textValues.join('');\n    }\n    return '';\n  };\n\n  getAllImages = (node: HtmlAst, imagePaths: Array<string> = []) => {\n    if (DocPage.isTagName(node, 'img') && node.properties) {\n      imagePaths.push(node.properties.src);\n    } else if (node.children && node.children.length > 0) {\n      node.children.map(child => this.getAllImages(child, imagePaths));\n    }\n    return imagePaths;\n  };\n\n  getToc = (node?: HtmlAst): HtmlAst => {\n    const defaultReturn = { type: 'element', tagName: 'div' };\n    if (node && node.children && node.children.length > 0) {\n      return (\n        node.children.find(\n          element =>\n            DocPage.isTagName(element, 'ul') &&\n            DocPage.hasClassname(element, 'md-toc'),\n        ) || defaultReturn\n      );\n    }\n    return defaultReturn;\n  };\n\n  transformInternalUrls = (href: string): string => {\n    const {\n      data: {\n        allProject: { edges: projectNodes },\n      },\n      pageContext: { slugPrefix },\n    } = this.props;\n    let url: string = href.toLowerCase();\n\n    // Get possible project slugs (both camelCase & lowercase for each project)\n    const projectNameSlugs: Array<string> = projectNodes.reduce(\n      (names, { node }) => {\n        names.push(slugify(node.name), slugify(node.name, { lower: true }));\n        return names;\n      },\n      [],\n    );\n\n    // Get the non-empty url parts\n    const urlParts: Array<string> = url.split('/').filter(part => !!part);\n\n    /*\n     * Docs links within the docs are written in 1 of 2 forms:\n     *     1) With locale (non-default): `/locale/projectSlug/docPageSlug/`\n     *     2) Without locale (default language): `/projectSlug/docPageSlug/`\n     */\n    const hasLocale: boolean = urlParts.length === 3;\n    const localePrefix: string = hasLocale ? `/${urlParts[0]}` : '';\n    const isDocPage: boolean = projectNameSlugs.some(projectName =>\n      url.startsWith(`${localePrefix}/${projectName}/`),\n    );\n    if (isDocPage && hasLocale) {\n      url = url.replace(localePrefix, '');\n    }\n    // If it's a doc page and a slug prefix is configured, add the prefix to the url\n    return isDocPage && slugPrefix\n      ? `${localePrefix}/${slugPrefix}${url}`\n      : url;\n  };\n\n  render() {\n    const {\n      data: { project, doc },\n    } = this.props;\n    if (doc.htmlAst.children) {\n      doc.htmlAst.children.forEach(section => {\n        if (DocPage.isTagName(section, 'h3')) {\n          if (DocPage.isMethodHeading(section) && section.properties) {\n            if (\n              section.properties.className &&\n              Array.isArray(section.properties.className)\n            ) {\n              section.properties.className.push(styles.methodHeading);\n            } else {\n              // eslint-disable-next-line no-param-reassign\n              section.properties.className = [styles.methodHeading];\n            }\n          }\n        }\n      });\n    }\n\n    const toc = this.getToc(doc.htmlAst);\n\n    const metaTitle = `${doc.frontmatter.title} - ${project.name}`;\n\n    const seoDescription =\n      (doc.htmlAst.children &&\n        doc.htmlAst.children.length > 0 &&\n        this.getElementTextValue(\n          doc.htmlAst.children.find(child => DocPage.isTagName(child, 'p')),\n        )) ||\n      metaTitle;\n\n    const seoImages = this.getAllImages(doc.htmlAst, [project.logo]);\n    return (\n      <DeveloperPortalLayout>\n        <Helmet>\n          <title>{metaTitle}</title>\n        </Helmet>\n        <SEO\n          title={metaTitle}\n          description={seoDescription}\n          images={seoImages}\n          project={project.name}\n          isDocPage\n        />\n        <div className={styles.main}>\n          <div className={styles.mainInnerContainer}>\n            <div className={styles.sidebar}>\n              <Sidebar\n                project={project}\n                tableOfContents={toc}\n                title={doc.frontmatter.title}\n              />\n            </div>\n            <main className={styles.content}>\n              <Content\n                commonHeadingAppearanceProps={commonHeadingAppearanceProps}\n                doc={doc}\n                project={project}\n              >\n                {this.renderAst(doc.htmlAst)}\n              </Content>\n              <DevRelCta editUrl={doc.editUrl} />\n            </main>\n          </div>\n        </div>\n      </DeveloperPortalLayout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query projectAndDocQuery($docId: String!, $projectName: String!) {\n    ...singleDocFragment\n    ...singleProjectFragment\n    ...allProjectNamesFragment\n  }\n`;\n\nexport default DocPage;\n","/* @flow */\nimport React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\n\nimport type { OutProps } from './types';\n\nimport styles from './Link.module.css';\n\nconst displayName = 'Link';\n\nconst Link = ({\n  arrow,\n  children,\n  className,\n  href,\n  intl: { formatMessage },\n  isInternal,\n  persistLocale,\n  text,\n  textValues,\n  transformUrl,\n  ...props\n}: OutProps) => {\n  const linkText =\n    typeof text === 'string' ? text : text && formatMessage(text, textValues);\n  const linkContent = linkText || children || null;\n  const classNames = className ? `${styles.main} ${className}` : styles.main;\n  return isInternal ? (\n    <GatsbyLink className={classNames} to={href} {...props}>\n      <span className={styles[arrow]}>{linkContent}</span>\n    </GatsbyLink>\n  ) : (\n    <a className={classNames} href={href} {...props}>\n      <span className={styles[arrow]}>{linkContent}</span>\n    </a>\n  );\n};\n\nLink.displayName = displayName;\n\nexport default Link;\n","/* @flow */\nimport type { HOC } from 'recompose';\n\nimport { compose, defaultProps, withProps } from 'recompose';\nimport { injectIntl } from 'react-intl';\n\nimport { DEFAULT_LOCALE } from '~i18nConfig';\n\nimport type { InProps } from './types';\n\nimport Link from './Link.jsx';\n\nconst enhance: HOC<*, InProps> = compose(\n  injectIntl,\n  defaultProps({ persistLocale: true }),\n  withProps(({ href: url, intl: { locale }, persistLocale, transformUrl }) => {\n    /*\n     * A url is only considered to be \"internal\" if it starts with one slash.\n     */\n    const isInternal = /^\\/(?!\\/)/.test(url);\n    /*\n     * On-page anchors are considered \"external\" by Gatsby.\n     */\n    const isOnPageAnchor = /^#(?!\\/)/.test(url);\n\n    let href: string =\n      isInternal && typeof transformUrl === 'function'\n        ? transformUrl(url)\n        : url;\n\n    const shouldPersistLocale: boolean =\n      isInternal && locale && locale !== DEFAULT_LOCALE;\n\n    if (persistLocale && shouldPersistLocale) {\n      href = `/${locale}${href}`;\n    }\n\n    return {\n      href,\n      isInternal,\n      rel: !isOnPageAnchor ? 'noopener noreferrer' : undefined,\n      target: !isOnPageAnchor ? '_blank' : undefined,\n    };\n  }),\n);\n\nexport default enhance(Link);\n","/* @flow */\nexport { default } from './Link';\n","/* @flow */\nimport type { Node } from 'react';\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport { getMainClasses } from '~utils/css';\nimport { getChildrenOrText } from '~utils/strings';\n\nimport styles from './Heading.module.css';\n\nexport type Appearance = {|\n  theme?: 'dark' | 'light' | 'invert' | 'primary' | 'grey',\n  margin?: 'none' | 'tiny' | 'small' | 'medium' | 'large' | 'double',\n  size?:\n    | 'tiny'\n    | 'small'\n    | 'normal'\n    | 'medium'\n    | 'mediumLarge'\n    | 'large'\n    | 'huge',\n  weight?: 'thin' | 'medium' | 'bold',\n|};\n\ntype ValidTagNames = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n\ntype Props = {\n  /** Appearance object */\n  appearance?: Appearance,\n  /** Used to extend the functionality of the component. This will not generate a title attribute on the element. */\n  children?: Node,\n  /** Injected by `injectIntl` */\n  intl: IntlShape,\n  /** String that will hard set the heading element to render */\n  tagName?: ValidTagNames,\n  /** A string or a `MessageDescriptor` that make up the headings's text */\n  text?: MessageDescriptor | string,\n  /** Values for text (react-intl interpolation) */\n  textValues?: Object,\n};\n\nconst displayName = 'Heading';\n\nconst Heading = ({\n  appearance = { size: 'huge' },\n  children,\n  intl,\n  tagName,\n  text,\n  textValues,\n  ...props\n}: Props) => {\n  const { size } = appearance;\n  const HeadingElement =\n    tagName ||\n    {\n      huge: 'h1',\n      large: 'h2',\n      medium: 'h3',\n      mediumLarge: 'h3',\n      normal: 'h4',\n      small: 'h5',\n      tiny: 'h6',\n    }[size || 'huge'];\n  const value = getChildrenOrText(children, text, textValues, intl);\n  return (\n    <HeadingElement\n      title={typeof value === 'string' ? value : undefined}\n      className={getMainClasses(appearance, styles)}\n      {...props}\n    >\n      {value}\n    </HeadingElement>\n  );\n};\n\nHeading.displayName = displayName;\n\nexport default injectIntl(Heading);\n","/* @flow */\nexport { default } from './Heading.jsx';\n\nexport * from './Heading.jsx';\n","/* @flow */\n/* eslint-disable import/prefer-default-export */\nimport camelcase from 'camelcase';\n\nimport { capitalize } from '../strings';\n\n/**\n * This function maps an appearance object onto CSS modules classes\n * The theme replaces the main class, the others will be treated as modifiers for the main class.\n * Example:\n *\n * appearance={{ theme: 'foo', colorSchema: 'dark', direction: 'horizontal' }}\n * yields\n * Component_themeFoo_xxx Component_colorSchemaDark_xxx Component_directionHorizontal_xxx\n *\n * appearance={{ colorSchema: 'dark', direction: 'horizontal' }}\n * yields\n * Component_main_xxx Component_colorSchemaDark_xxx Component_directionHorizontal_xxx\n *\n * @method getMainClasses\n *\n * @param {object} appearance Appearance object\n * @param {styleObject} CSS modules styles object\n *\n * @return {string} The composed class names string\n */\nexport const getMainClasses = (\n  appearance: Object = {},\n  styleObject: { [string]: string } = {},\n  state: { [string]: boolean } = {},\n) => {\n  const { theme, ...modifiers } = appearance;\n  const styleArray = [];\n  if (theme) {\n    const themeClass = `theme${capitalize(camelcase(theme))}`;\n    styleArray.push(styleObject[themeClass]);\n  } else {\n    styleArray.push(styleObject.main);\n  }\n  const modifierClasses = Object.keys(modifiers)\n    .map(key =>\n      modifiers[key]\n        ? styleObject[`${key}${capitalize(camelcase(modifiers[key]))}`]\n        : undefined,\n    )\n    .filter(i => !!i);\n  const stateClasses = Object.keys(state)\n    .map(key =>\n      state[key] ? styleObject[`state${capitalize(camelcase(key))}`] : '',\n    )\n    .filter(i => !!i);\n  return [...styleArray, ...modifierClasses, ...stateClasses].join(' ');\n};\n","/* @flow */\n/*\n * Pages\n */\nexport const PAGE_INDEX = '/';\nexport const PAGE_GET_STARTED_COLONYJS = '/colonyjs/intro-get-started';\nexport const PAGE_DEVELOPER_PORTAL = PAGE_INDEX;\nexport const PAGE_GET_INVOLVED = '/get-involved';\nexport const PAGE_LOGIN = '/login';\nexport const PAGE_MEDIA_KIT = '/media-kit';\nexport const PAGE_PRIVACY_POLICY = 'https://colony.io/terms/#privacy-policy';\nexport const PAGE_TERMS_SERVICE = 'https://colony.io/terms/';\nexport const PAGE_BUG_BOUNTY = '/colonynetwork/bug-bounty-program-overview';\n\n/*\n * Absolute\n */\nexport const COLONY_BLOG = 'https://blog.colony.io';\nexport const COLONY_DISCOURSE = 'https://build.colony.io';\nexport const COLONY_DISCOURSE_SUPPORT = `${COLONY_DISCOURSE}/c/support`;\nexport const COLONY_GITHUB = 'https://github.com/JoinColony';\nexport const COLONY_GITTER = 'https://gitter.im/JoinColony';\nexport const COLONY_GITTER_COLONYJS = `${COLONY_GITTER}/colonyJS`;\nexport const COLONY_REDDIT = 'https://www.reddit.com/r/joincolony/';\nexport const COLONY_TWITTER = 'https://twitter.com/joincolony';\nexport const COLONY_WEBSITE = 'https://colony.io';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/* @flow */\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { withPrefix } from 'gatsby';\n\nimport iconNames from './icons.json';\n\ntype Props = {|\n  /** Standard className */\n  className?: string,\n  /** Injected by `injectIntl` */\n  intl: IntlShape,\n  /** Name of the icon (all available names found in `icons.json`) */\n  name: string,\n  /** Standard html title attribute. Can be a string or a `messageDescriptor` */\n  title: MessageDescriptor | string,\n  /** Values for loading title (react-intl interpolation) */\n  titleValues?: Object,\n  /** Override the default viewBox */\n  viewBox?: string,\n|};\n\nconst getIcons = (map: Array<string>) =>\n  map.reduce((prev, current) => {\n    // eslint-disable-next-line no-param-reassign\n    prev[current] = withPrefix(`/img/${current}.svg#${current}`);\n    return prev;\n  }, {});\n\nconst icons = getIcons(iconNames);\n\nconst displayName = 'Icon';\n\nconst Icon = ({\n  className,\n  intl: { formatMessage },\n  name,\n  title,\n  titleValues,\n  viewBox: viewBoxOverride = '0 0 30 30',\n}: Props) => {\n  const icon = icons[name];\n  const titleText =\n    typeof title === 'string' ? title : formatMessage(title, titleValues);\n  return (\n    <i className={className} title={titleText}>\n      <svg viewBox={viewBoxOverride} role=\"img\" aria-label={titleText}>\n        <title>{titleText}</title>\n        <use xlinkHref={icon} />\n      </svg>\n    </i>\n  );\n};\n\nIcon.displayName = displayName;\n\nexport default injectIntl(Icon);\n","/* @flow */\nexport { default } from './Icon.jsx';\n","/* @flow */\nimport type { Node } from 'react';\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport Link from '~core/Link';\nimport { getMainClasses } from '~utils/css';\n\nimport styles from './Button.module.css';\n\ntype Appearance = {\n  theme?: 'primary' | 'primaryHollow' | 'reset',\n  padding?: 'small',\n};\n\ntype Props = {\n  /** Appearance object */\n  appearance?: Appearance,\n  /** `children` to render (only works if `text` is not set) */\n  children?: Node,\n  /** Overwriting class name(s). Setting this will overwrite the `appearance` object */\n  className?: string,\n  /** Injected by `injectIntl` */\n  intl: IntlShape,\n  /** Use a link instead of a button. Like `@reach/router`'s `to` property */\n  linkTo?: string,\n  /** A string or a `messageDescriptor` that make up the button's text label */\n  text?: MessageDescriptor | string,\n  /** Values for loading text (react-intl interpolation) */\n  textValues?: Object,\n  /** Standard html title attribute. Can be a string or a `messageDescriptor` */\n  title?: MessageDescriptor | string,\n  /** Values for loading title (react-intl interpolation) */\n  titleValues?: Object,\n  /** Button html type attribute */\n  type?: 'button' | 'submit',\n};\n\nconst displayName = 'Button';\n\nconst Button = ({\n  appearance = { theme: 'primary' },\n  children,\n  className,\n  intl: { formatMessage },\n  linkTo,\n  text,\n  textValues,\n  title,\n  titleValues,\n  type = 'button',\n  ...rest\n}: Props) => {\n  const classNames = className || getMainClasses(appearance, styles);\n  const titleText =\n    typeof title == 'string'\n      ? title\n      : title && formatMessage(title, titleValues);\n  const buttonText =\n    typeof text === 'string' ? text : text && formatMessage(text, textValues);\n\n  /*\n   * Fall-back to `null` since `text` and `children`\n   * are both technically optional.\n   */\n  const buttonContent = buttonText || children || null;\n\n  if (linkTo) {\n    return (\n      <Link className={classNames} href={linkTo} {...rest}>\n        {buttonContent}\n      </Link>\n    );\n  }\n\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <button className={classNames} title={titleText} type={type} {...rest}>\n      {buttonContent}\n    </button>\n  );\n};\n\nButton.displayName = displayName;\n\nexport default injectIntl(Button);\n","/* @flow */\nexport { default } from './Button.jsx';\n","/* @flow */\nimport { DEFAULT_LOCALE } from '~i18nConfig';\nimport type { Doc, Project, Section } from '~types';\n\ntype ProjectEdge = {|\n  node: Project,\n|};\n\nexport const orderDocs = (a: Doc, b: Doc): number =>\n  a.frontmatter.order - b.frontmatter.order;\n\nexport const orderSections = (\n  sectionOrder: Array<string>,\n  a: Section,\n  b: Section,\n): number =>\n  sectionOrder\n    ? sectionOrder.indexOf(a.slug) - sectionOrder.indexOf(b.slug)\n    : 0;\n\nexport const getSectionsForLocale = (\n  project: Project,\n  locale: string,\n): Array<Section> => {\n  let { sectionOrder: sectionOrderForLocale } = project;\n  if (locale !== DEFAULT_LOCALE && project.sectionTranslations) {\n    const localeTranslatedSectionConfig = project.sectionTranslations.find(\n      ({ locale: sectionTranslationLocale }) =>\n        sectionTranslationLocale === locale,\n    );\n    if (\n      localeTranslatedSectionConfig &&\n      localeTranslatedSectionConfig.sectionOrder\n    ) {\n      sectionOrderForLocale = localeTranslatedSectionConfig.sectionOrder;\n    }\n  }\n  return project.sections\n    .filter(({ docs }) =>\n      docs.some(({ fields: { locale: docLocale } }) => docLocale === locale),\n    )\n    .sort(orderSections.bind(null, sectionOrderForLocale));\n};\n\nexport const getDocsForLocale = (\n  docs: Array<Doc>,\n  locale: string,\n): Array<Doc> =>\n  docs.filter(doc => {\n    const {\n      fields: { locale: docLocale },\n    } = doc;\n    if (docLocale === locale) {\n      return true;\n    }\n    return false;\n  });\n\nexport const getProjectDescriptionForLocale = (\n  project: Project,\n  locale: string,\n): string => {\n  const projectOrLocaleDescription =\n    locale !== DEFAULT_LOCALE && project.descriptionTranslations\n      ? project.descriptionTranslations.find(\n          ({ locale: descriptionLocale }) => descriptionLocale === locale,\n        ) || project\n      : project;\n  return projectOrLocaleDescription.description;\n};\n\nexport const getProjectEntryPoint = (\n  project: Project,\n  locale: string,\n): string => {\n  let docSections = getSectionsForLocale(project, locale);\n  if (!docSections || !docSections.length) {\n    docSections = getSectionsForLocale(project, DEFAULT_LOCALE);\n  }\n  const { docs: firstSectionDocs } = docSections[0];\n  let docsForLocale = getDocsForLocale(firstSectionDocs, locale);\n  if (!docsForLocale || !docsForLocale.length) {\n    docsForLocale = getDocsForLocale(firstSectionDocs, DEFAULT_LOCALE);\n  }\n  const firstDoc = docsForLocale.sort(orderDocs)[0];\n  return (firstDoc && firstDoc.fields && firstDoc.fields.slug) || '/';\n};\n\nexport const transformProjectData = (edge: ProjectEdge, locale: string) => {\n  const edgeNode = edge.node;\n  edgeNode.entryPoint = getProjectEntryPoint(edge.node, locale);\n  return edgeNode;\n};\n","/* @flow */\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport FileContext from '~context/FileContext';\n\ntype Props = {\n  alt: MessageDescriptor | string,\n  altValues?: Object,\n  intl: IntlShape,\n  project?: string,\n  src: string,\n};\n\nconst displayName = 'Image';\n\nconst Image = ({\n  alt,\n  altValues,\n  intl: { formatMessage },\n  project,\n  src,\n  ...props\n}: Props) => {\n  const altText = typeof alt === 'string' ? alt : formatMessage(alt, altValues);\n  return (\n    <FileContext.Consumer>\n      {files => (\n        <img\n          {...props}\n          alt={altText}\n          src={\n            files && project && files[`${project}/${src}`]\n              ? files[`${project}/${src}`]\n              : src\n          }\n        />\n      )}\n    </FileContext.Consumer>\n  );\n};\n\nImage.displayName = displayName;\n\nexport default injectIntl(Image);\n","/* @flow */\nexport { default } from './Image.jsx';\n","/* @flow */\nimport type { Node } from 'react';\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\n/**\n * Capitalize a word (converts the first letter of the word to upper case)\n *\n * @method capitalize\n *\n * @param {string} word The word / string to capitalize\n * @return {string} The capitalized string\n */\nexport const capitalize = (word: string): string =>\n  word && word.charAt(0).toUpperCase() + word.slice(1);\n\nexport const getChildrenOrText = (\n  children?: Node,\n  text?: MessageDescriptor | string,\n  textValues?: Object,\n  { formatMessage }: IntlShape,\n): Node | string => {\n  if (children) {\n    return children;\n  }\n  if (!text) {\n    return '';\n  }\n  if (typeof text == 'string') {\n    return text;\n  }\n  return formatMessage(text, textValues);\n};\n","/* @flow */\nimport React from 'react';\n\nimport type { FileContext as FileContextType } from '~types';\n\nconst FileContext = React.createContext<FileContextType>({});\n\nexport default FileContext;\n","/* @flow */\nconst DEFAULT_LOCALE = 'en';\n\nconst CONFIGURED_LOCALES = [DEFAULT_LOCALE];\n\nmodule.exports = {\n  CONFIGURED_LOCALES,\n  DEFAULT_LOCALE,\n};\n","/* @flow */\nimport type { ComponentType } from 'react';\nimport type { CommonRouteProps } from '@reach/router';\n\nimport { Location } from '@reach/router';\nimport { fromRenderProps } from 'recompose';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const withLocation = () => (BaseComponent: ComponentType<Object>) =>\n  // $FlowFixMe\n  fromRenderProps(Location, (locationProps): CommonRouteProps => locationProps)(\n    BaseComponent,\n  );\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/* @flow */\nimport type { Node } from 'react';\nimport type { RouteProps } from '@reach/router';\nimport type { $npm$ReactIntl$LocaleData } from 'react-intl';\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport enLocaleData from 'react-intl/locale-data/en';\nimport { graphql, useStaticQuery, withPrefix } from 'gatsby';\n\nimport 'prism-themes/themes/prism-base16-ateliersulphurpool.light.css';\n\nimport FileContext from '~context/FileContext';\nimport { CONFIGURED_LOCALES, DEFAULT_LOCALE } from '~i18nConfig';\nimport enMessages from '~i18n/en.json';\n\nimport '~styles/normalize.css';\nimport '~styles/fonts.css';\nimport '~styles/syntax-hightlight.css';\n\ntype LocaleMessage = { [key: string]: string };\n\ntype LocaleConfig = {|\n  messages: LocaleMessage,\n  data: $npm$ReactIntl$LocaleData,\n|};\n\ntype LocaleConfigs = {\n  [locale: string]: LocaleConfig,\n};\n\nexport type GlobalLayoutProps = {\n  children: Node,\n};\n\ntype Props = RouteProps & GlobalLayoutProps;\n\nconst localeMessages: LocaleConfigs = {\n  en: {\n    messages: enMessages,\n    data: enLocaleData,\n  },\n};\n\nconst configuredLocalesData: Array<$npm$ReactIntl$LocaleData> = Object.keys(\n  localeMessages,\n).reduce(\n  (accumulator, configKey) => [\n    ...accumulator,\n    ...localeMessages[configKey].data,\n  ],\n  [],\n);\n\naddLocaleData(configuredLocalesData);\n\nconst getMessagesForLocale = (locale: string): LocaleMessage =>\n  localeMessages[locale].messages || localeMessages[DEFAULT_LOCALE].messages;\n\nconst getLocaleString = (locale?: string): string =>\n  !!locale && !!localeMessages[locale] ? locale : DEFAULT_LOCALE;\n\nconst getFileMapping = (files): Object => {\n  return files.reduce(\n    (current, next) => ({\n      ...current,\n      [`${next.node.sourceInstanceName}/${next.node.relativePath}`]: next.node\n        .publicURL,\n    }),\n    {},\n  );\n};\n\n/*\n * Check that the configured locales in `~i18nConfig` match the locale messages\n * configured here with the `IntlProvider`. If locales aren't configured, accessing\n * those locales on gatsby pages will yield a 404 (doc pages will likely work partially).\n *\n * This will merely `warn` to the console of the issue, as this shouldn't be a breaking\n * error.\n */\nconst checkLocaleConfig = (): void => {\n  const configuredMessageLocales: Array<string> = Object.keys(localeMessages);\n  const localesWithoutMessages: Array<string> = CONFIGURED_LOCALES.filter(\n    locale => configuredMessageLocales.indexOf(locale) === -1,\n  );\n  if (localesWithoutMessages.length > 0) {\n    const missingLocalesString: string = localesWithoutMessages.reduce(\n      (accumulator, locale) => {\n        let localesString = accumulator;\n        localesString += accumulator.length > 0 ? `, ${locale}` : locale;\n        return localesString;\n      },\n      '',\n    );\n    console.warn(\n      'i18n messages have not been configured with' +\n        ' the IntlProvider for the following locales:',\n      missingLocalesString,\n      '\\n\\nAs a result, translated content & links may be inconsistent' +\n        ' across the site. To supress this warning, add locale messages' +\n        ' for the above locales in the `GlobalLayout` component.',\n    );\n  }\n};\n\ncheckLocaleConfig();\n\nconst displayName = 'layouts.GlobalLayout';\n\nconst GlobalLayout = ({ children, location }: Props) => {\n  const potentialLocale = location && location.pathname.split('/')[1];\n  const locale = getLocaleString(potentialLocale);\n  const messages: LocaleMessage = getMessagesForLocale(locale);\n  const data = useStaticQuery(graphql`\n    query {\n      files: allFile {\n        edges {\n          node {\n            sourceInstanceName\n            relativePath\n            publicURL\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <>\n      <Helmet>\n        <link\n          rel=\"shortcut icon\"\n          type=\"image/png\"\n          href={withPrefix('/img/favicon.ico')}\n        />\n        <script src={withPrefix('/js/fontloader.js')} />\n      </Helmet>\n      <FileContext.Provider value={getFileMapping(data.files.edges)}>\n        <IntlProvider\n          locale={locale}\n          defaultLocale={DEFAULT_LOCALE}\n          messages={messages}\n        >\n          {children}\n        </IntlProvider>\n      </FileContext.Provider>\n    </>\n  );\n};\n\nGlobalLayout.displayName = displayName;\n\nexport default GlobalLayout;\n","/* @flow */\nimport { withLocation } from '~hoc/location';\n\nimport GlobalLayout from './GlobalLayout.jsx';\n\nexport default withLocation()(GlobalLayout);\n","/* @flow */\nexport { default } from './GlobalLayout';\n","/* @flow */\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React, { Component, createRef } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport 'docsearch.js/dist/cdn/docsearch.min.css';\n\nimport Button from '~core/Button';\nimport Icon from '~core/Icon';\nimport { getMainClasses } from '~utils/css';\n\nimport {\n  docSearchApiKey,\n  docSearcIndexName,\n} from '../../../../docsearch-settings';\n\nimport styles from './Search.module.css';\nimport './algolia-overrides.css';\n\nconst MSG = defineMessages({\n  defaultPlaceholderText: {\n    id: 'Search.defaultPlaceholderText',\n    defaultMessage: 'Search',\n  },\n});\n\ntype Appearance = {|\n  theme?: 'light',\n  type?: 'quickSearch',\n|};\n\ntype Props = {|\n  appearance?: Appearance,\n  /** Required by `docsearch`, can't be dynamic because of static build process */\n  inputId: string,\n  /** Injected by `injectIntl` */\n  intl: IntlShape,\n  placeholderText: MessageDescriptor | string,\n  placeholderTextValues?: Object,\n|};\n\ntype State = {|\n  isEnabled: boolean,\n|};\n\nclass Search extends Component<Props, State> {\n  inputRef: { current: null | HTMLInputElement };\n\n  static defaultProps = {\n    placeholderText: MSG.defaultPlaceholderText,\n  };\n\n  static displayName = 'Search';\n\n  constructor(props) {\n    super(props);\n\n    this.inputRef = createRef();\n  }\n\n  state = {\n    isEnabled: true,\n  };\n\n  componentDidMount() {\n    if (typeof window !== 'undefined') {\n      const { inputId } = this.props;\n      import(/* webpackChunkName: \"docSearch\" */ 'docsearch.js').then(\n        ({ default: docsearch }) => {\n          docsearch({\n            apiKey: docSearchApiKey,\n            indexName: docSearcIndexName,\n            inputSelector: `#${inputId}`,\n          });\n        },\n      );\n    } else {\n      this.setState({ isEnabled: false });\n    }\n  }\n\n  focusInput = () => {\n    if (this.inputRef && this.inputRef.current) {\n      this.inputRef.current.focus();\n    }\n  };\n\n  render() {\n    const {\n      appearance,\n      inputId,\n      intl: { formatMessage },\n      placeholderText,\n      placeholderTextValues,\n    } = this.props;\n    const { isEnabled } = this.state;\n    const placeholderTextContent =\n      typeof placeholderText === 'string'\n        ? placeholderText\n        : formatMessage(placeholderText, placeholderTextValues);\n    const isQuickSearch = appearance && appearance.type === 'quickSearch';\n    return isEnabled ? (\n      <div className={getMainClasses(appearance, styles)}>\n        <input\n          className={styles.searchInput}\n          id={inputId}\n          placeholder={placeholderTextContent}\n          ref={this.inputRef}\n          title={placeholderTextContent}\n          type=\"text\"\n        />\n        {isQuickSearch && (\n          <Button\n            appearance={{ theme: 'reset' }}\n            onClick={this.focusInput}\n            /*\n             * Because the adjacent `input` is naturally focusable,\n             * let's disable tabstop on this button.\n             */\n            tabIndex=\"-1\"\n          >\n            <Icon\n              className={styles.quickSearchIcon}\n              name=\"search\"\n              title={placeholderTextContent}\n              viewBox=\"0 0 25 34\"\n            />\n          </Button>\n        )}\n      </div>\n    ) : null;\n  }\n}\n\nexport default injectIntl(Search);\n","/* @flow */\nexport const docSearchApiKey = 'bda3b62b0c5a0d2028abfaebbb651336';\nexport const docSearcIndexName = 'colony';\n","/* @flow */\nexport { default } from './Search.jsx';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/* @flow */\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport Button from '~core/Button';\nimport { getMainClasses } from '~utils/css';\n\nimport styles from './NavigationToggle.module.css';\n\nconst MSG = defineMessages({\n  btnTitleToggleNavigation: {\n    id: 'NavigationToggle.btnTitleToggleNavigation',\n    defaultMessage: 'Toggle Navigation',\n  },\n});\n\ntype Appearance = {|\n  /*\n   * Hides this component at a given viewport size (and up). Will\n   * be visible at all viewport sizes below this value.\n   */\n  hideAtSize?: 'small' | 'medium' | 'large',\n  theme?: 'light',\n|};\n\ntype Props = {|\n  appearance?: Appearance,\n  isNavOpen: boolean,\n  onClick: (evt: SyntheticEvent<HTMLButtonElement>) => void,\n|};\n\nconst displayName = 'NavigationToggle';\n\nconst NavigationToggle = ({ appearance, isNavOpen, onClick }: Props) => (\n  <div\n    className={getMainClasses(appearance, styles, {\n      isNavOpen,\n    })}\n  >\n    <Button\n      aria-hidden\n      className={styles.mobileIcon}\n      onClick={onClick}\n      title={MSG.btnTitleToggleNavigation}\n    >\n      <span className={styles.mobileIconLine} />\n      <span className={styles.mobileIconLine} />\n      <span className={styles.mobileIconLine} />\n      <span className={styles.mobileIconLine} />\n    </Button>\n  </div>\n);\n\nNavigationToggle.displayName = displayName;\n\nexport default NavigationToggle;\n","/* @flow */\nimport camelcase from 'camelcase';\n\nimport { capitalize } from '~utils/strings';\n\n/**\n * This is a stripped down version of the `getMainClasses` method, that is specifically\n * designed to generate the classes required to properly render the Popover\n * Component's various arrows.\n *\n * @NOTE It won't work anywhere else, and in all fairness it should be placed\n * inside the actual component, but to preserve code cleanliness, I've placed\n * it here.\n *\n * @method getPopoverArrowClasses\n *\n * @param {object} appearance Appearance object\n * @param {placement} string Positioning of the arrow (this is reversed from in the Popover)\n * @param {styleObject} CSS modules styles object\n *\n * @return {string} The string of classes to pass down to the arrow element\n */\nconst getPopoverArrowClasses = (\n  { theme }: Object = {},\n  placement: string,\n  styleObject: { [string]: string } = {},\n) => {\n  /*\n   * @NOTE Arrows have the position encoded in the class's name\n   */\n  const placementClass = `${camelcase(placement)}Arrow`;\n  const styleArray = [styleObject[placementClass]];\n  if (theme) {\n    /*\n     * @NOTE Arrows have the theme name encoded in the class's name (which also\n     * has the position encoded, as above)\n     */\n    const themeClass = `theme${capitalize(theme)}${capitalize(placementClass)}`;\n    styleArray.push(styleObject[themeClass]);\n  }\n  return styleArray.join(' ');\n};\n\nexport default getPopoverArrowClasses;\n","/* @flow */\nimport type { Node } from 'react';\nimport type { PopperArrowProps } from 'react-popper';\nimport React from 'react';\n\n// eslint-disable-next-line import/no-cycle\nimport type { Appearance as PopoverAppearance, Placement } from './Popover.jsx';\n\nimport { getMainClasses } from '~utils/css';\nimport getPopoverArrowClasses from './getPopoverArrowClasses';\n\nimport styles from './PopoverWrapper.module.css';\n\ntype Appearance = PopoverAppearance & {\n  placement?: Placement,\n};\n\ntype ArrowProps = PopperArrowProps & {\n  showArrow: boolean,\n};\n\ntype Props = {|\n  appearance?: Appearance,\n  arrowProps: ArrowProps,\n  children: Node,\n  id: string,\n  innerRef: (?HTMLElement) => void,\n  onFocus: (evt: SyntheticFocusEvent<HTMLElement>) => void,\n  retainRefFocus?: boolean,\n  placement: string,\n  style: any,\n  wrapperClassName?: string,\n|};\n\nconst PopoverWrapper = ({\n  appearance,\n  arrowProps,\n  children,\n  id,\n  innerRef,\n  onFocus,\n  placement,\n  retainRefFocus,\n  style,\n  wrapperClassName = '',\n}: Props) => (\n  <div\n    className={`${getMainClasses(appearance, styles, {\n      hideArrow: !arrowProps.showArrow,\n      showArrow: arrowProps.showArrow,\n    })} ${wrapperClassName}`}\n    id={id}\n    role=\"tooltip\"\n    ref={innerRef}\n    style={style}\n    data-placement={placement}\n    tabIndex={retainRefFocus ? '-1' : null}\n    onFocus={onFocus}\n  >\n    {children}\n    <span\n      className={getPopoverArrowClasses(appearance, placement, styles)}\n      ref={arrowProps.ref}\n      style={arrowProps.style}\n    />\n  </div>\n);\n\nexport default PopoverWrapper;\n","/* @flow */\nimport type { Node as ReactNode } from 'react';\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React, { Component } from 'react';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport { injectIntl } from 'react-intl';\nimport nanoid from 'nanoid';\n\nimport type { ReactRef } from './types';\n\n// eslint-disable-next-line import/no-cycle\nimport PopoverWrapper from './PopoverWrapper.jsx';\n\nexport type Placement =\n  | 'auto'\n  | 'top'\n  | 'right'\n  | 'bottom'\n  | 'bottom-end'\n  | 'left';\n\ntype RefObj = { ref: ReactRef };\n\nexport type Appearance = {\n  theme: 'dark' | 'grey',\n};\n\nexport type PopoverTrigger = ({\n  ref: ReactRef,\n  id: string,\n  isOpen: boolean,\n  open: () => void,\n  close: () => void,\n  toggle: () => void,\n}) => ReactNode;\n\nexport type Props = {|\n  appearance?: Appearance,\n  /** Child element to trigger the popover */\n  children: React$Element<*> | PopoverTrigger,\n  /** Whether the popover should close when clicking anywhere */\n  closeOnOutsideClick?: boolean,\n  /** Popover content */\n  content:\n    | ReactNode\n    | MessageDescriptor\n    | (({ close: () => void }) => ReactNode),\n  /** Values for content (react-intl interpolation) */\n  contentValues?: Object,\n  /** Set the open state from outside */\n  isOpen?: boolean,\n  /** Called when Popover closes */\n  onClose?: (data?: any, modifiers?: { cancelled: boolean }) => void,\n  /** Delay opening of popover for `openDelay` ms */\n  openDelay?: number,\n  /** Popover placement */\n  placement?: Placement,\n  /** Options to pass through the <Popper> element. See here: https://github.com/FezVrasta/react-popper#api-documentation */\n  popperProps?: Object,\n  /** Whether the reference element should retain focus when popover is open (only for `HTMLInputElements`) */\n  retainRefFocus?: boolean,\n  /** Whether there should be an arrow on the popover */\n  showArrow: boolean,\n  /** How the popover gets triggered. Won't work when using a render prop as `children` */\n  trigger?: 'hover' | 'click' | 'disabled',\n  /** @ignore injected by `react-intl` */\n  intl: IntlShape,\n  /** `className` to be used IN ADDITION TO the normal wrapper classNames */\n  wrapperClassName?: string,\n|};\n\ntype State = {\n  isOpen: boolean,\n};\n\nclass Popover extends Component<Props, State> {\n  refNode: ?HTMLElement;\n\n  contentNode: ?HTMLElement;\n\n  id: string;\n\n  openTimeout: TimeoutID;\n\n  static displayName = 'Popover';\n\n  static defaultProps = {\n    closeOnOutsideClick: true,\n    placement: 'top',\n    showArrow: true,\n    trigger: 'click',\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.id = nanoid();\n    this.state = {\n      isOpen: props.isOpen || false,\n    };\n  }\n\n  componentDidUpdate(\n    { closeOnOutsideClick, isOpen: prevIsOpenProp, trigger },\n    { isOpen: prevOpen },\n  ) {\n    const { isOpen: isOpenProp } = this.props;\n    const { isOpen } = this.state;\n    if (\n      isOpen &&\n      !prevOpen &&\n      closeOnOutsideClick &&\n      document.body &&\n      (trigger === 'click' || !trigger)\n    ) {\n      document.body.addEventListener('click', this.handleOutsideClick, true);\n    } else if (!isOpen && prevOpen) {\n      this.removeOutsideClickListener();\n    }\n    if (isOpenProp !== prevIsOpenProp) {\n      // We are guarded perfectly fine against this, only when the outside prop changes we change the state as well\n      // Maybe there's a better way that I'm not seeing right now\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        isOpen: isOpenProp,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeOutsideClickListener();\n  }\n\n  removeOutsideClickListener = () => {\n    if (document.body) {\n      document.body.removeEventListener('click', this.handleOutsideClick, true);\n    }\n  };\n\n  getChildProps = (ref: ReactRef) => {\n    const { id } = this;\n    const { children, trigger } = this.props;\n    const { isOpen } = this.state;\n    const childProps: {\n      'aria-describedby': ?string,\n      innerRef?: ReactRef,\n      ref?: ReactRef,\n    } = {\n      'aria-describedby': isOpen ? id : null,\n    };\n    if (typeof children.type == 'function') {\n      childProps.innerRef = ref;\n    } else {\n      childProps.ref = ref;\n    }\n    return Object.assign(\n      {},\n      childProps,\n      trigger\n        ? {\n            hover: {\n              onMouseEnter: this.requestOpen,\n              onMouseLeave: this.close,\n            },\n            click: { onClick: this.toggle },\n            disabled: null,\n          }[trigger]\n        : null,\n    );\n  };\n\n  handleOutsideClick = (evt: MouseEvent) => {\n    if (\n      (evt.target instanceof HTMLElement &&\n        this.contentNode &&\n        this.contentNode.contains(evt.target)) ||\n      (evt.target instanceof HTMLElement &&\n        this.refNode &&\n        this.refNode.contains(evt.target))\n    ) {\n      return;\n    }\n    this.close();\n  };\n\n  requestOpen = () => {\n    const { isOpen } = this.state;\n    const { openDelay } = this.props;\n    if (isOpen) {\n      return;\n    }\n    if (openDelay) {\n      this.openTimeout = setTimeout(this.open.bind(this), openDelay);\n      return;\n    }\n    this.open();\n  };\n\n  open = () => {\n    const { isOpen } = this.state;\n    if (isOpen) return;\n    this.setState({ isOpen: true });\n  };\n\n  close = (data?: any, modifiers?: { cancelled: boolean }) => {\n    const { onClose } = this.props;\n    const { isOpen } = this.state;\n    clearTimeout(this.openTimeout);\n    if (!isOpen) return;\n    this.setState({ isOpen: false });\n    if (typeof onClose == 'function') onClose(data, modifiers);\n  };\n\n  toggle = () => {\n    const { isOpen } = this.state;\n    if (isOpen) {\n      return this.close();\n    }\n    return this.requestOpen();\n  };\n\n  registerRefNode = (node: ?HTMLElement | ?HTMLInputElement) => {\n    this.refNode = node;\n  };\n\n  registerContentNode = (node: ?HTMLElement) => {\n    this.contentNode = node;\n  };\n\n  handleWrapperFocus = () => {\n    const { retainRefFocus } = this.props;\n    if (retainRefFocus && this.refNode instanceof HTMLInputElement) {\n      this.refNode.focus();\n    }\n  };\n\n  renderReference = () => {\n    const { children } = this.props;\n    const { isOpen } = this.state;\n    const { id, requestOpen, close, toggle } = this;\n\n    if (typeof children == 'function') {\n      return ({ ref }: RefObj) =>\n        children({ ref, id, isOpen, open: requestOpen, close, toggle });\n    }\n    return ({ ref }: RefObj) =>\n      React.cloneElement(children, this.getChildProps(ref));\n  };\n\n  renderContent = () => {\n    const {\n      content,\n      contentValues,\n      intl: { formatMessage },\n    } = this.props;\n    if (typeof content == 'string') {\n      return content;\n    }\n    if (typeof content == 'function') {\n      return content({ close: this.close });\n    }\n    if (React.isValidElement(content)) {\n      return content;\n    }\n    // How to tell flow that this can only be a MessageDescriptor in this case?\n    // $FlowFixMe - might be related to https://github.com/facebook/flow/issues/4775\n    return formatMessage(content, contentValues);\n  };\n\n  render() {\n    const {\n      appearance,\n      placement: origPlacement,\n      popperProps,\n      retainRefFocus,\n      showArrow,\n      wrapperClassName,\n    } = this.props;\n\n    const { isOpen } = this.state;\n    const content = this.renderContent();\n    return (\n      <Manager>\n        <Reference innerRef={this.registerRefNode}>\n          {this.renderReference()}\n        </Reference>\n        {isOpen && (\n          <Popper\n            innerRef={this.registerContentNode}\n            placement={origPlacement}\n            {...popperProps}\n          >\n            {({ ref, style, arrowProps }) => (\n              // $FlowFixMe see above renderContent\n              <PopoverWrapper\n                appearance={{ ...appearance, placement: origPlacement }}\n                id={this.id}\n                innerRef={ref}\n                style={style}\n                placement={origPlacement}\n                arrowProps={{\n                  ...arrowProps,\n                  showArrow,\n                }}\n                onFocus={this.handleWrapperFocus}\n                retainRefFocus={retainRefFocus}\n                wrapperClassName={wrapperClassName}\n              >\n                {content}\n              </PopoverWrapper>\n            )}\n          </Popper>\n        )}\n      </Manager>\n    );\n  }\n}\n\nexport default injectIntl(Popover);\n","/* @flow */\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport slugify from 'slugify';\n\nimport type { Appearance as HeadingAppearance } from '~core/Heading';\nimport type { InProps as LinkProps } from '~core/Link/types';\nimport { getMainClasses } from '~utils/css';\n\nimport Heading from '~core/Heading';\nimport Link from '~core/Link';\n\nimport styles from './VerticalMenu.module.css';\n\nconst MSG = defineMessages({\n  navAriaLabelDefault: {\n    id: 'VerticalMenu.navAriaLabelDefault',\n    defaultMessage: 'Alternate Navigation',\n  },\n});\n\ntype Appearance = {|\n  /*\n   * Only has impact if `numColumns` is provided, and > 1.\n   *\n   * Since responsiveness is mobile-first, this will determine at\n   * which viewport size (and up) the menu will be multi-column.\n   *\n   * Below this size, items will be in 1 column.\n   */\n  expandForViewport?: 'small' | 'medium' | 'large',\n  margins?: 'none' | 'small' | 'large',\n|};\n\ntype Props = {|\n  appearance?: Appearance,\n  headingAppearance?: HeadingAppearance,\n  headingText?: MessageDescriptor | string,\n  headingTextValues?: Object,\n  /* Injected via `injectIntl` */\n  intl: IntlShape,\n  menuItems: Array<LinkProps>,\n  numColumns?: number,\n|};\n\nconst displayName = 'VerticalMenu';\n\nconst VerticalMenu = ({\n  appearance,\n  headingAppearance = {},\n  headingText,\n  headingTextValues,\n  intl: { formatMessage },\n  menuItems,\n  numColumns = 1,\n}: Props) => {\n  const columnStyles = {\n    columnCount: `${numColumns}`,\n  };\n  const labelText =\n    typeof headingText === 'string'\n      ? headingText\n      : headingText && formatMessage(headingText, headingTextValues);\n  const ariaProps = {};\n  if (labelText) {\n    ariaProps['aria-labelledby'] = slugify(labelText);\n  } else {\n    ariaProps['aria-label'] = formatMessage(MSG.navAriaLabelDefault);\n  }\n  return (\n    <div className={getMainClasses(appearance, styles)}>\n      {headingText && (\n        <Heading\n          appearance={{\n            margin: 'small',\n            size: 'normal',\n            weight: 'medium',\n            ...headingAppearance,\n          }}\n          id={slugify(labelText)}\n          text={headingText}\n          textValues={headingTextValues}\n        />\n      )}\n      {menuItems && menuItems.length > 0 && (\n        <nav\n          className={styles.menu}\n          role=\"navigation\"\n          style={columnStyles}\n          {...ariaProps}\n        >\n          {menuItems.map(menuItemProps => (\n            <div key={menuItemProps.href} className={styles.menuItem}>\n              <Link {...menuItemProps} />\n            </div>\n          ))}\n        </nav>\n      )}\n    </div>\n  );\n};\n\nVerticalMenu.displayName = displayName;\n\nexport default injectIntl(VerticalMenu);\n","/* @flow */\nimport type { IntlShape } from 'react-intl';\n\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport type { Project } from '~types';\n\nimport Heading from '~core/Heading';\nimport Image from '~core/Image';\nimport Link from '~core/Link';\nimport VerticalMenu from '~core/VerticalMenu';\n\nimport styles from './DocsDropdownContent.module.css';\n\nconst MSG = defineMessages({\n  ariaLabel: {\n    id: 'layouts.DeveloperPortalLayout.DocsDropdownContent.ariaLabel',\n    defaultMessage: 'Docs Menu',\n  },\n  heroTitle: {\n    id: 'layouts.DeveloperPortalLayout.DocsDropdownContent.heroTitle',\n    defaultMessage: 'Start building with Colony',\n  },\n  heroSubTitle: {\n    id: 'layouts.DeveloperPortalLayout.DocsDropdownContent.heroSubTitle',\n    defaultMessage: 'Get started',\n  },\n  headingCoreProducts: {\n    id: 'layouts.DeveloperPortalLayout.DocsDropdownContent.headingCoreProducts',\n    defaultMessage: 'Colony Core',\n  },\n  headingOpenSourceProducts: {\n    id:\n      // eslint-disable-next-line max-len\n      'layouts.DeveloperPortalLayout.DocsDropdownContent.headingOpenSourceProducts',\n    defaultMessage: 'Open Source Tools',\n  },\n});\n\nconst getProjectLinks = ({ entryPoint, name }: Project) => ({\n  href: entryPoint,\n  text: name,\n});\n\ntype Props = {|\n  coreProjects: Array<Project>,\n  intl: IntlShape,\n  openSourceProjects: Array<Project>,\n|};\n\nconst displayName = 'layouts.DeveloperPortalLayout.DocsDropdownContent';\n\nconst DocsDropdownContent = ({\n  coreProjects,\n  intl: { formatMessage },\n  openSourceProjects,\n}: Props) => {\n  const coreProjectsLinks = coreProjects.map(getProjectLinks);\n  const openSourceProjectsLinks = openSourceProjects.map(getProjectLinks);\n  const featureProject = coreProjects.find(({ name }) => name === 'colonyJS');\n  const ariaLabel = formatMessage(MSG.ariaLabel);\n  return (\n    <div className={styles.main} aria-label={ariaLabel}>\n      {featureProject && (\n        <Link className={styles.heroLink} href={featureProject.entryPoint}>\n          <div className={styles.hero}>\n            <div className={styles.logoContainer}>\n              <Image\n                alt={featureProject.name}\n                className={styles.logo}\n                project={featureProject.name}\n                src={featureProject.logoSmall}\n              />\n            </div>\n            <div className={styles.cta}>\n              <Heading\n                appearance={{\n                  margin: 'none',\n                  size: 'small',\n                  theme: 'light',\n                  weight: 'thin',\n                }}\n                text={MSG.heroSubTitle}\n              />\n              <Heading\n                appearance={{\n                  margin: 'none',\n                  size: 'medium',\n                  theme: 'dark',\n                  weight: 'thin',\n                }}\n                text={MSG.heroTitle}\n              />\n            </div>\n          </div>\n        </Link>\n      )}\n      <div className={styles.menuContent}>\n        <div className={styles.menuContainer}>\n          <VerticalMenu\n            appearance={{ margins: 'small' }}\n            headingAppearance={{\n              size: 'small',\n              theme: 'light',\n              weight: 'thin',\n            }}\n            headingText={MSG.headingCoreProducts}\n            menuItems={coreProjectsLinks}\n          />\n        </div>\n        <div className={styles.menuContainer}>\n          <VerticalMenu\n            appearance={{ expandForViewport: 'medium', margins: 'small' }}\n            headingAppearance={{\n              size: 'small',\n              theme: 'light',\n              weight: 'thin',\n            }}\n            headingText={MSG.headingOpenSourceProducts}\n            menuItems={openSourceProjectsLinks}\n            numColumns={2}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDocsDropdownContent.displayName = displayName;\n\nexport default DocsDropdownContent;\n","/* @flow */\nimport type { IntlShape } from 'react-intl';\n\nimport React, { useState } from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport type { Project } from '~types';\n\nimport Button from '~core/Button';\nimport Icon from '~core/Icon';\nimport Link from '~core/Link';\nimport NavigationToggle from '~core/NavigationToggle';\nimport Popover from '~core/Popover';\nimport Search from '~core/Search';\nimport DocsDropdownContent from '~layouts/DeveloperPortalLayout/DocsDropdownContent';\nimport { COLONY_DISCOURSE_SUPPORT, PAGE_DEVELOPER_PORTAL } from '~routes';\n\nimport styles from './Header.module.css';\n\nconst MSG = defineMessages({\n  imageAltDevPortal: {\n    id: 'layouts.DeveloperPortalLayout.Header.imageAltDevPortal',\n    defaultMessage: 'Colony Developer Portal',\n  },\n  navAriaLabel: {\n    id: 'layouts.DeveloperPortalLayout.Header.navAriaLabel',\n    defaultMessage: 'Main Navigation',\n  },\n  navLinkDocs: {\n    id: 'layouts.DeveloperPortalLayout.Header.navLinkDocs',\n    defaultMessage: 'Docs',\n  },\n  navLinkSupport: {\n    id: 'layouts.DeveloperPortalLayout.Header.navLinkSupport',\n    defaultMessage: 'Support',\n  },\n});\n\ntype Props = {|\n  coreProjects: Array<Project>,\n  /* Injected via `injectIntl` */\n  intl: IntlShape,\n  openSourceProjects: Array<Project>,\n|};\n\nconst displayName = 'layouts.DeveloperPortalLayout.Header';\n\nconst Header = ({\n  coreProjects,\n  intl: { formatMessage },\n  intl,\n  openSourceProjects,\n}: Props) => {\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const navAriaLabel = formatMessage(MSG.navAriaLabel);\n  return (\n    <div className={styles.main}>\n      <div className={styles.menuWrapper}>\n        <Link href={PAGE_DEVELOPER_PORTAL}>\n          <Icon\n            className={styles.logo}\n            name=\"developerPortal_white\"\n            title={MSG.imageAltDevPortal}\n            viewBox=\"0 0 134 33\"\n          />\n        </Link>\n        <div aria-expanded={isNavOpen} className={styles.navContainer}>\n          <nav\n            className={styles.navigation}\n            role=\"navigation\"\n            aria-label={navAriaLabel}\n          >\n            <span className={`${styles.navLink} ${styles.docsDropdownParent}`}>\n              <Button appearance={{ theme: 'reset' }}>\n                <Popover\n                  appearance={{ theme: 'grey' }}\n                  content={() => (\n                    <DocsDropdownContent\n                      coreProjects={coreProjects}\n                      intl={intl}\n                      openSourceProjects={openSourceProjects}\n                    />\n                  )}\n                  /*\n                   * `isOpen` is always true for a11y purposes. This ensures the dropdown\n                   * menu is always in the DOM, and visibility is controlled via CSS.\n                   */\n                  isOpen\n                  placement=\"bottom-end\"\n                  popperProps={{\n                    modifiers: {\n                      offset: {\n                        offset: '140px',\n                      },\n                    },\n                  }}\n                  trigger=\"disabled\"\n                  wrapperClassName={styles.docsDropdownContainer}\n                >\n                  <div className={styles.dropdownParent} aria-haspopup=\"true\">\n                    <FormattedMessage {...MSG.navLinkDocs} />\n                  </div>\n                </Popover>\n              </Button>\n              <div className={styles.mobileDocsDropdown}>\n                <DocsDropdownContent\n                  coreProjects={coreProjects}\n                  intl={intl}\n                  openSourceProjects={openSourceProjects}\n                />\n              </div>\n            </span>\n            <Link\n              className={styles.navLink}\n              href={COLONY_DISCOURSE_SUPPORT}\n              text={MSG.navLinkSupport}\n            />\n          </nav>\n          <div className={styles.searchContainer}>\n            <Search\n              appearance={{ theme: 'light', type: 'quickSearch' }}\n              inputId=\"devPortalLayoutHeaderSearch\"\n            />\n          </div>\n        </div>\n        <div className={styles.navToggle}>\n          <NavigationToggle\n            appearance={{ hideAtSize: 'medium', theme: 'light' }}\n            isNavOpen={isNavOpen}\n            onClick={() => setIsNavOpen(!isNavOpen)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeader.displayName = displayName;\n\nexport default injectIntl(Header);\n","/* @flow */\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport type { Project } from '~types';\n\nimport Icon from '~core/Icon';\nimport Link from '~core/Link';\nimport VerticalMenu from '~core/VerticalMenu';\nimport {\n  COLONY_BLOG,\n  COLONY_DISCOURSE,\n  COLONY_GITHUB,\n  COLONY_GITTER,\n  COLONY_TWITTER,\n  COLONY_WEBSITE,\n  PAGE_PRIVACY_POLICY,\n  PAGE_TERMS_SERVICE,\n} from '~routes';\n\nimport styles from './Footer.module.css';\n\nconst MSG = defineMessages({\n  linkVisitColony: {\n    id: 'layouts.DeveloperPortalLayout.Footer.linkVisitColony',\n    defaultMessage: 'Visit {domain}',\n  },\n  navTitleGetStarted: {\n    id: 'layouts.DeveloperPortalLayout.Footer.navTitleGetStarted',\n    defaultMessage: 'Get Started',\n  },\n  navLinkSupport: {\n    id: 'layouts.DeveloperPortalLayout.Footer.navLinkSupport',\n    defaultMessage: 'Support',\n  },\n  navTitleCoreProducts: {\n    id: 'layouts.DeveloperPortalLayout.Footer.navTitleCoreProducts',\n    defaultMessage: 'Colony Core',\n  },\n  navTitleOpenSourceTools: {\n    id: 'layouts.DeveloperPortalLayout.Footer.navTitleOpenSourceTools',\n    defaultMessage: 'Open Source Tools',\n  },\n  metaLinkTos: {\n    id: 'layouts.DeveloperPortalLayout.Footer.metaLinkTos',\n    defaultMessage: 'Terms & Service',\n  },\n  metaLinkPrivacy: {\n    id: 'layouts.DeveloperPortalLayout.Footer.metaLinkPrivacy',\n    defaultMessage: 'Privacy Policy',\n  },\n  metaLinkMediaKit: {\n    id: 'layouts.DeveloperPortalLayout.Footer.metaLinkMediaKit',\n    defaultMessage: 'Media Kit',\n  },\n});\n\nconst getProjectLinks = ({ repoUrl, name }: Project) => ({\n  href: repoUrl,\n  text: name,\n});\n\ntype Props = {|\n  coreProjects: Array<Project>,\n  openSourceProjects: Array<Project>,\n|};\n\nconst displayName = 'layouts.DeveloperPortalLayout.Footer';\n\nconst Footer = ({ coreProjects, openSourceProjects }: Props) => {\n  const coreProjectsLinks = coreProjects.map(getProjectLinks);\n  const openSourceProjectsLinks = openSourceProjects.map(getProjectLinks);\n  return (\n    <div className={styles.main}>\n      <div className={styles.footerContent}>\n        <div className={styles.navRow}>\n          <div className={styles.logoContainer}>\n            <Icon\n              className={styles.logo}\n              name=\"colony_logomark\"\n              title=\"Colony\"\n            />\n            <div>\n              <Link\n                href={COLONY_WEBSITE}\n                text={MSG.linkVisitColony}\n                textValues={{ domain: 'colony.io' }}\n              />\n            </div>\n          </div>\n          <div className={styles.navGroup}>\n            <div className={styles.navGroupItem}>\n              <VerticalMenu\n                appearance={{ margins: 'large' }}\n                headingAppearance={{ theme: 'invert' }}\n                headingText={MSG.navTitleGetStarted}\n                menuItems={[\n                  {\n                    href: COLONY_DISCOURSE,\n                    text: MSG.navLinkSupport,\n                  },\n                ]}\n              />\n            </div>\n            <div className={styles.navGroupItem}>\n              <VerticalMenu\n                appearance={{ margins: 'large' }}\n                headingAppearance={{ theme: 'invert' }}\n                headingText={MSG.navTitleCoreProducts}\n                menuItems={coreProjectsLinks}\n              />\n            </div>\n            <div className={styles.navGroupItem}>\n              <VerticalMenu\n                appearance={{ expandForViewport: 'medium', margins: 'large' }}\n                headingAppearance={{ theme: 'invert' }}\n                headingText={MSG.navTitleOpenSourceTools}\n                menuItems={openSourceProjectsLinks}\n                numColumns={2}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={styles.metaRow}>\n          <div className={styles.metaNavContainer}>\n            <nav className={styles.metaNav}>\n              <Link\n                href={PAGE_TERMS_SERVICE}\n                className={styles.metaNavLink}\n                text={MSG.metaLinkTos}\n              />\n              <Link\n                href={PAGE_PRIVACY_POLICY}\n                className={styles.metaNavLink}\n                text={MSG.metaLinkPrivacy}\n              />\n            </nav>\n          </div>\n          <div className={styles.socialIconContainer}>\n            <Link alt=\"Ghost\" href={COLONY_BLOG}>\n              <Icon\n                className={styles.socialIcon}\n                title=\"Ghost\"\n                name=\"social_ghost_devPortal\"\n              />\n            </Link>\n            <Link alt=\"Twitter\" href={COLONY_TWITTER}>\n              <Icon\n                className={styles.socialIcon}\n                title=\"Twitter\"\n                name=\"social_twitter_devPortal\"\n              />\n            </Link>\n            <Link alt=\"Discourse\" href={COLONY_DISCOURSE}>\n              <Icon\n                className={styles.socialIcon}\n                title=\"Discourse\"\n                name=\"social_discourse_devPortal\"\n              />\n            </Link>\n            <Link alt=\"GitHub\" href={COLONY_GITHUB}>\n              <Icon\n                className={styles.socialIcon}\n                title=\"GitHub\"\n                name=\"social_github_devPortal\"\n              />\n            </Link>\n            <Link alt=\"Gitter\" href={COLONY_GITTER}>\n              <Icon\n                className={styles.socialIcon}\n                title=\"Gitter\"\n                name=\"social_gitter_devPortal\"\n              />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nFooter.displayName = displayName;\n\nexport default Footer;\n","/* @flow */\nimport type { Node } from 'react';\nimport type { IntlShape } from 'react-intl';\n\nimport React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport type { Project } from '~types';\n\nimport { transformProjectData } from '~utils/docs';\n\nimport Header from './Header';\nimport Footer from './Footer';\n\nimport styles from './DeveloperPortalLayout.module.css';\n\ntype Props = {|\n  children: Node,\n  intl: IntlShape,\n|};\n\nconst displayName = 'layouts.DeveloperPortalLayout';\n\nconst DeveloperPortalLayout = ({ children, intl: { locale } }: Props) => {\n  const projectQueryData = useStaticQuery(graphql`\n    {\n      ...coreProjectsFragment\n      ...openSourceProjectsFragment\n    }\n  `);\n  const coreProjects: Array<Project> =\n    projectQueryData.coreProjects.edges.map(edge =>\n      transformProjectData(edge, locale),\n    ) || [];\n  const openSourceProjects: Array<Project> =\n    projectQueryData.openSourceProjects.edges.map(edge =>\n      transformProjectData(edge, locale),\n    ) || [];\n  return (\n    <>\n      <Header\n        coreProjects={coreProjects}\n        openSourceProjects={openSourceProjects}\n      />\n      <div className={styles.body}>{children}</div>\n      <Footer\n        coreProjects={coreProjects}\n        openSourceProjects={openSourceProjects}\n      />\n    </>\n  );\n};\n\nDeveloperPortalLayout.displayName = displayName;\n\nexport default DeveloperPortalLayout;\n","/* @flow */\nimport { compose, nest } from 'recompose';\nimport { injectIntl } from 'react-intl';\n\nimport type { GlobalLayoutProps } from '~layouts/GlobalLayout/GlobalLayout.jsx';\n\nimport GlobalLayout from '~layouts/GlobalLayout';\n\nimport DeveloperPortalLayout from './DeveloperPortalLayout.jsx';\n\nconst enhance = compose(injectIntl);\n\nexport default nest<GlobalLayoutProps>(\n  GlobalLayout,\n  enhance(DeveloperPortalLayout),\n);\n","/* @flow */\nexport { default } from './DeveloperPortalLayout';\n","/* @flow */\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport { withPrefix } from 'gatsby';\n\nimport type { OutProps as Props } from './types';\n\nconst MSG = defineMessages({\n  siteName: {\n    id: 'parts.SEO.siteName',\n    defaultMessage: 'Colony Open Source Docs',\n  },\n});\n\nconst displayName = 'parts.SEO';\n\nconst SEO = ({\n  baseUrl,\n  description: descriptionContent,\n  descriptionValues,\n  getAbsoluteImagePath,\n  intl: { formatMessage },\n  isDocPage,\n  location,\n  siteLogo,\n  title: titleContent,\n  titleValues,\n  images = [siteLogo],\n}: Props) => {\n  const absolutePath = location && `${baseUrl}${withPrefix(location.pathname)}`;\n  const imagePaths = images.map(getAbsoluteImagePath);\n  if (imagePaths.indexOf(siteLogo) < 0) imagePaths.push(siteLogo);\n  const ogType = location && location.pathname === '/' ? 'website' : 'article';\n  const siteName = formatMessage(MSG.siteName);\n  const title =\n    typeof titleContent === 'string'\n      ? titleContent\n      : formatMessage(titleContent, titleValues);\n  const description =\n    typeof descriptionContent === 'string'\n      ? descriptionContent\n      : formatMessage(descriptionContent, descriptionValues);\n\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: baseUrl,\n      name: siteName,\n    },\n  ];\n\n  if (isDocPage) {\n    schemaOrgJSONLD.push(\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': absolutePath,\n              name: title,\n              image: imagePaths[0],\n            },\n          },\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        author: 'Colony',\n        url: absolutePath,\n        name: title,\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: imagePaths[0],\n        },\n        description,\n      },\n    );\n  }\n\n  return (\n    <Helmet>\n      {/* General tags */}\n      <meta name=\"description\" content={description} />\n      {imagePaths.map(imagePath => (\n        <meta name=\"image\" content={imagePath} key={imagePath} />\n      ))}\n\n      {/* Schema.org tags */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaOrgJSONLD)}\n      </script>\n\n      {/* Google+ tags */}\n      <meta itemProp=\"name\" content={title} />\n      <meta itemProp=\"description\" content={description} />\n      {imagePaths.map(imagePath => (\n        <meta itemProp=\"image\" content={imagePath} key={imagePath} />\n      ))}\n\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={absolutePath} />\n      <meta property=\"og:type\" content={ogType} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:site_name\" content={siteName} />\n      {imagePaths.map(imagePath => (\n        <meta property=\"og:image\" content={imagePath} key={imagePath} />\n      ))}\n\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@joincolony\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      {imagePaths.map(imagePath => (\n        <meta name=\"twitter:image\" content={imagePath} key={imagePath} />\n      ))}\n    </Helmet>\n  );\n};\n\nSEO.displayName = displayName;\n\nexport default SEO;\n","/* @flow */\nimport type { HOC } from 'recompose';\n\nimport { injectIntl } from 'react-intl';\nimport { compose, defaultProps, withHandlers, withProps } from 'recompose';\n\nimport { withFileContext } from '~hoc/files';\nimport { withLocation } from '~hoc/location';\n\nimport type { InProps } from './types';\n\nimport SEO from './SEO.jsx';\n\nconst enhance: HOC<*, InProps> = compose(\n  injectIntl,\n  withFileContext(),\n  withLocation(),\n  defaultProps({\n    isDocPage: false,\n  }),\n  withProps(() => ({\n    baseUrl: 'https://docs.colony.io',\n  })),\n  withHandlers({\n    getAbsoluteImagePath: ({ baseUrl, files, project }) => (\n      imagePath: string,\n    ) => {\n      return imagePath.startsWith('http')\n        ? imagePath\n        : `${baseUrl}${\n            files && files[`${project}/${imagePath}`]\n              ? files[`${project}/${imagePath}`]\n              : imagePath\n          }`;\n    },\n  }),\n  withProps(({ getAbsoluteImagePath }) => ({\n    siteLogo: getAbsoluteImagePath('/img/colonyDocs_combomark.svg'),\n  })),\n);\n\nexport default enhance(SEO);\n","/* @flow */\nimport type { ComponentType } from 'react';\n\nimport { fromRenderProps } from 'recompose';\n\nimport FileContext from '~context/FileContext';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const withFileContext = () => (BaseComponent: ComponentType<Object>) =>\n  // $FlowFixMe\n  fromRenderProps(FileContext.Consumer, files => ({ files }))(BaseComponent);\n","/* @flow */\nexport { default } from './SEO';\n"],"sourceRoot":""}