{"version":3,"sources":["webpack:///./node_modules/slugify/index.js","webpack:///./node_modules/nanoid/index.browser.js","webpack:///./node_modules/react-popper/lib/esm/Manager.js","webpack:///./node_modules/react-popper/lib/esm/utils.js","webpack:///./node_modules/react-popper/lib/esm/Popper.js","webpack:///./node_modules/react-popper/lib/esm/Reference.js","webpack:///./node_modules/react-popper/lib/esm/index.js","webpack:///./node_modules/popper.js/dist/esm/popper.js","webpack:///./node_modules/react-popper/node_modules/warning/warning.js"],"names":["factory","charMap","JSON","parse","replace","string","options","Error","replacement","slug","split","reduce","result","ch","remove","trim","lower","toLowerCase","extend","customMap","key","module","exports","crypto","self","msCrypto","size","id","bytes","getRandomValues","Uint8Array","ManagerContext","Object","create_react_context","setReferenceNode","undefined","referenceNode","Manager_Manager","_React$Component","Manager","_this","call","this","defineProperty_default","assertThisInitialized_default","state","context","setState","_ref","extends_default","inheritsLoose_default","prototype","render","react","Provider","value","props","children","unwrapArray","arg","Array","isArray","safeInvoke","fn","_len","arguments","length","args","_key","apply","initialStyle","position","top","left","opacity","pointerEvents","initialArrowStyle","Popper_InnerPopper","InnerPopper","concat","data","placement","popperNode","innerRef","updatePopperInstance","arrowNode","enabled","order","eventsEnabled","positionFixed","modifiers","arrow","element","applyStyle","updateStateModifier","offsets","popper","styles","arrowStyles","hide","popperInstance","destroy","destroyPopperInstance","referenceElement","getOptions","scheduleUpdate","_proto","componentDidUpdate","prevProps","prevState","enableEventListeners","disableEventListeners","componentWillUnmount","ref","setPopperNode","style","getPopperStyle","getPopperPlacement","outOfBoundaries","getOutOfBoundariesState","arrowProps","setArrowNode","getArrowStyle","placements","Popper","objectWithoutPropertiesLoose_default","Consumer","_ref2","Reference_InnerReference","InnerReference","node","warning_default","Boolean","refHandler","Reference","__webpack_require__","d","__webpack_exports__","global","isBrowser","window","document","longerTimeoutBrowsers","timeoutDuration","i","navigator","userAgent","indexOf","debounce","Promise","called","resolve","then","scheduled","setTimeout","isFunction","functionToCheck","toString","getStyleComputedProperty","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","getRoot","findCommonOffsetParent","element1","element2","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","firstElementChild","element1root","getScroll","upperSide","html","scrollingElement","getBordersSize","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","obj","_extends","assign","source","hasOwnProperty","getClientRect","right","bottom","getBoundingClientRect","rect","scrollTop","scrollLeft","e","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","parentElement","el","getBoundaries","reference","padding","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","isPaddingNumber","computeAutoPlacement","refRect","rects","sortedAreas","keys","map","area","sort","a","b","filteredAreas","filter","computedPlacement","variation","getReferenceOffsets","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","runModifiers","ends","slice","prop","findIndex","cur","match","forEach","console","warn","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","getWindow","setupEventListeners","updateBound","addEventListener","passive","scrollElement","attachToScrollParents","event","callback","scrollParents","isBody","push","cancelAnimationFrame","removeEventListener","isNumeric","n","isNaN","isFinite","setStyles","unit","isFirefox","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","validPlacements","clockwise","counter","index","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","parseOffset","offset","basePlacement","useHeight","fragments","frag","divider","search","splitRegex","ops","op","mergeWithPrevious","str","toValue","index2","Defaults","removeOnDestroy","onCreate","onUpdate","shift","shiftvariation","_data$offsets","isVertical","side","shiftOffsets","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","min","keepTogether","floor","opSide","_data$offsets$arrow","arrowElement","querySelector","len","sideCapitalized","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","round","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","getOppositeVariation","inner","subtractLength","bound","attributes","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","shouldRound","noRound","v","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","getRoundedOffsets","devicePixelRatio","prefixedProperty","willChange","invertTop","invertLeft","x-placement","setAttribute","removeAttribute","onLoad","modifierOptions","requestAnimationFrame","update","bind","isDestroyed","isCreated","jquery","removeChild","Utils","PopperUtils","warning"],"mappings":"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","file":"3-bb57a90d71ebdf234d15.js","sourcesContent":["\n;(function (name, root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory()\n    module.exports['default'] = factory()\n  }\n  /* istanbul ignore next */\n  else if (typeof define === 'function' && define.amd) {\n    define(factory)\n  }\n  else {\n    root[name] = factory()\n  }\n}('slugify', this, function () {\n  /* eslint-disable */\n  var charMap = JSON.parse('{\"$\":\"dollar\",\"%\":\"percent\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ľ\":\"L\",\"ľ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ŕ\":\"R\",\"ŕ\":\"r\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₹\":\"indian rupee\",\"₽\":\"russian ruble\",\"₿\":\"bitcoin\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\"}')\n  /* eslint-enable */\n\n  function replace (string, options) {\n    if (typeof string !== 'string') {\n      throw new Error('slugify: string argument expected')\n    }\n\n    options = (typeof options === 'string')\n      ? {replacement: options}\n      : options || {}\n\n    var slug = string.split('')\n      .reduce(function (result, ch) {\n        return result + (charMap[ch] || ch)\n          // allowed\n          .replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]/g, '')\n      }, '')\n      // trim leading/trailing spaces\n      .trim()\n      // convert spaces\n      .replace(/[-\\s]+/g, options.replacement || '-')\n\n    return options.lower ? slug.toLowerCase() : slug\n  }\n\n  replace.extend = function (customMap) {\n    for (var key in customMap) {\n      charMap[key] = customMap[key]\n    }\n  }\n\n  return replace\n}))\n","if (process.env.NODE_ENV !== 'production') {\n  if (typeof self === 'undefined' || (!self.crypto && !self.msCrypto)) {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nvar crypto = self.crypto || self.msCrypto\n\n/*\n * This alphabet uses a-z A-Z 0-9 _- symbols.\n * Symbols order was changed for better gzip compression.\n */\nvar url = 'Uint8ArdomValuesObj012345679BCDEFGHIJKLMNPQRSTWXYZ_cfghkpqvwxyz-'\n\nmodule.exports = function (size) {\n  size = size || 21\n  var id = ''\n  var bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (0 < size--) {\n    id += url[bytes[size] & 63]\n  }\n  return id\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport createContext from 'create-react-context';\nexport var ManagerContext = createContext({\n  setReferenceNode: undefined,\n  referenceNode: undefined\n});\n\nvar Manager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Manager, _React$Component);\n\n  function Manager() {\n    var _this;\n\n    _this = _React$Component.call(this) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setReferenceNode\", function (referenceNode) {\n      if (!referenceNode || _this.state.context.referenceNode === referenceNode) {\n        return;\n      }\n\n      _this.setState(function (_ref) {\n        var context = _ref.context;\n        return {\n          context: _extends({}, context, {\n            referenceNode: referenceNode\n          })\n        };\n      });\n    });\n\n    _this.state = {\n      context: {\n        setReferenceNode: _this.setReferenceNode,\n        referenceNode: undefined\n      }\n    };\n    return _this;\n  }\n\n  var _proto = Manager.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(ManagerContext.Provider, {\n      value: this.state.context\n    }, this.props.children);\n  };\n\n  return Manager;\n}(React.Component);\n\nexport { Manager as default };","/**\n * Takes an argument and if it's an array, returns the first item in the array,\n * otherwise returns the argument. Used for Preact compatibility.\n */\nexport var unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\n * Takes a maybe-undefined function and arbitrary args and invokes the function\n * only if it is defined.\n */\n\nexport var safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === \"function\") {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PopperJS from 'popper.js';\nimport { ManagerContext } from './Manager';\nimport { safeInvoke, unwrapArray } from './utils';\nvar initialStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  opacity: 0,\n  pointerEvents: 'none'\n};\nvar initialArrowStyle = {};\nexport var InnerPopper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InnerPopper, _React$Component);\n\n  function InnerPopper() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      data: undefined,\n      placement: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"popperInstance\", void 0);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"popperNode\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"arrowNode\", null);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setPopperNode\", function (popperNode) {\n      if (!popperNode || _this.popperNode === popperNode) return;\n      safeInvoke(_this.props.innerRef, popperNode);\n      _this.popperNode = popperNode;\n\n      _this.updatePopperInstance();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setArrowNode\", function (arrowNode) {\n      _this.arrowNode = arrowNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updateStateModifier\", {\n      enabled: true,\n      order: 900,\n      fn: function fn(data) {\n        var placement = data.placement;\n\n        _this.setState({\n          data: data,\n          placement: placement\n        });\n\n        return data;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getOptions\", function () {\n      return {\n        placement: _this.props.placement,\n        eventsEnabled: _this.props.eventsEnabled,\n        positionFixed: _this.props.positionFixed,\n        modifiers: _extends({}, _this.props.modifiers, {\n          arrow: _extends({}, _this.props.modifiers && _this.props.modifiers.arrow, {\n            enabled: !!_this.arrowNode,\n            element: _this.arrowNode\n          }),\n          applyStyle: {\n            enabled: false\n          },\n          updateStateModifier: _this.updateStateModifier\n        })\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getPopperStyle\", function () {\n      return !_this.popperNode || !_this.state.data ? initialStyle : _extends({\n        position: _this.state.data.offsets.popper.position\n      }, _this.state.data.styles);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getPopperPlacement\", function () {\n      return !_this.state.data ? undefined : _this.state.placement;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getArrowStyle\", function () {\n      return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getOutOfBoundariesState\", function () {\n      return _this.state.data ? _this.state.data.hide : undefined;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"destroyPopperInstance\", function () {\n      if (!_this.popperInstance) return;\n\n      _this.popperInstance.destroy();\n\n      _this.popperInstance = null;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updatePopperInstance\", function () {\n      _this.destroyPopperInstance();\n\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          popperNode = _assertThisInitialize.popperNode;\n\n      var referenceElement = _this.props.referenceElement;\n      if (!referenceElement || !popperNode) return;\n      _this.popperInstance = new PopperJS(referenceElement, popperNode, _this.getOptions());\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"scheduleUpdate\", function () {\n      if (_this.popperInstance) {\n        _this.popperInstance.scheduleUpdate();\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = InnerPopper.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // If the Popper.js options have changed, update the instance (destroy + create)\n    if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed) {\n      this.updatePopperInstance();\n    } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) {\n      this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();\n    } // A placement difference in state means popper determined a new placement\n    // apart from the props value. By the time the popper element is rendered with\n    // the new position Popper has already measured it, if the place change triggers\n    // a size change it will result in a misaligned popper. So we schedule an update to be sure.\n\n\n    if (prevState.placement !== this.state.placement) {\n      this.scheduleUpdate();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    safeInvoke(this.props.innerRef, null);\n    this.destroyPopperInstance();\n  };\n\n  _proto.render = function render() {\n    return unwrapArray(this.props.children)({\n      ref: this.setPopperNode,\n      style: this.getPopperStyle(),\n      placement: this.getPopperPlacement(),\n      outOfBoundaries: this.getOutOfBoundariesState(),\n      scheduleUpdate: this.scheduleUpdate,\n      arrowProps: {\n        ref: this.setArrowNode,\n        style: this.getArrowStyle()\n      }\n    });\n  };\n\n  return InnerPopper;\n}(React.Component);\n\n_defineProperty(InnerPopper, \"defaultProps\", {\n  placement: 'bottom',\n  eventsEnabled: true,\n  referenceElement: undefined,\n  positionFixed: false\n});\n\nvar placements = PopperJS.placements;\nexport { placements };\nexport default function Popper(_ref) {\n  var referenceElement = _ref.referenceElement,\n      props = _objectWithoutPropertiesLoose(_ref, [\"referenceElement\"]);\n\n  return React.createElement(ManagerContext.Consumer, null, function (_ref2) {\n    var referenceNode = _ref2.referenceNode;\n    return React.createElement(InnerPopper, _extends({\n      referenceElement: referenceElement !== undefined ? referenceElement : referenceNode\n    }, props));\n  });\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport warning from 'warning';\nimport { ManagerContext } from './Manager';\nimport { safeInvoke, unwrapArray } from './utils';\n\nvar InnerReference =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InnerReference, _React$Component);\n\n  function InnerReference() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"refHandler\", function (node) {\n      safeInvoke(_this.props.innerRef, node);\n      safeInvoke(_this.props.setReferenceNode, node);\n    });\n\n    return _this;\n  }\n\n  var _proto = InnerReference.prototype;\n\n  _proto.render = function render() {\n    warning(Boolean(this.props.setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');\n    return unwrapArray(this.props.children)({\n      ref: this.refHandler\n    });\n  };\n\n  return InnerReference;\n}(React.Component);\n\nexport default function Reference(props) {\n  return React.createElement(ManagerContext.Consumer, null, function (_ref) {\n    var setReferenceNode = _ref.setReferenceNode;\n    return React.createElement(InnerReference, _extends({\n      setReferenceNode: setReferenceNode\n    }, props));\n  });\n}","// Public components\nimport Popper, { placements } from './Popper';\nimport Manager from './Manager';\nimport Reference from './Reference';\nexport { Popper, placements, Manager, Reference }; // Public types","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.7\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"sourceRoot":""}