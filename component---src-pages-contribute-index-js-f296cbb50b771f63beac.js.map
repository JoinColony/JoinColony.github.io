{"version":3,"sources":["webpack:///./src/pages/contribute/index.js","webpack:///./src/modules/core/components/ErrorMessage/ErrorMessage.jsx","webpack:///./src/modules/core/components/ErrorMessage/index.js","webpack:///./src/modules/core/components/Input/Input.jsx","webpack:///./src/modules/core/components/Input/index.js","webpack:///./src/modules/core/components/FormattedToken/FormattedToken.jsx","webpack:///./src/modules/core/components/FormattedToken/index.js","webpack:///./src/modules/parts/components/SEO/SEO.jsx","webpack:///./src/modules/parts/components/SEO/SEO.js","webpack:///./src/hoc/files/index.js","webpack:///./src/modules/parts/components/SEO/index.js","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/ipfs.js","webpack:///./src/modules/parts/components/IssueTableRow/IssueTableRow.jsx","webpack:///./src/modules/parts/components/IssueTableRow/index.js","webpack:///./node_modules/core-js/modules/es6.date.to-json.js","webpack:///./src/modules/pages/components/Contribute/Landing/Questions/Questions.jsx","webpack:///./src/modules/pages/components/Contribute/Landing/Landing.jsx","webpack:///./src/modules/pages/components/Contribute/Payment/PaymentActions/PaymentActions.jsx","webpack:///./src/modules/pages/components/Contribute/Payment/Payment.jsx","webpack:///./src/modules/pages/components/Contribute/Task/TaskActions/TaskActions.jsx","webpack:///./src/modules/pages/components/Contribute/Task/Task.jsx","webpack:///./src/modules/pages/components/Contribute/Contribute.jsx","webpack:///./src/modules/pages/components/Contribute/Contribute.js","webpack:///./src/modules/pages/components/Contribute/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_pages_Contribute__WEBPACK_IMPORTED_MODULE_1__","Index","createElement","Contribute","MSG","defineMessages","defaultError","id","defaultMessage","ErrorMessage","_ref","appearance","className","error","rest","objectWithoutPropertiesLoose_default","classNames","getMainClasses","styles","react_default","a","Object","assign","errorDot","Error","toString","index_es","displayName","injectIntl","d","components_ErrorMessage_ErrorMessage","Input","formatMessage","intl","label","labelValues","_ref$type","type","labelText","htmlFor","style","borderColor","components_Input_Input","amount","symbol","FormattedToken","decimals","loading","maximumFractionDigits","minimumFractionDigits","formattedAmount","Math","pow","tokenFormat","SpinnerLoader","theme","values","value","components_FormattedToken_FormattedToken","siteName","SEO","baseUrl","descriptionContent","description","descriptionValues","getAbsoluteImagePath","isDocPage","location","siteLogo","titleContent","title","titleValues","_ref$images","images","absolutePath","withPrefix","pathname","imagePaths","map","indexOf","push","ogType","schemaOrgJSONLD","@context","@type","url","name","itemListElement","position","item","@id","image","author","headline","Helmet_default","content","imagePath","key","JSON","stringify","itemProp","property","enhance","compose","BaseComponent","fromRenderProps","FileContext","Consumer","files","withLocation","defaultProps","withProps","withHandlers","project","startsWith","_ref2","parts_components_SEO_SEO","node","IPFS","require","Buffer","waitForIPFS","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","start","abrupt","Promise","resolve","reject","on","err","stop","this","apply","arguments","exports","init","_callee2","_context2","saveHash","_ref3","_callee3","data","result","_context3","from","add","sent","hash","_x","getHash","_ref4","_callee4","buf","_context4","cat","parse","t0","_x2","none","IssueTableRow","issue","loadedRemote","network","_useState","useState","contribution","setContribution","_useState2","setError","_useState3","loadedLocal","setLoadedLocal","_useState4","setLoading","getContribution","useCallback","asyncToGenerator_default","regenerator_default","options","method","headers","Content-Type","fetch","server","then","res","json","catch","fetchError","useEffect","localContribution","getStore","setStore","createdAt","length","substring","concat","Link","href","text","split","typeId","payout","components_IssueTableRow_IssueTableRow","$export","toObject","toPrimitive","P","F","Date","NaN","toJSON","prototype","call","toISOString","O","pv","isFinite","answer1","answer2","answer3","answer4","answer5","answer6","answer7","answer8","question1","question2","question3","question4","question5","question6","question7","question8","Questions","selected","setSelected","handleClick","event","includes","currentTarget","filter","main","Button","onClick","question","triangleDown","triangleRight","answerActive","answer","contributeTitle","faqTitle","heroButton","heroButtonUser","heroDescription","heroTitle","linkDiscourse","linkGitHub","issuesDescription","issuesFindMore","issuesHeaderDate","issuesHeaderLink","issuesHeaderReward","issuesHeaderTitle","issuesSubtext","issuesTitle","ongoingDescription","ongoingItemBugsDescription","ongoingItemBugsTitle","ongoingItemDocsDescription","ongoingItemDocsTitle","ongoingItemFeatureDescription","ongoingItemFeatureTitle","ongoingItemOtherDescription","ongoingItemOtherTitle","ongoingItemUserStoryDescription","ongoingItemUserStoryTitle","ongoingTitle","overviewStep1","overviewStep1Description","overviewStep2","overviewStep2Description","overviewStep3","overviewStep3Description","rewardsDescription","rewardsReputation","rewardsReputationDescription","rewardsToken","rewardsTokenDescription","rewardsTitle","Landing","user","issues","setIssues","setLoadedRemote","_useState5","getIssues","Authorization","body","query","nodes","search","edges","message","localContributions","Fragment","hero","heroContent","Heading","weight","padding","linkTo","PAGE_DEVELOPER_PORTAL_DASHBOARD","Image","heroImage","alt","src","overview","overviewItem","section","size","sectionSubtitle","sectionDescription","font","color","arrow","COLONY_GITHUB_OPEN_ISSUES","ongoing","discourse","COLONY_DISCOURSE_PROJECTS","COLONY_DISCOURSE","github","COLONY_GITHUB","rewards","rewardsContent","rewardsItems","rewardsItem","rewardsItemImage","rewardsItemText","faq","faqContent","Landing_Questions_Questions","faqImage","buttonClaimPayout","PaymentActions","colonyClient","payment","setPayment","wallet","handleClaimPayout","claimPayment","send","paymentId","token","tokenClient","contract","address","getFundingPotPayout","potId","potPayout","recipient","toLowerCase","buttons","disabled","finalized","labelFinalized","labelIssue","labelPayment","labelPayout","labelPullRequest","labelRecipient","loadingPayment","PaymentPage","loadedContribution","setLoadedContribution","loadedPayment","setLoadedPayment","_useState6","_useState7","setPaymentId","window","searchId","parsedId","Number","localPayment","getPayment","Payment_PaymentActions_PaymentActions","field","username","pullRequest","buttonApproveWorker","buttonStartWork","buttonSubmitWork","buttonSubmitRating","buttonRevealRating","buttonFinalizeTask","labelRating","labelRatingSecret","TaskActions","setTask","task","setPullRequest","rating","setRating","ratingSecret","setRatingSecret","manager","worker","canApproveWorker","operations","canClaimPayout","status","canFinalizeTask","completionDate","canRevealRating","canSubmitRating","ratings","count","canSubmitWork","handleApproveWorker","operationJSON","operation","taskRole","setTaskWorkerRole","restoreOperation","sign","gasLimit","getTaskRole","taskId","role","shift","claimTaskPayout","handleFinalizeTask","_ref5","finalizeTask","getTask","handleRevealRating","_ref6","salt","sha3","revealTaskWorkRating","handleStartWork","_ref7","_callee5","_context5","startOperation","handleSubmitRating","_ref8","_callee6","_ref9","secret","_context6","generateSecret","submitTaskWorkRating","getTaskWorkRatingSecretsInfo","handleSubmitWork","_ref10","_callee7","deliverableHash","_context7","ipfs","submitTaskDeliverable","onChange","labelCompletionDate","labelDueDate","labelStatus","labelTask","labelWorker","loadingTask","TaskPage","loadedTask","setLoadedTask","setTaskId","localTask","Task_TaskActions_TaskActions","day","month","year","dueDate","pageDescription","pageTitle","Helmet","es","primary","Contribute_Landing_Landing","path","PAGE_DEVELOPER_PORTAL_CONTRIBUTE","Payment","Task","nest","DeveloperPortalLayout","pages_components_Contribute_Contribute"],"mappings":"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","file":"component---src-pages-contribute-index-js-f296cbb50b771f63beac.js","sourcesContent":["/* @flow */\n\nimport { createElement } from 'react';\n\nimport Contribute from '~pages/Contribute';\n\nconst Index = () => createElement(Contribute);\n\nexport default Index;\n","/* @flow */\n\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport { getMainClasses } from '~utils/css';\n\nimport styles from './ErrorMessage.module.css';\n\nconst MSG = defineMessages({\n  defaultError: {\n    id: 'core.ErrorMessage.defaultError',\n    defaultMessage: 'An error occured',\n  },\n});\n\ntype Appearance = {|\n  color?: 'pink',\n|};\n\ntype Props = {|\n  /** Appearance object */\n  appearance?: Appearance,\n  /** Setting this will add className styles to the `appearance` object */\n  className?: string,\n  /** Error message */\n  error: Error | MessageDescriptor | string,\n  /** Injected by `injectIntl` */\n  intl: IntlShape,\n|};\n\nconst displayName = 'ErrorMessage';\n\nconst ErrorMessage = ({ appearance, className, error, ...rest }: Props) => {\n  const classNames = className\n    ? `${getMainClasses(appearance, styles)} ${className}`\n    : getMainClasses(appearance, styles);\n  const printMessage = () => {\n    if (error instanceof Error) {\n      return error.toString();\n    }\n    if (typeof error === 'object') {\n      return <FormattedMessage {...error} />;\n    }\n    if (typeof error === 'string') {\n      return error;\n    }\n    return <FormattedMessage {...MSG.defaultError} />;\n  };\n  return (\n    <div className={classNames} {...rest}>\n      <div className={styles.errorDot} />\n      <div>{printMessage()}</div>\n    </div>\n  );\n};\n\nErrorMessage.displayName = displayName;\n\nexport default injectIntl(ErrorMessage);\n","/* @flow */\n\nexport { default } from './ErrorMessage.jsx';\n","/* @flow */\n\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport { getMainClasses } from '~utils/css';\n\nimport styles from './Input.module.css';\n\ntype Appearance = {|\n  display?: 'none',\n  padding?: 'small' | 'large' | 'huge',\n  size?: 'large' | 'stretch',\n|};\n\ntype Props = {\n  /** Appearance object */\n  appearance?: Appearance,\n  /** Setting this will add className styles to the `appearance` object */\n  className?: string,\n  /** Outline in red if error */\n  error?: ?string,\n  /** Injected by `injectIntl` */\n  intl: IntlShape,\n  /** ID required to connect label and input */\n  id: string,\n  /** A string or a `messageDescriptor` that make up the input's label */\n  label?: MessageDescriptor | string,\n  /** Values for loading label (react-intl interpolation) */\n  labelValues?: Object,\n  /** Input html type attribute */\n  type?: 'date' | 'number' | 'text',\n};\n\nconst displayName = 'Input';\n\nconst Input = ({\n  appearance,\n  className,\n  error,\n  id,\n  intl: { formatMessage },\n  label,\n  labelValues,\n  type = 'text',\n  ...rest\n}: Props) => {\n  const classNames = className\n    ? `${getMainClasses(appearance, styles)} ${className}`\n    : getMainClasses(appearance, styles);\n  const labelText =\n    typeof label === 'string'\n      ? label\n      : label && formatMessage(label, labelValues);\n  return (\n    <label htmlFor={id} className={styles.label}>\n      <span>{labelText}</span>\n      <input\n        id={id}\n        className={classNames}\n        style={error ? { borderColor: '#F5416E' } : null}\n        type={type}\n        {...rest}\n      />\n    </label>\n  );\n};\n\nInput.displayName = displayName;\n\nexport default injectIntl(Input);\n","/* @flow */\n\nexport { default } from './Input.jsx';\n","/* @flow */\n\nimport type { IntlShape } from 'react-intl';\n\nimport React from 'react';\nimport {\n  defineMessages,\n  FormattedMessage,\n  FormattedNumber,\n  injectIntl,\n} from 'react-intl';\n\nimport { getMainClasses } from '~utils/css';\n\nimport SpinnerLoader from '~core/SpinnerLoader';\n\nimport styles from './FormattedToken.module.css';\n\nconst MSG = defineMessages({\n  amount: {\n    id: 'parts.FormattedToken.amount',\n    defaultMessage: '{amount}',\n  },\n  symbol: {\n    id: 'parts.FormattedToken.symbol',\n    defaultMessage: ' {symbol}',\n  },\n});\n\ntype Appearance = {|\n  theme?: 'statistics',\n|};\n\ntype Props = {|\n  /** Appearance object */\n  appearance?: Appearance,\n  /** Token amount */\n  amount: number,\n  /** Setting this will add className styles to the `appearance` object */\n  className?: string,\n  /** Token amount */\n  decimals?: number,\n  /** Injected by `injectIntl` */\n  intl: IntlShape,\n  /** Replace amount with loading indicator when loading */\n  loading?: boolean,\n  /** Maximum number of fraction digits */\n  maximumFractionDigits?: number,\n  /** Minimum number of fraction digits */\n  minimumFractionDigits?: number,\n  /** Token symbol */\n  symbol: string,\n|};\n\nconst displayName = 'FormattedToken';\n\nconst FormattedToken = ({\n  amount,\n  appearance,\n  className,\n  decimals,\n  loading,\n  maximumFractionDigits,\n  minimumFractionDigits,\n  symbol,\n}: Props) => {\n  const classNames = className\n    ? `${getMainClasses(appearance, styles)} ${className}`\n    : getMainClasses(appearance, styles);\n  const formattedAmount = amount / 10 ** (decimals || 18);\n  const tokenFormat = {\n    id: symbol,\n    maximumFractionDigits: maximumFractionDigits || 4,\n    minimumFractionDigits: minimumFractionDigits || 0,\n  };\n  return (\n    <div className={classNames}>\n      {loading ? (\n        <SpinnerLoader appearance={{ theme: 'primary' }} />\n      ) : (\n        <FormattedMessage\n          {...MSG.amount}\n          values={{\n            amount: (\n              <FormattedNumber {...tokenFormat} value={formattedAmount} />\n            ),\n          }}\n        />\n      )}\n      <FormattedMessage {...MSG.symbol} values={{ symbol }} />\n    </div>\n  );\n};\n\nFormattedToken.displayName = displayName;\n\nexport default injectIntl(FormattedToken);\n","/* @flow */\n\nexport { default } from './FormattedToken.jsx';\n","/* @flow */\n\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport { withPrefix } from 'gatsby';\n\nimport type { OutProps as Props } from './types';\n\nconst MSG = defineMessages({\n  siteName: {\n    id: 'parts.SEO.siteName',\n    defaultMessage: 'Colony Open Source Docs',\n  },\n});\n\nconst displayName = 'parts.SEO';\n\nconst SEO = ({\n  baseUrl,\n  description: descriptionContent,\n  descriptionValues,\n  getAbsoluteImagePath,\n  intl: { formatMessage },\n  isDocPage,\n  location,\n  siteLogo,\n  title: titleContent,\n  titleValues,\n  images = [siteLogo],\n}: Props) => {\n  const absolutePath = location && `${baseUrl}${withPrefix(location.pathname)}`;\n  const imagePaths = images.map(getAbsoluteImagePath);\n  if (imagePaths.indexOf(siteLogo) < 0) imagePaths.push(siteLogo);\n  const ogType = location && location.pathname === '/' ? 'website' : 'article';\n  const siteName = formatMessage(MSG.siteName);\n  const title =\n    typeof titleContent === 'string'\n      ? titleContent\n      : formatMessage(titleContent, titleValues);\n  const description =\n    typeof descriptionContent === 'string'\n      ? descriptionContent\n      : formatMessage(descriptionContent, descriptionValues);\n\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: baseUrl,\n      name: siteName,\n    },\n  ];\n\n  if (isDocPage) {\n    schemaOrgJSONLD.push(\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': absolutePath,\n              name: title,\n              image: imagePaths[0],\n            },\n          },\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        author: 'Colony',\n        url: absolutePath,\n        name: title,\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: imagePaths[0],\n        },\n        description,\n      },\n    );\n  }\n\n  return (\n    <Helmet>\n      {/* General tags */}\n      <meta name=\"description\" content={description} />\n      {imagePaths.map(imagePath => (\n        <meta name=\"image\" content={imagePath} key={imagePath} />\n      ))}\n\n      {/* Schema.org tags */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaOrgJSONLD)}\n      </script>\n\n      {/* Google+ tags */}\n      <meta itemProp=\"name\" content={title} />\n      <meta itemProp=\"description\" content={description} />\n      {imagePaths.map(imagePath => (\n        <meta itemProp=\"image\" content={imagePath} key={imagePath} />\n      ))}\n\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={absolutePath} />\n      <meta property=\"og:type\" content={ogType} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:site_name\" content={siteName} />\n      {imagePaths.map(imagePath => (\n        <meta property=\"og:image\" content={imagePath} key={imagePath} />\n      ))}\n\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@joincolony\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      {imagePaths.map(imagePath => (\n        <meta name=\"twitter:image\" content={imagePath} key={imagePath} />\n      ))}\n    </Helmet>\n  );\n};\n\nSEO.displayName = displayName;\n\nexport default SEO;\n","/* @flow */\n\nimport type { HOC } from 'recompose';\n\nimport { injectIntl } from 'react-intl';\nimport { compose, defaultProps, withHandlers, withProps } from 'recompose';\n\nimport { withFileContext } from '~hoc/files';\nimport { withLocation } from '~hoc/location';\n\nimport type { InProps } from './types';\n\nimport SEO from './SEO.jsx';\n\nconst enhance: HOC<*, InProps> = compose(\n  injectIntl,\n  withFileContext(),\n  withLocation(),\n  defaultProps({\n    isDocPage: false,\n  }),\n  withProps(() => ({\n    baseUrl: 'https://docs.colony.io',\n  })),\n  withHandlers({\n    getAbsoluteImagePath: ({ baseUrl, files, project }) => (\n      imagePath: string,\n    ) => {\n      return imagePath.startsWith('http')\n        ? imagePath\n        : `${baseUrl}${\n            files && files[`${project}/${imagePath}`]\n              ? files[`${project}/${imagePath}`]\n              : imagePath\n          }`;\n    },\n  }),\n  withProps(({ getAbsoluteImagePath }) => ({\n    siteLogo: getAbsoluteImagePath('/img/colonyDocs_combomark.svg'),\n  })),\n);\n\nexport default enhance(SEO);\n","/* @flow */\n\nimport type { ComponentType } from 'react';\n\nimport { fromRenderProps } from 'recompose';\n\nimport FileContext from '~context/FileContext';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const withFileContext = () => (BaseComponent: ComponentType<Object>) =>\n  // $FlowFixMe\n  fromRenderProps(FileContext.Consumer, files => ({ files }))(BaseComponent);\n","/* @flow */\n\nexport { default } from './SEO';\n","/* @flow */\n\nconst IPFS = require('ipfs');\n\nconst { Buffer } = IPFS;\n\nlet node;\n\nconst waitForIPFS = async () => {\n  node = new IPFS({ start: false });\n  return new Promise((resolve, reject) => {\n    node.on('ready', () => resolve(true));\n    node.on('error', err => reject(err));\n  });\n};\n\nexports.init = async () => {\n  await waitForIPFS();\n  return node.start();\n};\n\nexports.saveHash = async (item: *) => {\n  const data = Buffer.from(JSON.stringify(item));\n  const result = await node.add(data);\n  return result[0].hash;\n};\n\nexports.getHash = async (hash: string) => {\n  const buf = await node.cat(`/ipfs/${hash}`);\n  let item;\n  try {\n    item = JSON.parse(buf.toString());\n  } catch (err) {\n    throw new Error(`Could not get hash ${hash}`);\n  }\n  return item;\n};\n\nexports.stop = () => node.stop();\n","/* @flow */\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { defineMessages, FormattedDate, FormattedMessage } from 'react-intl';\n\nimport type { Issue, Network } from '~types';\n\nimport FormattedToken from '~core/FormattedToken';\nimport Link from '~core/Link';\nimport SpinnerLoader from '~core/SpinnerLoader';\n\nimport {\n  getStore,\n  setStore,\n} from '~layouts/DeveloperPortalLayout/localStorage';\n\nimport styles from './IssueTableRow.module.css';\n\nconst MSG = defineMessages({\n  error: {\n    id: 'pages.Contribute.Issue.error',\n    defaultMessage: 'Error',\n  },\n  none: {\n    id: 'pages.Contribute.Issue.none',\n    defaultMessage: 'None',\n  },\n});\n\ntype Props = {|\n  issue: Issue,\n  loadedRemote?: boolean,\n  network: Network,\n|};\n\nconst displayName = 'pages.Contribute.Issue';\n\nconst server = process.env.SERVER_URL || 'http://localhost:8080';\n\nconst IssueTableRow = ({ issue, loadedRemote, network }: Props) => {\n  const [contribution, setContribution] = useState(null);\n  const [error, setError] = useState(null);\n  const [loadedLocal, setLoadedLocal] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const formatIssueLink = url => {\n    const repository = url.split('/')[4];\n    const issueNumber = url.split('/')[6];\n    return `${repository}#${issueNumber}`;\n  };\n\n  const getContribution = useCallback(async () => {\n    const options = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    // eslint-disable-next-line no-undef\n    fetch(\n      `${server}/api/contribution?networkId=${network ? network.id : 1}&issue=${\n        issue.node.url\n      }`,\n      options,\n    )\n      .then(res => res.json())\n      .then(data => {\n        setContribution(data.contribution || { none: true });\n        setLoading(false);\n      })\n      .catch(fetchError => {\n        setError(fetchError);\n        setLoading(false);\n      });\n  }, [issue, network]);\n\n  useEffect(() => {\n    if (!loadedLocal) {\n      const localContribution = getStore(issue.node.url);\n      setContribution(localContribution);\n      setLoadedLocal(true);\n    }\n  }, [issue, loadedLocal]);\n\n  useEffect(() => {\n    setStore(issue.node.url, contribution);\n  }, [contribution, issue]);\n\n  useEffect(() => {\n    if (loadedRemote) {\n      getContribution();\n    }\n  }, [getContribution, loadedRemote]);\n\n  return (\n    <tr>\n      <td>\n        <FormattedDate value={issue.node.createdAt} />\n      </td>\n      <td>\n        {issue.node.title.length > 50\n          ? issue.node.title.substring(0, 50).concat('...')\n          : issue.node.title}\n      </td>\n      <td>\n        <Link href={issue.node.url} text={formatIssueLink(issue.node.url)} />\n      </td>\n      <td>\n        {contribution && contribution.none && (\n          <FormattedMessage {...MSG.none} />\n        )}\n        {contribution && !contribution.none && (\n          <Link\n            href={`/contribute/${contribution.type}?id=${contribution.typeId}`}\n          >\n            <FormattedToken amount={contribution.payout} symbol=\"CDEV\" />\n          </Link>\n        )}\n        {!contribution && loading && (\n          <SpinnerLoader appearance={{ theme: 'primary' }} />\n        )}\n        {!contribution && error && (\n          <span className={styles.error}>\n            <FormattedMessage {...MSG.error} />\n          </span>\n        )}\n      </td>\n    </tr>\n  );\n};\n\nIssueTableRow.displayName = displayName;\n\nexport default IssueTableRow;\n","/* @flow */\n\nexport { default } from './IssueTableRow.jsx';\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","/* @flow */\n\nimport React, { useCallback, useState } from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport styles from './Questions.module.css';\n\nimport Button from '~core/Button';\n\nconst MSG = defineMessages({\n  answer1: {\n    id: 'pages.Contribute.Landing.Questions.answer1',\n    defaultMessage: `CDEV is the native token of the Colony Developer Community.\n    It is earned by successfully contributing to the community.`,\n  },\n  answer2: {\n    id: 'pages.Contribute.Landing.Questions.answer2',\n    defaultMessage: `HODL! As further Colony Network extensions such as funding\n    queues, objections, and disputes roll out, you will need to stake CDEV to\n    perform a variety of actions. Right now the economic proposition is a little\n    up in the air. Drop by the CDEV thread in the forum to share your ideas.`,\n  },\n  answer3: {\n    id: 'pages.Contribute.Landing.Questions.answer3',\n    defaultMessage: `CDEV is currently locked and not transferable between\n    accounts. This may change in due course as the experiment progresses.`,\n  },\n  answer4: {\n    id: 'pages.Contribute.Landing.Questions.answer4',\n    defaultMessage: `Reputation is a measure of your standing and influence in\n    the community. The more you have, the higher your standing.`,\n  },\n  answer5: {\n    id: 'pages.Contribute.Landing.Questions.answer5',\n    defaultMessage: `The amount of reputation earned for each contribution is\n    equal to the amount of CDEV earned. However, reputation decays over time\n    with a halflife of about 3.5 months.`,\n  },\n  answer6: {\n    id: 'pages.Contribute.Landing.Questions.answer6',\n    defaultMessage: `Right now it represents the standing your efforts have\n    earned you in the community.  In the future, reputation will weight your\n    influence within this community. You will use your reputation to vote on\n    open decisions.`,\n  },\n  answer7: {\n    id: 'pages.Contribute.Landing.Questions.answer7',\n    defaultMessage: `No, reputation is non-transferable between accounts. This\n    ensures influence can only be earned and not bought.`,\n  },\n  answer8: {\n    id: 'pages.Contribute.Landing.Questions.answer8',\n    defaultMessage: `Create an account and complete your first contribution.\n    Once it is approved, you'll receive some CDEV and Reputation. Go to your\n    Account Page to see your current balance.`,\n  },\n  question1: {\n    id: 'pages.Contribute.Landing.Questions.question1',\n    defaultMessage: 'What is the CDEV Token?',\n  },\n  question2: {\n    id: 'pages.Contribute.Landing.Questions.question2',\n    defaultMessage: 'What can I do with CDEV?',\n  },\n  question3: {\n    id: 'pages.Contribute.Landing.Questions.question3',\n    defaultMessage: 'Can I transfer CDEV to another wallet or user?',\n  },\n  question4: {\n    id: 'pages.Contribute.Landing.Questions.question4',\n    defaultMessage: 'What is reputation?',\n  },\n  question5: {\n    id: 'pages.Contribute.Landing.Questions.question5',\n    defaultMessage: 'How is reputation calculated?',\n  },\n  question6: {\n    id: 'pages.Contribute.Landing.Questions.question6',\n    defaultMessage: 'What can I do with reputation?',\n  },\n  question7: {\n    id: 'pages.Contribute.Landing.Questions.question7',\n    defaultMessage: 'Can I transfer my reputation to another account?',\n  },\n  question8: {\n    id: 'pages.Contribute.Landing.Questions.question8',\n    defaultMessage: 'How do I get started?',\n  },\n});\n\nconst displayName = 'pages.Contribute.Landing.Questions';\n\nconst Questions = () => {\n  const [selected, setSelected] = useState([]);\n  const items = ['1', '2', '3', '4', '5', '6', '7', '8'];\n  const handleClick = useCallback(\n    event => {\n      if (selected.includes(event.currentTarget.id)) {\n        const result = selected.filter(item => item !== event.currentTarget.id);\n        setSelected(result);\n      } else {\n        const result = [...selected, event.currentTarget.id];\n        setSelected(result);\n      }\n    },\n    [selected],\n  );\n  return (\n    <div className={styles.main}>\n      {items.map(item => (\n        <Button\n          id={item}\n          key={item}\n          appearance={{ theme: 'reset' }}\n          onClick={handleClick}\n        >\n          <div className={styles.question}>\n            <div\n              className={\n                selected.includes(item)\n                  ? styles.triangleDown\n                  : styles.triangleRight\n              }\n            />\n            <FormattedMessage {...MSG[`question${item}`]} />\n          </div>\n          <div\n            className={\n              selected.includes(item) ? styles.answerActive : styles.answer\n            }\n          >\n            <FormattedMessage {...MSG[`answer${item}`]} />\n          </div>\n        </Button>\n      ))}\n    </div>\n  );\n};\n\nQuestions.displayName = displayName;\n\nexport default Questions;\n","/* @flow */\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport type { Network, User } from '~types';\n\nimport Button from '~core/Button';\nimport ErrorMessage from '~core/ErrorMessage';\nimport Heading from '~core/Heading';\nimport Image from '~core/Image';\nimport Link from '~core/Link';\n\nimport IssueTableRow from '~parts/IssueTableRow';\n\nimport Questions from './Questions';\n\nimport {\n  COLONY_DISCOURSE,\n  COLONY_DISCOURSE_PROJECTS,\n  COLONY_GITHUB,\n  COLONY_GITHUB_OPEN_ISSUES,\n  PAGE_DEVELOPER_PORTAL_DASHBOARD,\n} from '~routes';\n\nimport {\n  getStore,\n  setStore,\n} from '~layouts/DeveloperPortalLayout/localStorage';\n\nimport styles from './Landing.module.css';\n\nconst MSG = defineMessages({\n  contributeTitle: {\n    id: 'pages.Contribute.Landing.contributeTitle',\n    defaultMessage: 'Start Contributing',\n  },\n  faqTitle: {\n    id: 'pages.Contribute.Landing.faqTitle',\n    defaultMessage: 'Frequently Asked Questions',\n  },\n  heroButton: {\n    id: 'pages.Contribute.Landing.heroButton',\n    defaultMessage: \"Let's Get Started\",\n  },\n  heroButtonUser: {\n    id: 'pages.Contribute.Landing.heroButton',\n    defaultMessage: 'Start Contributing',\n  },\n  heroDescription: {\n    id: 'pages.Contribute.Landing.heroDescription',\n    defaultMessage: `Get rewarded for contributing to our developer tools. Each\n    contribution earns you CDEV tokens, reputation, and a say in future\n    decisions.`,\n  },\n  heroTitle: {\n    id: 'pages.Contribute.Landing.heroTitle',\n    defaultMessage: 'Contribute and Earn',\n  },\n  linkDiscourse: {\n    id: 'pages.Contribute.Landing.linkDiscourse',\n    defaultMessage: 'Discourse',\n  },\n  linkGitHub: {\n    id: 'pages.Contribute.Landing.linkGitHub',\n    defaultMessage: 'GitHub',\n  },\n  issuesDescription: {\n    id: 'pages.Contribute.Landing.issuesDescription',\n    defaultMessage: `The best way to contribute is to work on one of the issues\n    below which are open issues labeled \"help wanted\" or \"good first issue\" in\n    our open source repositories.`,\n  },\n  issuesFindMore: {\n    id: 'pages.Contribute.Landing.issuesFindMore',\n    defaultMessage: 'Find More',\n  },\n  issuesHeaderDate: {\n    id: 'pages.Contribute.Landing.issuesHeaderDate',\n    defaultMessage: 'Date',\n  },\n  issuesHeaderLink: {\n    id: 'pages.Contribute.Landing.issuesHeaderLink',\n    defaultMessage: 'Link',\n  },\n  issuesHeaderReward: {\n    id: 'pages.Contribute.Landing.issuesHeaderReward',\n    defaultMessage: 'Reward',\n  },\n  issuesHeaderTitle: {\n    id: 'pages.Contribute.Landing.issuesHeaderTitle',\n    defaultMessage: 'Title',\n  },\n  issuesSubtext: {\n    id: 'pages.Contribute.Landing.issuesSubtext',\n    defaultMessage: '* Switch networks to check for other rewards.',\n  },\n  issuesTitle: {\n    id: 'pages.Contribute.Landing.issuesTitle',\n    defaultMessage: 'Open \"Help Wanted\" Issues',\n  },\n  ongoingDescription: {\n    id: 'pages.Contribute.Landing.ongoingDescription',\n    defaultMessage: `Didn’t see any opportunities above? All good, there are\n    more ways to contribute.`,\n  },\n  ongoingItemBugsDescription: {\n    id: 'pages.Contribute.Landing.ongoingItemBugsDescription',\n    defaultMessage: `Found a bug? Help us squash it. Open an issue and describe\n    the problem. The more details, the better.`,\n  },\n  ongoingItemBugsTitle: {\n    id: 'pages.Contribute.Landing.ongoingItemBugsTitle',\n    defaultMessage: 'Report Bugs',\n  },\n  ongoingItemDocsDescription: {\n    id: 'pages.Contribute.Landing.ongoingItemDocsDescription',\n    defaultMessage: `Look for the \"Improve this doc\" button at the bottom of\n    each page to make an improvement.`,\n  },\n  ongoingItemDocsTitle: {\n    id: 'pages.Contribute.Landing.ongoingItemDocsTitle',\n    defaultMessage: 'Documentation',\n  },\n  ongoingItemFeatureDescription: {\n    id: 'pages.Contribute.Landing.ongoingItemFeatureDescription',\n    defaultMessage: `Have an idea for a new feature? Open an issue with your\n    feature request or a pull request with your feature.`,\n  },\n  ongoingItemFeatureTitle: {\n    id: 'pages.Contribute.Landing.ongoingItemFeatureTitle',\n    defaultMessage: 'New Feature',\n  },\n  ongoingItemOtherDescription: {\n    id: 'pages.Contribute.Landing.ongoingItemOtherDescription',\n    defaultMessage: `Creative ideas abound. Let us know yours by posting in\n    {discourse} or opening an issue in {github}.`,\n  },\n  ongoingItemOtherTitle: {\n    id: 'pages.Contribute.Landing.ongoingItemOtherTitle',\n    defaultMessage: 'Something else?',\n  },\n  ongoingItemUserStoryDescription: {\n    id: 'pages.Contribute.Landing.ongoingItemUserStoryDescription',\n    defaultMessage: `Use-case examples, tutorials, lessons learned — whatever it\n    is, we like user stories. Write it up and post it in {discourse}.`,\n  },\n  ongoingItemUserStoryTitle: {\n    id: 'pages.Contribute.Landing.ongoingItemUserStoryTitle',\n    defaultMessage: 'User Stories',\n  },\n  ongoingTitle: {\n    id: 'pages.Contribute.Landing.ongoingTitle',\n    defaultMessage: 'Ongoing Ways to Contribute',\n  },\n  overviewStep1: {\n    id: 'pages.Contribute.Landing.overviewStep1',\n    defaultMessage: '1. Create an account',\n  },\n  overviewStep1Description: {\n    id: 'pages.Contribute.Landing.overviewStep1Description',\n    defaultMessage: `Connect MetaMask, link GitHub, and you’re all set. We need\n    this so we can send your sweet, sweet rewards.`,\n  },\n  overviewStep2: {\n    id: 'pages.Contribute.Landing.overviewStep2',\n    defaultMessage: '2. Make a contribution',\n  },\n  overviewStep2Description: {\n    id: 'pages.Contribute.Landing.overviewStep2Description',\n    defaultMessage: `Work on a \"Help Wanted\" issue, report a bug, write a\n    tutorial, or more. There are plenty of ways to get involved.`,\n  },\n  overviewStep3: {\n    id: 'pages.Contribute.Landing.overviewStep3',\n    defaultMessage: '3. Get rewarded',\n  },\n  overviewStep3Description: {\n    id: 'pages.Contribute.Landing.overviewStep3Description',\n    defaultMessage: `Contributions are rewarded with tokens and\n    reputation. Check your account page to see your current score!`,\n  },\n  rewardsDescription: {\n    id: 'pages.Contribute.Landing.rewardsDescription',\n    defaultMessage: `Contributions earn you tokens and reputation in our\n    Developer Community. The more you contribute, the higher your standing.`,\n  },\n  rewardsReputation: {\n    id: 'pages.Contribute.Landing.rewardsReputation',\n    defaultMessage: 'Reputation',\n  },\n  rewardsReputationDescription: {\n    id: 'pages.Contribute.Landing.rewardsReputationDescription',\n    defaultMessage: `Reputation measures your relative standing and influence in\n    the community. It decays over time to keep things fresh.`,\n  },\n  rewardsToken: {\n    id: 'pages.Contribute.Landing.rewardsToken',\n    defaultMessage: 'CDEV Token',\n  },\n  rewardsTokenDescription: {\n    id: 'pages.Contribute.Landing.rewardsTokenDescription',\n    defaultMessage: `The native token of our developer community, CDEV, is your\n    reward for valuable contributions.`,\n  },\n  rewardsTitle: {\n    id: 'pages.Contribute.Landing.rewardsTitle',\n    defaultMessage: 'Earn tokens and reputation',\n  },\n});\n\ntype Props = {|\n  network: Network,\n  path: string,\n  user: User,\n|};\n\nconst displayName = 'pages.Contribute.Landing';\n\nconst Landing = ({ network, user }: Props) => {\n  const [issues, setIssues] = useState(null);\n  const [error, setError] = useState(null);\n  const [loadedLocal, setLoadedLocal] = useState(false);\n  const [loadedRemote, setLoadedRemote] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const getIssues = useCallback(() => {\n    setError(null);\n    setLoading(true);\n    const options = {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${process.env.DOCS_GITHUB_TOKEN || ''}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: `query {\n          search(\n            query: \"org:JoinColony is:open is:issue label:help-wanted\",\n            type: ISSUE,\n            last: 10\n          ) {\n            edges {\n              node {\n                ... on Issue {\n                  url\n                  title\n                  createdAt\n                }\n              }\n            }\n          }\n        }`,\n      }),\n    };\n    // eslint-disable-next-line no-undef\n    fetch('https://api.github.com/graphql', options)\n      .then(res => res.json())\n      .then(({ data }) => {\n        // Remove empty nodes\n        const nodes = data.search.edges.filter(({ node }) => node !== {});\n        setIssues(nodes);\n        setLoadedRemote(true);\n        setLoading(false);\n      })\n      .catch(fetchError => {\n        setError(fetchError.message);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!loadedLocal) {\n      const localContributions = getStore('issues');\n      setIssues(localContributions);\n      setLoadedLocal(true);\n    }\n  }, [issues, loadedLocal]);\n\n  useEffect(() => setStore('issues', issues), [issues]);\n\n  useEffect(() => {\n    if (!issues && !loading) {\n      getIssues();\n    }\n  }, [getIssues, issues, loading]);\n\n  return (\n    <>\n      <div className={styles.hero}>\n        <div className={styles.heroContent}>\n          <Heading\n            appearance={{ theme: 'invert', weight: 'medium' }}\n            className={styles.title}\n            text={MSG.heroTitle}\n          />\n          <p className={styles.heroDescription}>\n            <FormattedMessage {...MSG.heroDescription} />\n          </p>\n          <Button\n            appearance={{\n              theme: 'callToAction',\n              padding: 'huge',\n              weight: 'medium',\n            }}\n            className={styles.heroButton}\n            linkTo={user ? '#contribute' : PAGE_DEVELOPER_PORTAL_DASHBOARD}\n            text={user ? MSG.heroButtonUser : MSG.heroButton}\n            type=\"submit\"\n          />\n        </div>\n        <Image\n          className={styles.heroImage}\n          alt={MSG.heroTitle}\n          src=\"/img/contribute_banner.svg\"\n        />\n      </div>\n      <div className={styles.overview}>\n        <div className={styles.overviewItem}>\n          <FormattedMessage {...MSG.overviewStep1} />\n          <FormattedMessage {...MSG.overviewStep1Description} />\n        </div>\n        <div className={styles.overviewItem}>\n          <FormattedMessage {...MSG.overviewStep2} />\n          <FormattedMessage {...MSG.overviewStep2Description} />\n        </div>\n        <div className={styles.overviewItem}>\n          <FormattedMessage {...MSG.overviewStep3} />\n          <FormattedMessage {...MSG.overviewStep3Description} />\n        </div>\n      </div>\n      <div id=\"contribute\" className={styles.section}>\n        <Heading\n          appearance={{ theme: 'dark', weight: 'medium' }}\n          className={styles.title}\n          text={MSG.contributeTitle}\n        />\n        <Heading\n          appearance={{ size: 'medium', theme: 'dark', weight: 'medium' }}\n          className={styles.sectionSubtitle}\n          text={MSG.issuesTitle}\n        />\n        <p className={styles.sectionDescription}>\n          <FormattedMessage {...MSG.issuesDescription} />\n        </p>\n        <table className={styles.issues}>\n          <thead>\n            <tr>\n              <td>\n                <FormattedMessage {...MSG.issuesHeaderDate} />\n              </td>\n              <td>\n                <FormattedMessage {...MSG.issuesHeaderTitle} />\n              </td>\n              <td>\n                <FormattedMessage {...MSG.issuesHeaderLink} />\n              </td>\n              <td>\n                <FormattedMessage {...MSG.issuesHeaderReward} />\n                {network && ' *'}\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {issues &&\n              issues.map(issue => (\n                <IssueTableRow\n                  key={issue.node.url}\n                  issue={issue}\n                  loadedRemote={loadedRemote}\n                  network={network}\n                />\n              ))}\n          </tbody>\n        </table>\n        {network && (\n          <div className={styles.issuesSubtext}>\n            <FormattedMessage {...MSG.issuesSubtext} />\n          </div>\n        )}\n        {error && <ErrorMessage error={error} />}\n        <Button\n          appearance={{\n            theme: 'reset',\n            font: 'small',\n            color: 'blue',\n            weight: 'medium',\n          }}\n          arrow=\"right\"\n          linkTo={COLONY_GITHUB_OPEN_ISSUES}\n          text={MSG.issuesFindMore}\n          type=\"submit\"\n        />\n        <Heading\n          appearance={{ size: 'medium', theme: 'dark', weight: 'medium' }}\n          className={styles.sectionSubtitle}\n          text={MSG.ongoingTitle}\n        />\n        <p className={styles.sectionDescription}>\n          <FormattedMessage {...MSG.ongoingDescription} />\n        </p>\n        <table className={styles.ongoing}>\n          <tbody>\n            <tr>\n              <td>\n                <FormattedMessage {...MSG.ongoingItemBugsTitle} />\n              </td>\n              <td>\n                <FormattedMessage {...MSG.ongoingItemBugsDescription} />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <FormattedMessage {...MSG.ongoingItemDocsTitle} />\n              </td>\n              <td>\n                <FormattedMessage {...MSG.ongoingItemDocsDescription} />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <FormattedMessage {...MSG.ongoingItemFeatureTitle} />\n              </td>\n              <td>\n                <FormattedMessage {...MSG.ongoingItemFeatureDescription} />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <FormattedMessage {...MSG.ongoingItemUserStoryTitle} />\n              </td>\n              <td>\n                <FormattedMessage\n                  {...MSG.ongoingItemUserStoryDescription}\n                  values={{\n                    discourse: (\n                      <Link\n                        href={COLONY_DISCOURSE_PROJECTS}\n                        text={MSG.linkDiscourse}\n                      />\n                    ),\n                  }}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <FormattedMessage {...MSG.ongoingItemOtherTitle} />\n              </td>\n              <td>\n                <FormattedMessage\n                  {...MSG.ongoingItemOtherDescription}\n                  values={{\n                    discourse: (\n                      <Link href={COLONY_DISCOURSE} text={MSG.linkDiscourse} />\n                    ),\n                    github: <Link href={COLONY_GITHUB} text={MSG.linkGitHub} />,\n                  }}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div className={styles.rewards}>\n        <div className={styles.rewardsContent}>\n          <Heading\n            appearance={{ theme: 'gold', weight: 'medium' }}\n            className={styles.title}\n            text={MSG.rewardsTitle}\n          />\n          <p className={styles.rewardsDescription}>\n            <FormattedMessage {...MSG.rewardsDescription} />\n          </p>\n          <div className={styles.rewardsItems}>\n            <div className={styles.rewardsItem}>\n              <Image\n                className={styles.rewardsItemImage}\n                alt={MSG.heroTitle}\n                src=\"/img/contribute_token.svg\"\n              />\n              <div className={styles.rewardsItemText}>\n                <FormattedMessage {...MSG.rewardsToken} />\n                <FormattedMessage {...MSG.rewardsTokenDescription} />\n              </div>\n            </div>\n            <div className={styles.rewardsItem}>\n              <Image\n                className={styles.rewardsItemImage}\n                alt={MSG.heroTitle}\n                src=\"/img/contribute_reputation.svg\"\n              />\n              <div className={styles.rewardsItemText}>\n                <FormattedMessage {...MSG.rewardsReputation} />\n                <FormattedMessage {...MSG.rewardsReputationDescription} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className={styles.faq}>\n        <Heading\n          appearance={{ size: 'large', theme: 'dark', weight: 'medium' }}\n          className={styles.title}\n          text={MSG.faqTitle}\n        />\n        <div className={styles.faqContent}>\n          <Questions />\n          <Image\n            className={styles.faqImage}\n            alt={MSG.heroTitle}\n            src=\"/img/contribute_faq.svg\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nLanding.displayName = displayName;\n\nexport default Landing;\n","/* @flow */\n\nimport type { ColonyClient } from '@colony/colony-js-client';\nimport type { WalletObjectType } from '@colony/purser-core';\n\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport Button from '~core/Button';\n\nimport styles from './PaymentActions.module.css';\n\nconst MSG = defineMessages({\n  buttonClaimPayout: {\n    id: 'pages.Contribute.Payment.buttonClaimPayout',\n    defaultMessage: 'Claim Payout',\n  },\n});\n\nconst displayName = 'pages.Contribute.Payment.PaymentActions';\n\ntype Payment = {|\n  finalized: boolean,\n  id: number,\n  potId: number,\n  potPayout: number,\n  recipient: string,\n|};\n\ntype Props = {|\n  colonyClient: ColonyClient,\n  payment: Payment,\n  setPayment: (payment: Payment) => void,\n  wallet: WalletObjectType,\n|};\n\nconst PaymentActions = ({\n  colonyClient,\n  payment,\n  setPayment,\n  wallet,\n}: Props) => {\n  const handleClaimPayout = async () => {\n    await colonyClient.claimPayment.send(\n      {\n        paymentId: payment.id,\n        token: colonyClient.tokenClient.contract.address,\n      },\n      {},\n    );\n    const { payout } = await colonyClient.getFundingPotPayout.call({\n      potId: payment.potId,\n      token: colonyClient.tokenClient.contract.address,\n    });\n    setPayment({\n      ...payment,\n      potPayout: payout,\n    });\n  };\n\n  const recipient =\n    payment.recipient && payment.recipient.toLowerCase() === wallet.address;\n\n  return (\n    <div className={styles.main}>\n      {payment && recipient && (\n        <div className={styles.buttons}>\n          <Button\n            disabled={\n              !payment.finalized || payment.potPayout.toString() === '0'\n            }\n            onClick={handleClaimPayout}\n            text={MSG.buttonClaimPayout}\n            type=\"submit\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nPaymentActions.displayName = displayName;\n\nexport default PaymentActions;\n","/* @flow */\n\nimport type { ColonyClient } from '@colony/colony-js-client';\nimport type { WalletObjectType } from '@colony/purser-core';\n\nimport React, { useEffect, useState } from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport type { Contribution, Network } from '~types';\n\nimport ErrorMessage from '~core/ErrorMessage';\nimport FormattedToken from '~core/FormattedToken';\nimport Link from '~core/Link';\n\nimport PaymentActions from './PaymentActions';\n\nimport {\n  getStore,\n  setStore,\n} from '~layouts/DeveloperPortalLayout/localStorage';\n\nimport styles from './Payment.module.css';\n\nconst MSG = defineMessages({\n  labelFinalized: {\n    id: 'pages.Contribute.Payment.labelFinalized',\n    defaultMessage: 'Finalized',\n  },\n  labelIssue: {\n    id: 'pages.Contribute.Payment.labelIssue',\n    defaultMessage: 'Issue',\n  },\n  labelPayment: {\n    id: 'pages.Contribute.Payment.labelPayment',\n    defaultMessage: 'Payment',\n  },\n  labelPayout: {\n    id: 'pages.Contribute.Payment.labelPayout',\n    defaultMessage: 'Payout',\n  },\n  labelPullRequest: {\n    id: 'pages.Contribute.Payment.labelPullRequest',\n    defaultMessage: 'Pull Request',\n  },\n  labelRecipient: {\n    id: 'pages.Contribute.Payment.labelRecipient',\n    defaultMessage: 'Recipient',\n  },\n  loadingPayment: {\n    id: 'pages.Contribute.Payment.loadingPayment',\n    defaultMessage: 'Loading payment...',\n  },\n});\n\nconst displayName = 'pages.Contribute.PaymentPage';\n\ntype Payment = {|\n  finalized: boolean,\n  id: number,\n  potId: number,\n  potPayout: number,\n  recipient: string,\n|};\n\ntype Props = {|\n  colonyClient: ColonyClient,\n  network: Network,\n  path: string,\n  wallet: WalletObjectType,\n|};\n\nconst server = process.env.SERVER_URL || 'http://localhost:8080';\n\nconst PaymentPage = ({ colonyClient, network, wallet }: Props) => {\n  const [contribution, setContribution] = useState<?Contribution>(null);\n  const [error, setError] = useState(null);\n  const [loadedContribution, setLoadedContribution] = useState(false);\n  const [loadedLocal, setLoadedLocal] = useState(false);\n  const [loadedPayment, setLoadedPayment] = useState(false);\n  const [payment, setPayment] = useState<?Payment>(null);\n  const [paymentId, setPaymentId] = useState<?number>(null);\n\n  useEffect(() => {\n    if (!paymentId) {\n      if (typeof window !== 'undefined' && window.location.search) {\n        const searchId = window.location.search.split('?id=')[1];\n        const parsedId = Number(searchId);\n        if (parsedId) {\n          setPaymentId(parsedId);\n        } else {\n          setError('Nothing to see here...');\n        }\n      }\n    }\n  }, [paymentId]);\n\n  useEffect(() => {\n    if (!loadedLocal && paymentId) {\n      const localPayment = getStore(`payment_${paymentId}`);\n      setPayment(localPayment);\n      setLoadedLocal(true);\n    }\n  }, [loadedLocal, payment, paymentId]);\n\n  useEffect(() => {\n    if (payment && paymentId) setStore(`payment_${paymentId}`, payment);\n  }, [payment, paymentId]);\n\n  useEffect(() => {\n    if (!loadedContribution && paymentId) {\n      (async () => {\n        const options = {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' },\n        };\n        // eslint-disable-next-line no-undef\n        fetch(\n          // eslint-disable-next-line max-len\n          `${server}/api/contribution?type=payment&typeId=${paymentId}&networkId=${\n            network ? network.id : 1\n          }`,\n          options,\n        )\n          .then(res => res.json())\n          .then(data => {\n            setContribution(data.contribution);\n          })\n          .catch(fetchError => {\n            setError(fetchError.message);\n          });\n        setLoadedContribution(true);\n      })();\n    }\n  }, [loadedContribution, network, paymentId]);\n\n  useEffect(() => {\n    if (!loadedPayment && colonyClient && paymentId) {\n      (async () => {\n        try {\n          const result = await colonyClient.getPayment.call({\n            paymentId,\n          });\n          const { payout } = await colonyClient.getFundingPotPayout.call({\n            potId: result.potId,\n            token: colonyClient.tokenClient.contract.address,\n          });\n          setPayment({\n            ...result,\n            id: paymentId,\n            potId: result.potId,\n            potPayout: payout,\n          });\n        } catch (colonyError) {\n          setError(colonyError.message);\n        }\n        setLoadedPayment(true);\n      })();\n    }\n  }, [colonyClient, loadedPayment, paymentId]);\n\n  return (\n    <div className={styles.main}>\n      {!error && !contribution && !payment && (\n        <FormattedMessage {...MSG.loadingPayment} />\n      )}\n      {contribution && payment && (\n        <>\n          <PaymentActions\n            colonyClient={colonyClient}\n            setPayment={setPayment}\n            payment={payment}\n            wallet={wallet}\n          />\n          <div className={styles.content}>\n            <div className={styles.field}>\n              <div className={styles.label}>\n                <FormattedMessage {...MSG.labelPayment} />\n              </div>\n              <div className={styles.value}>{payment.id}</div>\n            </div>\n            <div className={styles.field}>\n              <div className={styles.label}>\n                <FormattedMessage {...MSG.labelFinalized} />\n              </div>\n              <div className={styles.value}>{payment.finalized.toString()}</div>\n            </div>\n            <div className={styles.field}>\n              <div className={styles.label}>\n                <FormattedMessage {...MSG.labelPayout} />\n              </div>\n              <div className={styles.value}>\n                <FormattedToken amount={contribution.payout} symbol=\"CDEV\" />\n              </div>\n            </div>\n            <div className={styles.field}>\n              <div className={styles.label}>\n                <FormattedMessage {...MSG.labelRecipient} />\n              </div>\n              <div className={styles.value}>\n                {`@${contribution.username} (${payment.recipient})`}\n              </div>\n            </div>\n            {contribution.issue && (\n              <div className={styles.field}>\n                <div className={styles.label}>\n                  <FormattedMessage {...MSG.labelIssue} />\n                </div>\n                <div className={styles.value}>\n                  <Link href={contribution.issue} text={contribution.issue} />\n                </div>\n              </div>\n            )}\n            {contribution.pullRequest && (\n              <div className={styles.field}>\n                <div className={styles.label}>\n                  <FormattedMessage {...MSG.labelPullRequest} />\n                </div>\n                <div className={styles.value}>\n                  <Link\n                    href={contribution.pullRequest}\n                    text={contribution.pullRequest}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n      {error && <ErrorMessage error={error} />}\n    </div>\n  );\n};\n\nPaymentPage.displayName = displayName;\n\nexport default PaymentPage;\n","/* @flow */\n\nimport type { ColonyClient } from '@colony/colony-js-client';\nimport type { WalletObjectType } from '@colony/purser-core';\n\nimport React, { useState } from 'react';\nimport { defineMessages } from 'react-intl';\nimport { sha3 } from 'web3-utils';\n\nimport type { Contribution } from '~types';\n\nimport ipfs from '~layouts/DeveloperPortalLayout/ipfs';\n\nimport Button from '~core/Button';\nimport Input from '~core/Input';\n\nimport styles from './TaskActions.module.css';\n\nconst MSG = defineMessages({\n  buttonApproveWorker: {\n    id: 'pages.Contribute.Task.buttonApproveWorker',\n    defaultMessage: 'Approve Worker',\n  },\n  buttonStartWork: {\n    id: 'pages.Contribute.Task.buttonStartWork',\n    defaultMessage: 'Start Work',\n  },\n  buttonSubmitWork: {\n    id: 'pages.Contribute.Task.buttonSubmitWork',\n    defaultMessage: 'Submit Work',\n  },\n  buttonSubmitRating: {\n    id: 'pages.Contribute.Task.buttonSubmitRating',\n    defaultMessage: 'Submit Rating',\n  },\n  buttonRevealRating: {\n    id: 'pages.Contribute.Task.buttonRevealRating',\n    defaultMessage: 'Reveal Rating',\n  },\n  buttonFinalizeTask: {\n    id: 'pages.Contribute.Task.buttonFinalizeTask',\n    defaultMessage: 'Finalize Task',\n  },\n  buttonClaimPayout: {\n    id: 'pages.Contribute.Task.buttonClaimPayout',\n    defaultMessage: 'Claim Payout',\n  },\n  labelPullRequest: {\n    id: 'pages.Contribute.Task.labelPullRequest',\n    defaultMessage: 'Pull Request',\n  },\n  labelRating: {\n    id: 'pages.Contribute.Task.labelRating',\n    defaultMessage: 'Rating',\n  },\n  labelRatingSecret: {\n    id: 'pages.Contribute.Task.labelRatingSecret',\n    defaultMessage: 'Rating Secret',\n  },\n});\n\nconst displayName = 'pages.Contribute.Task.TaskActions';\n\ntype Task = {|\n  id: number,\n  completionDate: string,\n  dueDate: string,\n  manager: {\n    address: string,\n    rating: number,\n  },\n  potId: number,\n  potPayout: number,\n  ratings: {\n    count: number,\n  },\n  specificationHash: string,\n  status: string,\n  worker: {\n    address: string,\n    rating: number,\n  },\n|};\n\ntype Props = {|\n  colonyClient: ColonyClient,\n  contribution: Contribution,\n  task: Task,\n  setContribution: (contribution: Contribution) => void,\n  setError: (error: string) => void,\n  setTask: (task: Task) => void,\n  wallet: WalletObjectType,\n|};\n\nconst server = process.env.SERVER_URL || 'http://localhost:8080';\n\nconst TaskActions = ({\n  colonyClient,\n  contribution,\n  setContribution,\n  setError,\n  setTask,\n  task,\n  wallet,\n}: Props) => {\n  const [pullRequest, setPullRequest] = useState('');\n  const [rating, setRating] = useState(0);\n  const [ratingSecret, setRatingSecret] = useState('');\n\n  const manager =\n    task.manager &&\n    task.manager.address &&\n    task.manager.address.toLowerCase() === wallet.address;\n\n  const worker =\n    task.worker &&\n    task.worker.address &&\n    task.worker.address.toLowerCase() === wallet.address;\n\n  const canApproveWorker = contribution.operations[0];\n\n  const canClaimPayout =\n    task.status === 'FINALIZED' && task.potPayout.toString() !== '0';\n\n  const canFinalizeTask =\n    task.completionDate &&\n    task.manager.rating !== 0 &&\n    task.worker.rating !== 0 &&\n    task.status === 'ACTIVE';\n\n  const canRevealRating =\n    (worker && task.completionDate && task.manager.rating === 0) ||\n    (manager && task.completionDate && task.worker.rating === 0);\n\n  const canSubmitRating =\n    (worker && task.completionDate && task.ratings.count === 0) ||\n    (manager && task.completionDate && task.ratings.count === 1);\n\n  const canSubmitWork = worker && !task.completionDate;\n\n  const handleApproveWorker = async () => {\n    const operationJSON = contribution.operations[0];\n    if (operationJSON) {\n      const operation = await colonyClient.setTaskWorkerRole.restoreOperation(\n        operationJSON,\n      );\n      await operation.sign();\n      // TODO The gas limit needs to be fixed in colonyJS\n      await operation.send({ gasLimit: 1000000 });\n      const taskRole = await colonyClient.getTaskRole.call({\n        taskId: task.id,\n        role: 'WORKER',\n      });\n      setTask({ ...task, worker: taskRole });\n      const operations = contribution.operations.shift();\n      const options = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ operations }),\n      };\n      // eslint-disable-next-line no-undef\n      fetch(`${server}/api/contribution?type=task&typeId=${task.id}`, options)\n        .then(res => res.json())\n        .then(data => {\n          setContribution(data.contribution);\n        })\n        .catch(fetchError => {\n          setError(fetchError.message);\n        });\n    }\n  };\n\n  const handelChangePullRequest = event => {\n    setPullRequest(event.currentTarget.value);\n  };\n\n  const handelChangeRating = event => {\n    setRating(event.currentTarget.value);\n  };\n\n  const handelChangeRatingSecret = event => {\n    setRatingSecret(event.currentTarget.value);\n  };\n\n  const handleClaimPayout = async () => {\n    await colonyClient.claimTaskPayout.send(\n      {\n        taskId: task.id,\n        role: 'WORKER',\n        token: colonyClient.tokenClient.contract.address,\n      },\n      {},\n    );\n    const { payout } = await colonyClient.getFundingPotPayout.call({\n      potId: task.potId,\n      token: colonyClient.tokenClient.contract.address,\n    });\n    setTask({\n      ...task,\n      potPayout: payout,\n    });\n  };\n\n  const handleFinalizeTask = async () => {\n    await colonyClient.finalizeTask.send({ taskId: task.id }, {});\n    const result = await colonyClient.getTask.call({\n      taskId: task.id,\n    });\n    setTask({ ...task, ...result });\n  };\n\n  const handleRevealRating = async () => {\n    const salt = sha3(ratingSecret);\n    await colonyClient.revealTaskWorkRating.send(\n      {\n        taskId: task.id,\n        role: worker ? 'MANAGER' : 'WORKER',\n        rating,\n        salt,\n      },\n      {},\n    );\n    const result = await colonyClient.getTaskRole.call({\n      taskId: task.id,\n      role: worker ? 'MANAGER' : 'WORKER',\n    });\n    if (worker) setTask({ ...task, manager: result });\n    else setTask({ ...task, worker: result });\n  };\n\n  const handleStartWork = async () => {\n    if (wallet.address) {\n      const operation = await colonyClient.setTaskWorkerRole.startOperation({\n        taskId: task.id,\n        // $FlowFixMe See https://github.com/JoinColony/colonyJS/pull/416\n        address: wallet.address,\n      });\n      await operation.sign();\n      const options = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ operation: operation.toJSON() }),\n      };\n      // eslint-disable-next-line no-undef\n      fetch(`${server}/api/contribution?type=task&typeId=${task.id}`, options)\n        .then(res => res.json())\n        .then(data => {\n          setContribution(data.contribution);\n        })\n        .catch(fetchError => {\n          setError(fetchError.message);\n        });\n    }\n  };\n\n  const handleSubmitRating = async () => {\n    const { secret } = await colonyClient.generateSecret.call({\n      salt: sha3(ratingSecret),\n      value: rating,\n    });\n    await colonyClient.submitTaskWorkRating.send(\n      {\n        taskId: task.id,\n        role: worker ? 'MANAGER' : 'WORKER',\n        secret,\n      },\n      {},\n    );\n    const ratings = await colonyClient.getTaskWorkRatingSecretsInfo.call({\n      taskId: task.id,\n    });\n    setTask({ ...task, ratings });\n  };\n\n  const handleSubmitWork = async () => {\n    await ipfs.init();\n    const deliverableHash = await ipfs.saveHash(pullRequest);\n    await ipfs.stop();\n    await colonyClient.submitTaskDeliverable.send(\n      {\n        taskId: task.id,\n        deliverableHash,\n      },\n      {},\n    );\n    const result = await colonyClient.getTask.call({\n      taskId: task.id,\n    });\n    setTask({ ...task, ...result });\n  };\n\n  return (\n    <div className={styles.main}>\n      {task.worker && !task.worker.address && (\n        <div className={styles.section}>\n          <Button\n            disabled={canApproveWorker}\n            onClick={handleStartWork}\n            text={MSG.buttonStartWork}\n            type=\"submit\"\n          />\n        </div>\n      )}\n      {worker && (\n        <div className={styles.section}>\n          <Button\n            disabled={!canSubmitWork}\n            onClick={handleSubmitWork}\n            text={MSG.buttonSubmitWork}\n            type=\"submit\"\n          />\n          <Button\n            disabled={!canSubmitRating}\n            onClick={handleSubmitRating}\n            text={MSG.buttonSubmitRating}\n            type=\"submit\"\n          />\n          <Button\n            disabled={canRevealRating}\n            onClick={handleRevealRating}\n            text={MSG.buttonRevealRating}\n            type=\"submit\"\n          />\n          <Button\n            disabled={!canClaimPayout}\n            onClick={handleClaimPayout}\n            text={MSG.buttonClaimPayout}\n            type=\"submit\"\n          />\n        </div>\n      )}\n      {manager && (\n        <div className={styles.section}>\n          <Button\n            disabled={!canApproveWorker}\n            onClick={handleApproveWorker}\n            text={MSG.buttonApproveWorker}\n            type=\"submit\"\n          />\n          <Button\n            disabled={!canSubmitRating}\n            onClick={handleSubmitRating}\n            text={MSG.buttonSubmitRating}\n            type=\"submit\"\n          />\n          <Button\n            disabled={!canRevealRating}\n            onClick={handleRevealRating}\n            text={MSG.buttonRevealRating}\n            type=\"submit\"\n          />\n          <Button\n            disabled={!canFinalizeTask}\n            onClick={handleFinalizeTask}\n            text={MSG.buttonFinalizeTask}\n            type=\"submit\"\n          />\n        </div>\n      )}\n      <div className={styles.section}>\n        {(canSubmitRating || canRevealRating) && (\n          <>\n            <Input\n              appearance={{\n                padding: 'huge',\n                size: 'large',\n              }}\n              id=\"rating\"\n              onChange={handelChangeRating}\n              label={MSG.labelRating}\n              type=\"number\"\n              value={rating}\n            />\n            <Input\n              appearance={{\n                padding: 'huge',\n                size: 'large',\n              }}\n              id=\"ratingSecret\"\n              onChange={handelChangeRatingSecret}\n              label={MSG.labelRatingSecret}\n              type=\"text\"\n              value={ratingSecret}\n            />\n          </>\n        )}\n        {canSubmitWork && (\n          <Input\n            appearance={{\n              padding: 'huge',\n              size: 'large',\n            }}\n            id=\"pullRequest\"\n            onChange={handelChangePullRequest}\n            label={MSG.labelPullRequest}\n            type=\"text\"\n            value={pullRequest}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nTaskActions.displayName = displayName;\n\nexport default TaskActions;\n","/* @flow */\n\nimport type { ColonyClient } from '@colony/colony-js-client';\nimport type { WalletObjectType } from '@colony/purser-core';\n\nimport React, { useEffect, useState } from 'react';\nimport { defineMessages, FormattedDate, FormattedMessage } from 'react-intl';\n\nimport type { Contribution, Network } from '~types';\n\nimport ErrorMessage from '~core/ErrorMessage';\nimport FormattedToken from '~core/FormattedToken';\nimport Link from '~core/Link';\n\nimport TaskActions from './TaskActions';\n\nimport {\n  getStore,\n  setStore,\n} from '~layouts/DeveloperPortalLayout/localStorage';\n\nimport styles from './Task.module.css';\n\nconst MSG = defineMessages({\n  labelCompletionDate: {\n    id: 'pages.Contribute.Task.labelCompletionDate',\n    defaultMessage: 'Completion Date',\n  },\n  labelPullRequest: {\n    id: 'pages.Contribute.Task.labelPullRequest',\n    defaultMessage: 'Pull Request',\n  },\n  labelDueDate: {\n    id: 'pages.Contribute.Task.labelDueDate',\n    defaultMessage: 'Due Date',\n  },\n  labelPayout: {\n    id: 'pages.Contribute.Task.labelPayout',\n    defaultMessage: 'Payout',\n  },\n  labelIssue: {\n    id: 'pages.Contribute.Task.labelIssue',\n    defaultMessage: 'Issue',\n  },\n  labelStatus: {\n    id: 'pages.Contribute.Task.labelStatus',\n    defaultMessage: 'Status',\n  },\n  labelTask: {\n    id: 'pages.Contribute.Task.labelTask',\n    defaultMessage: 'Task',\n  },\n  labelWorker: {\n    id: 'pages.Contribute.Task.labelWorker',\n    defaultMessage: 'Worker',\n  },\n  loadingTask: {\n    id: 'pages.Contribute.Task.loadingTask',\n    defaultMessage: 'Loading task...',\n  },\n});\n\nconst displayName = 'pages.Contribute.TaskPage';\n\ntype Task = {|\n  id: number,\n  completionDate: string,\n  dueDate: string,\n  manager: {\n    address: string,\n    rating: number,\n  },\n  potId: number,\n  potPayout: number,\n  ratings: {\n    count: number,\n  },\n  specificationHash: string,\n  status: string,\n  worker: {\n    address: string,\n    rating: number,\n  },\n|};\n\ntype Props = {|\n  colonyClient: ColonyClient,\n  network: Network,\n  path: string,\n  wallet: WalletObjectType,\n|};\n\nconst server = process.env.SERVER_URL || 'http://localhost:8080';\n\nconst TaskPage = ({ colonyClient, network, wallet }: Props) => {\n  const [contribution, setContribution] = useState<?Contribution>(null);\n  const [error, setError] = useState(null);\n  const [loadedContribution, setLoadedContribution] = useState(false);\n  const [loadedLocal, setLoadedLocal] = useState(false);\n  const [loadedTask, setLoadedTask] = useState(false);\n  const [task, setTask] = useState<?Task>(null);\n  const [taskId, setTaskId] = useState<?number>(null);\n\n  useEffect(() => {\n    if (!taskId) {\n      if (typeof window !== 'undefined' && window.location.search) {\n        const searchId = window.location.search.split('?id=')[1];\n        const parsedId = Number(searchId);\n        if (parsedId) {\n          setTaskId(parsedId);\n        } else {\n          setError('Nothing to see here...');\n        }\n      }\n    }\n  }, [taskId]);\n\n  useEffect(() => {\n    if (!loadedLocal && taskId) {\n      const localTask = getStore(`task_${taskId}`);\n      setTask(localTask);\n      setLoadedLocal(true);\n    }\n  }, [task, loadedLocal, taskId]);\n\n  useEffect(() => {\n    if (taskId && task) setStore(`task_${taskId}`, task);\n  }, [task, taskId]);\n\n  useEffect(() => {\n    if (!loadedContribution && taskId) {\n      (async () => {\n        const options = {\n          method: 'GET',\n          headers: { 'Content-Type': 'application/json' },\n        };\n        // eslint-disable-next-line no-undef\n        fetch(\n          `${server}/api/contribution?type=task&typeId=${taskId}&networkId=${\n            network ? network.id : 1\n          }`,\n          options,\n        )\n          .then(res => res.json())\n          .then(data => {\n            setContribution(data.contribution);\n          })\n          .catch(fetchError => {\n            setError(fetchError.message);\n          });\n        setLoadedContribution(true);\n      })();\n    }\n  }, [loadedContribution, network, taskId]);\n\n  useEffect(() => {\n    if (!loadedTask && taskId && colonyClient) {\n      (async () => {\n        try {\n          const result = await colonyClient.getTask.call({\n            taskId,\n          });\n          const manager = await colonyClient.getTaskRole.call({\n            taskId,\n            role: 'MANAGER',\n          });\n          const worker = await colonyClient.getTaskRole.call({\n            taskId,\n            role: 'WORKER',\n          });\n          const ratings = await colonyClient.getTaskWorkRatingSecretsInfo.call({\n            taskId,\n          });\n          const { payout } = await colonyClient.getFundingPotPayout.call({\n            potId: result.potId,\n            token: colonyClient.tokenClient.contract.address,\n          });\n          setTask({\n            ...result,\n            ratings,\n            manager,\n            potPayout: payout,\n            worker,\n          });\n        } catch (colonyError) {\n          setError(colonyError.message);\n        }\n        setLoadedTask(true);\n      })();\n    }\n  }, [colonyClient, loadedTask, task, taskId]);\n\n  return (\n    <div className={styles.main}>\n      {!error && !contribution && !task && (\n        <FormattedMessage {...MSG.loadingTask} />\n      )}\n      {task && contribution && (\n        <div>\n          {task && (\n            <TaskActions\n              colonyClient={colonyClient}\n              contribution={contribution}\n              setContribution={setContribution}\n              setError={setError}\n              setTask={setTask}\n              task={task}\n              wallet={wallet}\n            />\n          )}\n          <div className={styles.content}>\n            <div className={styles.field}>\n              <div className={styles.label}>\n                <FormattedMessage {...MSG.labelTask} />\n              </div>\n              <div className={styles.value}>{task.id}</div>\n            </div>\n            <div className={styles.field}>\n              <div className={styles.label}>\n                <FormattedMessage {...MSG.labelStatus} />\n              </div>\n              <div className={styles.value}>{task.status}</div>\n            </div>\n            <div className={styles.field}>\n              <div className={styles.label}>\n                <FormattedMessage {...MSG.labelPayout} />\n              </div>\n              <div className={styles.value}>\n                <FormattedToken amount={contribution.payout} symbol=\"CDEV\" />\n              </div>\n            </div>\n            {task.worker.address && (\n              <div className={styles.field}>\n                <div className={styles.label}>\n                  <FormattedMessage {...MSG.labelWorker} />\n                </div>\n                <div className={styles.value}>\n                  {`@${contribution.username} (${task.worker.address})`}\n                </div>\n              </div>\n            )}\n            <div className={styles.field}>\n              <div className={styles.label}>\n                <FormattedMessage {...MSG.labelDueDate} />\n              </div>\n              <div className={styles.value}>\n                <FormattedDate\n                  day=\"2-digit\"\n                  month=\"2-digit\"\n                  year=\"numeric\"\n                  value={task.dueDate}\n                />\n              </div>\n            </div>\n            {contribution.issue && (\n              <div className={styles.field}>\n                <div className={styles.label}>\n                  <FormattedMessage {...MSG.labelIssue} />\n                </div>\n                <div className={styles.value}>\n                  <Link href={contribution.issue} text={contribution.issue} />\n                </div>\n              </div>\n            )}\n            {task.completionDate && (\n              <div className={styles.field}>\n                <div className={styles.label}>\n                  <FormattedMessage {...MSG.labelCompletionDate} />\n                </div>\n                <div className={styles.value}>\n                  <FormattedDate\n                    day=\"2-digit\"\n                    month=\"2-digit\"\n                    year=\"numeric\"\n                    value={task.completionDate}\n                  />\n                </div>\n              </div>\n            )}\n            {contribution.pullRequest && (\n              <div className={styles.field}>\n                <div className={styles.label}>\n                  <FormattedMessage {...MSG.labelPullRequest} />\n                </div>\n                <div className={styles.value}>\n                  <Link\n                    href={contribution.pullRequest}\n                    text={contribution.pullRequest}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      {error && <ErrorMessage error={error} />}\n    </div>\n  );\n};\n\nTaskPage.displayName = displayName;\n\nexport default TaskPage;\n","/* @flow */\n\nimport type { IntlShape } from 'react-intl';\nimport type { ColonyClient } from '@colony/colony-js-client';\nimport type { WalletObjectType } from '@colony/purser-core';\n\nimport React from 'react';\nimport { Router } from '@reach/router';\nimport { defineMessages } from 'react-intl';\nimport { Helmet } from 'react-helmet';\n\nimport type { Network, User } from '~types';\n\nimport SEO from '~parts/SEO';\n\nimport { PAGE_DEVELOPER_PORTAL_CONTRIBUTE } from '~routes';\n\nimport Landing from './Landing';\nimport Payment from './Payment';\nimport Task from './Task';\n\nimport styles from './Contribute.module.css';\n\nconst MSG = defineMessages({\n  pageDescription: {\n    id: 'pages.Contribute.pageDescription',\n    defaultMessage: `A list of open issues that developers can work on to earn\n    tokens and reputation.`,\n  },\n  pageTitle: {\n    id: 'pages.Contribute.pageTitle',\n    defaultMessage: 'Contribute',\n  },\n});\n\ntype Props = {|\n  colonyClient: ColonyClient,\n  intl: IntlShape,\n  network: Network,\n  /* eslint-disable-next-line react/no-unused-prop-types */\n  page: string,\n  user: User,\n  wallet: WalletObjectType,\n|};\n\nconst displayName = 'pages.Contribute';\n\nconst Contribute = ({\n  colonyClient,\n  intl: { formatMessage },\n  network,\n  user,\n  wallet,\n}: Props) => {\n  const title = formatMessage(MSG.pageTitle);\n  return (\n    <>\n      <SEO description={MSG.pageDescription} title={title} />\n      {/*\n        Helmet title must be a prop to work with react hooks.\n        See https://github.com/nfl/react-helmet/issues/437\n      */}\n      <Helmet title={title} />\n      <main className={styles.main}>\n        <Router primary={false}>\n          <Landing\n            path={PAGE_DEVELOPER_PORTAL_CONTRIBUTE}\n            network={network}\n            user={user}\n          />\n          {/* TODO Update to modal. No need to use route constant here becuase\n            payment will soon be a modal */}\n          <Payment\n            path=\"/contribute/payment\"\n            colonyClient={colonyClient}\n            network={network}\n            wallet={wallet}\n          />\n          {/* TODO Update to modal. No need to use route constant here becuase\n            payment will soon be a modal */}\n          <Task\n            path=\"/contribute/task\"\n            colonyClient={colonyClient}\n            network={network}\n            wallet={wallet}\n          />\n        </Router>\n      </main>\n    </>\n  );\n};\n\nContribute.displayName = displayName;\n\nexport default Contribute;\n","/* @flow */\n\nimport { compose, nest } from 'recompose';\nimport { injectIntl } from 'react-intl';\n\nimport DeveloperPortalLayout from '~layouts/DeveloperPortalLayout';\n\nimport Contribute from './Contribute.jsx';\n\nconst enhance = compose(injectIntl);\n\nexport default nest<{}>(DeveloperPortalLayout, enhance(Contribute));\n","/* @flow */\n\nexport { default } from './Contribute';\n"],"sourceRoot":""}