{"version":3,"sources":["webpack:///./src/modules/core/components/Heading/Heading.jsx","webpack:///./src/modules/core/components/Heading/index.js","webpack:///./src/modules/core/components/Link/Link.jsx","webpack:///./src/modules/core/components/Link/Link.js","webpack:///./src/modules/core/components/Link/index.js","webpack:///./src/utils/css/index.js","webpack:///./src/utils/docs/index.js","webpack:///./src/routes/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/modules/core/components/Icon/Icon.jsx","webpack:///./src/modules/core/components/Icon/index.js","webpack:///./src/modules/core/components/Button/Button.jsx","webpack:///./src/modules/core/components/Button/index.js","webpack:///./src/modules/core/components/Image/Image.jsx","webpack:///./src/modules/core/components/Image/index.js","webpack:///./src/context/FileContext.js","webpack:///./src/hoc/location/index.js","webpack:///./src/utils/strings/index.js","webpack:///./i18nConfig.js","webpack:///./src/modules/layouts/components/GlobalLayout/GlobalLayout.jsx","webpack:///./src/modules/layouts/components/GlobalLayout/GlobalLayout.js","webpack:///./src/modules/core/components/NavigationToggle/NavigationToggle.jsx","webpack:///./src/modules/core/components/Popover/getPopoverArrowClasses.js","webpack:///./src/modules/core/components/Popover/PopoverWrapper.jsx","webpack:///./src/modules/core/components/Popover/Popover.jsx","webpack:///./src/modules/core/components/Search/Search.jsx","webpack:///./src/docsearch-settings.js","webpack:///./src/modules/core/components/VerticalMenu/VerticalMenu.jsx","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/DocsDropdownContent/DocsDropdownContent.jsx","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/Header/Header.jsx","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/Footer/Footer.jsx","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/DeveloperPortalLayout.jsx","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/DeveloperPortalLayout.js","webpack:///./src/modules/layouts/components/DeveloperPortalLayout/index.js","webpack:///./src/modules/pages/components/Developers/CoreProductsItem/CoreProductsItem.jsx","webpack:///./src/modules/pages/components/Developers/CoreProducts/CoreProducts.jsx","webpack:///./src/modules/pages/components/Developers/CoreProducts/index.js","webpack:///./src/modules/pages/components/Developers/OpenSourceItem/OpenSourceItem.jsx","webpack:///./src/modules/pages/components/Developers/OpenSource/OpenSource.jsx","webpack:///./src/modules/pages/components/Developers/OpenSource/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Heading","_ref","_ref$appearance","appearance","size","children","intl","tagName","text","textValues","props","objectWithoutPropertiesLoose_default","HeadingElement","huge","large","medium","mediumLarge","normal","small","tiny","value","getChildrenOrText","react_default","a","createElement","Object","assign","title","undefined","className","getMainClasses","styles","displayName","injectIntl","__webpack_require__","d","__webpack_exports__","components_Heading_Heading","Link","arrow","href","formatMessage","isInternal","persistLocale","transformUrl","linkContent","classNames","main","gatsby_browser_entry","to","enhance","compose","defaultProps","withProps","url","locale","test","isOnPageAnchor","shouldPersistLocale","DEFAULT_LOCALE","rel","target","core_components_Link_Link","styleObject","state","_appearance","theme","modifiers","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_3___default","styleArray","themeClass","capitalize","camelcase","push","modifierClasses","keys","map","key","filter","i","stateClasses","concat","join","orderDocs","b","frontmatter","order","getSectionsForLocale","project","sectionOrderForLocale","sectionOrder","sectionTranslations","localeTranslatedSectionConfig","find","sections","_ref2","docs","some","_ref3","fields","sort","indexOf","slug","bind","getDocsForLocale","doc","getProjectEntryPoint","docSections","length","firstSectionDocs","docsForLocale","firstDoc","transformProjectData","edge","edgeNode","node","entryPoint","PAGE_INDEX","PAGE_GET_STARTED_COLONYJS","PAGE_DEVELOPER_PORTAL","PAGE_PRIVACY_POLICY","PAGE_TERMS_SERVICE","COLONY_BLOG","COLONY_DISCOURSE","COLONY_DISCOURSE_SUPPORT","COLONY_GITHUB","COLONY_GITTER","COLONY_GITTER_COLONYJS","COLONY_TWITTER","COLONY_WEBSITE","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","icons","iconNames","reduce","prev","current","withPrefix","Icon","name","titleValues","_ref$viewBox","viewBox","viewBoxOverride","icon","titleText","role","aria-label","xlinkHref","components_Icon_Icon","Button","linkTo","_ref$type","type","rest","buttonContent","components_Button_Button","Image","alt","altValues","src","altText","FileContext","Consumer","files","components_Image_Image","withLocation","_reach_router__WEBPACK_IMPORTED_MODULE_0__","recompose__WEBPACK_IMPORTED_MODULE_1__","BaseComponent","fromRenderProps","Location","locationProps","word","charAt","toUpperCase","slice","CONFIGURED_LOCALES","module","exports","localeMessages","en","messages","enMessages","data","enLocaleData","configuredLocalesData","accumulator","configKey","addLocaleData","configuredMessageLocales","localesWithoutMessages","missingLocalesString","localesString","console","warn","checkLocaleConfig","GlobalLayout","location","getLocaleString","pathname","split","getMessagesForLocale","_2396874169","Fragment","Helmet_default","Provider","edges","next","_Object$assign","sourceInstanceName","relativePath","publicURL","index_es","defaultLocale","MSG","defineMessages","btnTitleToggleNavigation","id","defaultMessage","NavigationToggle","isNavOpen","onClick","aria-hidden","mobileIcon","mobileIconLine","getPopoverArrowClasses","_temp","placement","placementClass","PopoverWrapper","arrowProps","innerRef","onFocus","retainRefFocus","style","_ref$wrapperClassName","wrapperClassName","hideArrow","showArrow","ref","data-placement","tabIndex","Popover","_this","_Component","call","this","removeOutsideClickListener","document","body","removeEventListener","handleOutsideClick","getChildProps","assertThisInitialized_default","_this$props","trigger","childProps","aria-describedby","isOpen","hover","onMouseEnter","requestOpen","onMouseLeave","close","click","toggle","disabled","evt","HTMLElement","contentNode","contains","refNode","openDelay","openTimeout","setTimeout","open","setState","onClose","clearTimeout","registerRefNode","registerContentNode","handleWrapperFocus","HTMLInputElement","focus","renderReference","_assertThisInitialize2","cloneElement","renderContent","_this$props2","content","contentValues","isValidElement","nanoid","componentDidUpdate","_ref4","closeOnOutsideClick","prevIsOpenProp","prevOpen","isOpenProp","addEventListener","componentWillUnmount","render","_this2","_this$props3","origPlacement","popperProps","esm","_ref5","Popover_PopoverWrapper","Component","defaultPlaceholderText","Search","isEnabled","focusInput","inputRef","createRef","componentDidMount","window","inputId","e","then","t","docsearch","default","apiKey","indexName","inputSelector","placeholderText","placeholderTextValues","placeholderTextContent","isQuickSearch","searchInput","placeholder","quickSearchIcon","navAriaLabelDefault","VerticalMenu","_ref$headingAppearanc","headingAppearance","headingText","headingTextValues","menuItems","_ref$numColumns","numColumns","columnStyles","columnCount","labelText","ariaProps","slugify","margin","weight","menu","menuItemProps","menuItem","ariaLabel","heroTitle","heroSubTitle","headingCoreProducts","headingOpenSourceProducts","getProjectLinks","DocsDropdownContent","coreProjects","openSourceProjects","coreProjectsLinks","textA","textB","coreProjectSortOrder","openSourceProjectsLinks","_ref6","openSourceProjectSortOrder","featureProject","_ref7","heroLink","hero","logoContainer","logo","logoSmall","cta","menuContent","menuContainer","components_VerticalMenu_VerticalMenu","margins","expandForViewport","imageAltDevPortal","navAriaLabel","navLinkDocs","navLinkSupport","Header","_useState","useState","setIsNavOpen","menuWrapper","aria-expanded","navContainer","navigation","navLink","docsDropdownParent","components_Popover_Popover","DeveloperPortalLayout_DocsDropdownContent_DocsDropdownContent","offset","docsDropdownContainer","dropdownParent","aria-haspopup","mobileDocsDropdown","searchContainer","components_Search_Search","navToggle","components_NavigationToggle_NavigationToggle","hideAtSize","linkVisitColony","navTitleGetStarted","navTitleCoreProducts","navTitleOpenSourceTools","metaLinkTos","metaLinkPrivacy","metaLinkMediaKit","repoUrl","Footer","footerContent","navRow","domain","navGroup","navGroupItem","metaRow","metaNavContainer","metaNav","metaNavLink","socialIconContainer","socialIcon","DeveloperPortalLayout","projectQueryData","_3078273232","DeveloperPortalLayout_Header_Header","DeveloperPortalLayout_Footer_Footer","nest","layouts_components_DeveloperPortalLayout_DeveloperPortalLayout","docsLinkText","CoreProductsItem","_ref$project","description","imageContainer","image","descriptionText","itemLink","sectionTitle","sectionText","CoreProducts","projects","_2144333317","projectEdge","nameA","nameB","gradientWrapper","sectionIntroContent","coreProductsRow","coreProductsItem","Developers_CoreProductsItem_CoreProductsItem","Developers_CoreProducts_CoreProducts","OpenSourceItem","contentContainer","linkContainer","sectionIntroTitle","sectionIntroText","OpenSource","_1632122742","introSection","openSourceProductGrid","openSourceItem","Developers_OpenSourceItem_OpenSourceItem","Developers_OpenSource_OpenSource","m","require","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","propTypes","shape"],"mappings":"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","file":"2-770cac357e4a33afb244.js","sourcesContent":["/* @flow */\nimport type { Node } from 'react';\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport { getMainClasses } from '~utils/css';\nimport { getChildrenOrText } from '~utils/strings';\n\nimport styles from './Heading.module.css';\n\nexport type Appearance = {|\n  theme?: 'dark' | 'light' | 'invert' | 'primary' | 'grey',\n  margin?: 'none' | 'tiny' | 'small' | 'medium' | 'large' | 'double',\n  size?:\n    | 'tiny'\n    | 'small'\n    | 'normal'\n    | 'medium'\n    | 'mediumLarge'\n    | 'large'\n    | 'huge',\n  weight?: 'thin' | 'medium' | 'bold',\n|};\n\ntype ValidTagNames = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n\ntype Props = {\n  /** Appearance object */\n  appearance?: Appearance,\n  /** Used to extend the functionality of the component. This will not generate a title attribute on the element. */\n  children?: Node,\n  /** Injected by `injectIntl` */\n  intl: IntlShape,\n  /** String that will hard set the heading element to render */\n  tagName?: ValidTagNames,\n  /** A string or a `MessageDescriptor` that make up the headings's text */\n  text?: MessageDescriptor | string,\n  /** Values for text (react-intl interpolation) */\n  textValues?: Object,\n};\n\nconst displayName = 'Heading';\n\nconst Heading = ({\n  appearance = { size: 'huge' },\n  children,\n  intl,\n  tagName,\n  text,\n  textValues,\n  ...props\n}: Props) => {\n  const { size } = appearance;\n  const HeadingElement =\n    tagName ||\n    {\n      huge: 'h1',\n      large: 'h2',\n      medium: 'h3',\n      mediumLarge: 'h3',\n      normal: 'h4',\n      small: 'h5',\n      tiny: 'h6',\n    }[size || 'huge'];\n  const value = getChildrenOrText(children, text, textValues, intl);\n  return (\n    <HeadingElement\n      title={typeof value === 'string' ? value : undefined}\n      className={getMainClasses(appearance, styles)}\n      {...props}\n    >\n      {value}\n    </HeadingElement>\n  );\n};\n\nHeading.displayName = displayName;\n\nexport default injectIntl(Heading);\n","/* @flow */\nexport { default } from './Heading.jsx';\n\nexport * from './Heading.jsx';\n","/* @flow */\nimport React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\n\nimport type { OutProps } from './types';\n\nimport styles from './Link.module.css';\n\nconst displayName = 'Link';\n\nconst Link = ({\n  arrow,\n  children,\n  className,\n  href,\n  intl: { formatMessage },\n  isInternal,\n  persistLocale,\n  text,\n  textValues,\n  transformUrl,\n  ...props\n}: OutProps) => {\n  const linkText =\n    typeof text === 'string' ? text : text && formatMessage(text, textValues);\n  const linkContent = linkText || children || null;\n  const classNames = className ? `${styles.main} ${className}` : styles.main;\n  return isInternal ? (\n    <GatsbyLink className={classNames} to={href} {...props}>\n      <span className={styles[arrow]}>{linkContent}</span>\n    </GatsbyLink>\n  ) : (\n    <a className={classNames} href={href} {...props}>\n      <span className={styles[arrow]}>{linkContent}</span>\n    </a>\n  );\n};\n\nLink.displayName = displayName;\n\nexport default Link;\n","/* @flow */\nimport type { HOC } from 'recompose';\n\nimport { compose, defaultProps, withProps } from 'recompose';\nimport { injectIntl } from 'react-intl';\n\nimport { DEFAULT_LOCALE } from '~i18nConfig';\n\nimport type { InProps } from './types';\n\nimport Link from './Link.jsx';\n\nconst enhance: HOC<*, InProps> = compose(\n  injectIntl,\n  defaultProps({ persistLocale: true }),\n  withProps(({ href: url, intl: { locale }, persistLocale, transformUrl }) => {\n    /*\n     * A url is only considered to be \"internal\" if it starts with one slash.\n     */\n    const isInternal = /^\\/(?!\\/)/.test(url);\n    /*\n     * On-page anchors are considered \"external\" by Gatsby.\n     */\n    const isOnPageAnchor = /^#(?!\\/)/.test(url);\n\n    let href: string =\n      isInternal && typeof transformUrl === 'function'\n        ? transformUrl(url)\n        : url;\n\n    const shouldPersistLocale: boolean =\n      isInternal && locale && locale !== DEFAULT_LOCALE;\n\n    if (persistLocale && shouldPersistLocale) {\n      href = `/${locale}${href}`;\n    }\n\n    return {\n      href,\n      isInternal,\n      rel: !isOnPageAnchor ? 'noopener noreferrer' : undefined,\n      target: !isOnPageAnchor ? '_blank' : undefined,\n    };\n  }),\n);\n\nexport default enhance(Link);\n","/* @flow */\nexport { default } from './Link';\n","/* @flow */\n/* eslint-disable import/prefer-default-export */\nimport camelcase from 'camelcase';\n\nimport { capitalize } from '../strings';\n\n/**\n * This function maps an appearance object onto CSS modules classes\n * The theme replaces the main class, the others will be treated as modifiers for the main class.\n * Example:\n *\n * appearance={{ theme: 'foo', colorSchema: 'dark', direction: 'horizontal' }}\n * yields\n * Component_themeFoo_xxx Component_colorSchemaDark_xxx Component_directionHorizontal_xxx\n *\n * appearance={{ colorSchema: 'dark', direction: 'horizontal' }}\n * yields\n * Component_main_xxx Component_colorSchemaDark_xxx Component_directionHorizontal_xxx\n *\n * @method getMainClasses\n *\n * @param {object} appearance Appearance object\n * @param {styleObject} CSS modules styles object\n *\n * @return {string} The composed class names string\n */\nexport const getMainClasses = (\n  appearance: Object = {},\n  styleObject: { [string]: string } = {},\n  state: { [string]: boolean } = {},\n) => {\n  const { theme, ...modifiers } = appearance;\n  const styleArray = [];\n  if (theme) {\n    const themeClass = `theme${capitalize(camelcase(theme))}`;\n    styleArray.push(styleObject[themeClass]);\n  } else {\n    styleArray.push(styleObject.main);\n  }\n  const modifierClasses = Object.keys(modifiers)\n    .map(key =>\n      modifiers[key]\n        ? styleObject[`${key}${capitalize(camelcase(modifiers[key]))}`]\n        : undefined,\n    )\n    .filter(i => !!i);\n  const stateClasses = Object.keys(state)\n    .map(key =>\n      state[key] ? styleObject[`state${capitalize(camelcase(key))}`] : '',\n    )\n    .filter(i => !!i);\n  return [...styleArray, ...modifierClasses, ...stateClasses].join(' ');\n};\n","/* @flow */\nimport { DEFAULT_LOCALE } from '~i18nConfig';\nimport type { Doc, Project, Section } from '~types';\n\ntype ProjectEdge = {|\n  node: Project,\n|};\n\nexport const orderDocs = (a: Doc, b: Doc): number =>\n  a.frontmatter.order - b.frontmatter.order;\n\nexport const orderSections = (\n  sectionOrder: Array<string>,\n  a: Section,\n  b: Section,\n): number =>\n  sectionOrder\n    ? sectionOrder.indexOf(a.slug) - sectionOrder.indexOf(b.slug)\n    : 0;\n\nexport const getSectionsForLocale = (\n  project: Project,\n  locale: string,\n): Array<Section> => {\n  let { sectionOrder: sectionOrderForLocale } = project;\n  if (locale !== DEFAULT_LOCALE && project.sectionTranslations) {\n    const localeTranslatedSectionConfig = project.sectionTranslations.find(\n      ({ locale: sectionTranslationLocale }) =>\n        sectionTranslationLocale === locale,\n    );\n    if (\n      localeTranslatedSectionConfig &&\n      localeTranslatedSectionConfig.sectionOrder\n    ) {\n      sectionOrderForLocale = localeTranslatedSectionConfig.sectionOrder;\n    }\n  }\n  return project.sections\n    .filter(({ docs }) =>\n      docs.some(({ fields: { locale: docLocale } }) => docLocale === locale),\n    )\n    .sort(orderSections.bind(null, sectionOrderForLocale));\n};\n\nexport const getDocsForLocale = (\n  docs: Array<Doc>,\n  locale: string,\n): Array<Doc> =>\n  docs.filter(doc => {\n    const {\n      fields: { locale: docLocale },\n    } = doc;\n    if (docLocale === locale) {\n      return true;\n    }\n    return false;\n  });\n\nexport const getProjectDescriptionForLocale = (\n  project: Project,\n  locale: string,\n): string => {\n  const projectOrLocaleDescription =\n    locale !== DEFAULT_LOCALE && project.descriptionTranslations\n      ? project.descriptionTranslations.find(\n          ({ locale: descriptionLocale }) => descriptionLocale === locale,\n        ) || project\n      : project;\n  return projectOrLocaleDescription.description;\n};\n\nexport const getProjectEntryPoint = (\n  project: Project,\n  locale: string,\n): string => {\n  let docSections = getSectionsForLocale(project, locale);\n  if (!docSections || !docSections.length) {\n    docSections = getSectionsForLocale(project, DEFAULT_LOCALE);\n  }\n  const { docs: firstSectionDocs } = docSections[0];\n  let docsForLocale = getDocsForLocale(firstSectionDocs, locale);\n  if (!docsForLocale || !docsForLocale.length) {\n    docsForLocale = getDocsForLocale(firstSectionDocs, DEFAULT_LOCALE);\n  }\n  const firstDoc = docsForLocale.sort(orderDocs)[0];\n  return (firstDoc && firstDoc.fields && firstDoc.fields.slug) || '/';\n};\n\nexport const transformProjectData = (edge: ProjectEdge, locale: string) => {\n  const edgeNode = edge.node;\n  edgeNode.entryPoint = getProjectEntryPoint(edge.node, locale);\n  return edgeNode;\n};\n","/* @flow */\n/*\n * Pages\n */\nexport const PAGE_INDEX = '/';\nexport const PAGE_GET_STARTED_COLONYJS = '/colonyjs/intro-get-started';\nexport const PAGE_DEVELOPER_PORTAL = PAGE_INDEX;\nexport const PAGE_GET_INVOLVED = '/get-involved';\nexport const PAGE_LOGIN = '/login';\nexport const PAGE_MEDIA_KIT = '/media-kit';\nexport const PAGE_PRIVACY_POLICY = 'https://colony.io/terms/#privacy-policy';\nexport const PAGE_TERMS_SERVICE = 'https://colony.io/terms/';\nexport const PAGE_BUG_BOUNTY = '/colonynetwork/bug-bounty-program-overview';\n\n/*\n * Absolute\n */\nexport const COLONY_BLOG = 'https://blog.colony.io';\nexport const COLONY_DISCOURSE = 'https://build.colony.io';\nexport const COLONY_DISCOURSE_SUPPORT = `${COLONY_DISCOURSE}/c/support`;\nexport const COLONY_GITHUB = 'https://github.com/JoinColony';\nexport const COLONY_GITTER = 'https://gitter.im/JoinColony';\nexport const COLONY_GITTER_COLONYJS = `${COLONY_GITTER}/colonyJS`;\nexport const COLONY_REDDIT = 'https://www.reddit.com/r/joincolony/';\nexport const COLONY_TWITTER = 'https://twitter.com/joincolony';\nexport const COLONY_WEBSITE = 'https://colony.io';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/* @flow */\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { withPrefix } from 'gatsby';\n\nimport iconNames from './icons.json';\n\ntype Props = {|\n  /** Standard className */\n  className?: string,\n  /** Injected by `injectIntl` */\n  intl: IntlShape,\n  /** Name of the icon (all available names found in `icons.json`) */\n  name: string,\n  /** Standard html title attribute. Can be a string or a `messageDescriptor` */\n  title: MessageDescriptor | string,\n  /** Values for loading title (react-intl interpolation) */\n  titleValues?: Object,\n  /** Override the default viewBox */\n  viewBox?: string,\n|};\n\nconst getIcons = (map: Array<string>) =>\n  map.reduce((prev, current) => {\n    // eslint-disable-next-line no-param-reassign\n    prev[current] = withPrefix(`/img/${current}.svg#${current}`);\n    return prev;\n  }, {});\n\nconst icons = getIcons(iconNames);\n\nconst displayName = 'Icon';\n\nconst Icon = ({\n  className,\n  intl: { formatMessage },\n  name,\n  title,\n  titleValues,\n  viewBox: viewBoxOverride = '0 0 30 30',\n}: Props) => {\n  const icon = icons[name];\n  const titleText =\n    typeof title === 'string' ? title : formatMessage(title, titleValues);\n  return (\n    <i className={className} title={titleText}>\n      <svg viewBox={viewBoxOverride} role=\"img\" aria-label={titleText}>\n        <title>{titleText}</title>\n        <use xlinkHref={icon} />\n      </svg>\n    </i>\n  );\n};\n\nIcon.displayName = displayName;\n\nexport default injectIntl(Icon);\n","/* @flow */\nexport { default } from './Icon.jsx';\n","/* @flow */\nimport type { Node } from 'react';\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport Link from '~core/Link';\nimport { getMainClasses } from '~utils/css';\n\nimport styles from './Button.module.css';\n\ntype Appearance = {\n  theme?: 'primary' | 'primaryHollow' | 'reset',\n  padding?: 'small',\n};\n\ntype Props = {\n  /** Appearance object */\n  appearance?: Appearance,\n  /** `children` to render (only works if `text` is not set) */\n  children?: Node,\n  /** Overwriting class name(s). Setting this will overwrite the `appearance` object */\n  className?: string,\n  /** Injected by `injectIntl` */\n  intl: IntlShape,\n  /** Use a link instead of a button. Like `@reach/router`'s `to` property */\n  linkTo?: string,\n  /** A string or a `messageDescriptor` that make up the button's text label */\n  text?: MessageDescriptor | string,\n  /** Values for loading text (react-intl interpolation) */\n  textValues?: Object,\n  /** Standard html title attribute. Can be a string or a `messageDescriptor` */\n  title?: MessageDescriptor | string,\n  /** Values for loading title (react-intl interpolation) */\n  titleValues?: Object,\n  /** Button html type attribute */\n  type?: 'button' | 'submit',\n};\n\nconst displayName = 'Button';\n\nconst Button = ({\n  appearance = { theme: 'primary' },\n  children,\n  className,\n  intl: { formatMessage },\n  linkTo,\n  text,\n  textValues,\n  title,\n  titleValues,\n  type = 'button',\n  ...rest\n}: Props) => {\n  const classNames = className || getMainClasses(appearance, styles);\n  const titleText =\n    typeof title == 'string'\n      ? title\n      : title && formatMessage(title, titleValues);\n  const buttonText =\n    typeof text === 'string' ? text : text && formatMessage(text, textValues);\n\n  /*\n   * Fall-back to `null` since `text` and `children`\n   * are both technically optional.\n   */\n  const buttonContent = buttonText || children || null;\n\n  if (linkTo) {\n    return (\n      <Link className={classNames} href={linkTo} {...rest}>\n        {buttonContent}\n      </Link>\n    );\n  }\n\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <button className={classNames} title={titleText} type={type} {...rest}>\n      {buttonContent}\n    </button>\n  );\n};\n\nButton.displayName = displayName;\n\nexport default injectIntl(Button);\n","/* @flow */\nexport { default } from './Button.jsx';\n","/* @flow */\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n\nimport FileContext from '~context/FileContext';\n\ntype Props = {\n  alt: MessageDescriptor | string,\n  altValues?: Object,\n  intl: IntlShape,\n  project?: string,\n  src: string,\n};\n\nconst displayName = 'Image';\n\nconst Image = ({\n  alt,\n  altValues,\n  intl: { formatMessage },\n  project,\n  src,\n  ...props\n}: Props) => {\n  const altText = typeof alt === 'string' ? alt : formatMessage(alt, altValues);\n  return (\n    <FileContext.Consumer>\n      {files => (\n        <img\n          {...props}\n          alt={altText}\n          src={\n            files && project && files[`${project}/${src}`]\n              ? files[`${project}/${src}`]\n              : src\n          }\n        />\n      )}\n    </FileContext.Consumer>\n  );\n};\n\nImage.displayName = displayName;\n\nexport default injectIntl(Image);\n","/* @flow */\nexport { default } from './Image.jsx';\n","/* @flow */\nimport React from 'react';\n\nimport type { FileContext as FileContextType } from '~types';\n\nconst FileContext = React.createContext<FileContextType>({});\n\nexport default FileContext;\n","/* @flow */\nimport type { ComponentType } from 'react';\nimport type { CommonRouteProps } from '@reach/router';\n\nimport { Location } from '@reach/router';\nimport { fromRenderProps } from 'recompose';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const withLocation = () => (BaseComponent: ComponentType<Object>) =>\n  // $FlowFixMe\n  fromRenderProps(Location, (locationProps): CommonRouteProps => locationProps)(\n    BaseComponent,\n  );\n","/* @flow */\nimport type { Node } from 'react';\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\n/**\n * Capitalize a word (converts the first letter of the word to upper case)\n *\n * @method capitalize\n *\n * @param {string} word The word / string to capitalize\n * @return {string} The capitalized string\n */\nexport const capitalize = (word: string): string =>\n  word && word.charAt(0).toUpperCase() + word.slice(1);\n\nexport const getChildrenOrText = (\n  children?: Node,\n  text?: MessageDescriptor | string,\n  textValues?: Object,\n  { formatMessage }: IntlShape,\n): Node | string => {\n  if (children) {\n    return children;\n  }\n  if (!text) {\n    return '';\n  }\n  if (typeof text == 'string') {\n    return text;\n  }\n  return formatMessage(text, textValues);\n};\n","/* @flow */\nconst DEFAULT_LOCALE = 'en';\n\nconst CONFIGURED_LOCALES = [DEFAULT_LOCALE];\n\nmodule.exports = {\n  CONFIGURED_LOCALES,\n  DEFAULT_LOCALE,\n};\n","/* @flow */\nimport type { Node } from 'react';\nimport type { RouteProps } from '@reach/router';\nimport type { $npm$ReactIntl$LocaleData } from 'react-intl';\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport enLocaleData from 'react-intl/locale-data/en';\nimport { graphql, useStaticQuery, withPrefix } from 'gatsby';\n\nimport 'prism-themes/themes/prism-base16-ateliersulphurpool.light.css';\n\nimport FileContext from '~context/FileContext';\nimport { CONFIGURED_LOCALES, DEFAULT_LOCALE } from '~i18nConfig';\nimport enMessages from '~i18n/en.json';\n\nimport '~styles/normalize.css';\nimport '~styles/fonts.css';\nimport '~styles/syntax-hightlight.css';\n\ntype LocaleMessage = { [key: string]: string };\n\ntype LocaleConfig = {|\n  messages: LocaleMessage,\n  data: $npm$ReactIntl$LocaleData,\n|};\n\ntype LocaleConfigs = {\n  [locale: string]: LocaleConfig,\n};\n\nexport type GlobalLayoutProps = {\n  children: Node,\n};\n\ntype Props = RouteProps & GlobalLayoutProps;\n\nconst localeMessages: LocaleConfigs = {\n  en: {\n    messages: enMessages,\n    data: enLocaleData,\n  },\n};\n\nconst configuredLocalesData: Array<$npm$ReactIntl$LocaleData> = Object.keys(\n  localeMessages,\n).reduce(\n  (accumulator, configKey) => [\n    ...accumulator,\n    ...localeMessages[configKey].data,\n  ],\n  [],\n);\n\naddLocaleData(configuredLocalesData);\n\nconst getMessagesForLocale = (locale: string): LocaleMessage =>\n  localeMessages[locale].messages || localeMessages[DEFAULT_LOCALE].messages;\n\nconst getLocaleString = (locale?: string): string =>\n  !!locale && !!localeMessages[locale] ? locale : DEFAULT_LOCALE;\n\nconst getFileMapping = (files): Object => {\n  return files.reduce(\n    (current, next) => ({\n      ...current,\n      [`${next.node.sourceInstanceName}/${next.node.relativePath}`]: next.node\n        .publicURL,\n    }),\n    {},\n  );\n};\n\n/*\n * Check that the configured locales in `~i18nConfig` match the locale messages\n * configured here with the `IntlProvider`. If locales aren't configured, accessing\n * those locales on gatsby pages will yield a 404 (doc pages will likely work partially).\n *\n * This will merely `warn` to the console of the issue, as this shouldn't be a breaking\n * error.\n */\nconst checkLocaleConfig = (): void => {\n  const configuredMessageLocales: Array<string> = Object.keys(localeMessages);\n  const localesWithoutMessages: Array<string> = CONFIGURED_LOCALES.filter(\n    locale => configuredMessageLocales.indexOf(locale) === -1,\n  );\n  if (localesWithoutMessages.length > 0) {\n    const missingLocalesString: string = localesWithoutMessages.reduce(\n      (accumulator, locale) => {\n        let localesString = accumulator;\n        localesString += accumulator.length > 0 ? `, ${locale}` : locale;\n        return localesString;\n      },\n      '',\n    );\n    console.warn(\n      'i18n messages have not been configured with' +\n        ' the IntlProvider for the following locales:',\n      missingLocalesString,\n      '\\n\\nAs a result, translated content & links may be inconsistent' +\n        ' across the site. To supress this warning, add locale messages' +\n        ' for the above locales in the `GlobalLayout` component.',\n    );\n  }\n};\n\ncheckLocaleConfig();\n\nconst displayName = 'layouts.GlobalLayout';\n\nconst GlobalLayout = ({ children, location }: Props) => {\n  const potentialLocale = location && location.pathname.split('/')[1];\n  const locale = getLocaleString(potentialLocale);\n  const messages: LocaleMessage = getMessagesForLocale(locale);\n  const data = useStaticQuery(graphql`\n    query {\n      files: allFile {\n        edges {\n          node {\n            sourceInstanceName\n            relativePath\n            publicURL\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <>\n      <Helmet>\n        <link\n          rel=\"shortcut icon\"\n          type=\"image/png\"\n          href={withPrefix('/img/favicon.ico')}\n        />\n        <script src={withPrefix('/js/fontloader.js')} />\n      </Helmet>\n      <FileContext.Provider value={getFileMapping(data.files.edges)}>\n        <IntlProvider\n          locale={locale}\n          defaultLocale={DEFAULT_LOCALE}\n          messages={messages}\n        >\n          {children}\n        </IntlProvider>\n      </FileContext.Provider>\n    </>\n  );\n};\n\nGlobalLayout.displayName = displayName;\n\nexport default GlobalLayout;\n","/* @flow */\nimport { withLocation } from '~hoc/location';\n\nimport GlobalLayout from './GlobalLayout.jsx';\n\nexport default withLocation()(GlobalLayout);\n","/* @flow */\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport Button from '~core/Button';\nimport { getMainClasses } from '~utils/css';\n\nimport styles from './NavigationToggle.module.css';\n\nconst MSG = defineMessages({\n  btnTitleToggleNavigation: {\n    id: 'NavigationToggle.btnTitleToggleNavigation',\n    defaultMessage: 'Toggle Navigation',\n  },\n});\n\ntype Appearance = {|\n  /*\n   * Hides this component at a given viewport size (and up). Will\n   * be visible at all viewport sizes below this value.\n   */\n  hideAtSize?: 'small' | 'medium' | 'large',\n  theme?: 'light',\n|};\n\ntype Props = {|\n  appearance?: Appearance,\n  isNavOpen: boolean,\n  onClick: (evt: SyntheticEvent<HTMLButtonElement>) => void,\n|};\n\nconst displayName = 'NavigationToggle';\n\nconst NavigationToggle = ({ appearance, isNavOpen, onClick }: Props) => (\n  <div\n    className={getMainClasses(appearance, styles, {\n      isNavOpen,\n    })}\n  >\n    <Button\n      aria-hidden\n      className={styles.mobileIcon}\n      onClick={onClick}\n      title={MSG.btnTitleToggleNavigation}\n    >\n      <span className={styles.mobileIconLine} />\n      <span className={styles.mobileIconLine} />\n      <span className={styles.mobileIconLine} />\n      <span className={styles.mobileIconLine} />\n    </Button>\n  </div>\n);\n\nNavigationToggle.displayName = displayName;\n\nexport default NavigationToggle;\n","/* @flow */\nimport camelcase from 'camelcase';\n\nimport { capitalize } from '~utils/strings';\n\n/**\n * This is a stripped down version of the `getMainClasses` method, that is specifically\n * designed to generate the classes required to properly render the Popover\n * Component's various arrows.\n *\n * @NOTE It won't work anywhere else, and in all fairness it should be placed\n * inside the actual component, but to preserve code cleanliness, I've placed\n * it here.\n *\n * @method getPopoverArrowClasses\n *\n * @param {object} appearance Appearance object\n * @param {placement} string Positioning of the arrow (this is reversed from in the Popover)\n * @param {styleObject} CSS modules styles object\n *\n * @return {string} The string of classes to pass down to the arrow element\n */\nconst getPopoverArrowClasses = (\n  { theme }: Object = {},\n  placement: string,\n  styleObject: { [string]: string } = {},\n) => {\n  /*\n   * @NOTE Arrows have the position encoded in the class's name\n   */\n  const placementClass = `${camelcase(placement)}Arrow`;\n  const styleArray = [styleObject[placementClass]];\n  if (theme) {\n    /*\n     * @NOTE Arrows have the theme name encoded in the class's name (which also\n     * has the position encoded, as above)\n     */\n    const themeClass = `theme${capitalize(theme)}${capitalize(placementClass)}`;\n    styleArray.push(styleObject[themeClass]);\n  }\n  return styleArray.join(' ');\n};\n\nexport default getPopoverArrowClasses;\n","/* @flow */\nimport type { Node } from 'react';\nimport type { PopperArrowProps } from 'react-popper';\nimport React from 'react';\n\n// eslint-disable-next-line import/no-cycle\nimport type { Appearance as PopoverAppearance, Placement } from './Popover.jsx';\n\nimport { getMainClasses } from '~utils/css';\nimport getPopoverArrowClasses from './getPopoverArrowClasses';\n\nimport styles from './PopoverWrapper.module.css';\n\ntype Appearance = PopoverAppearance & {\n  placement?: Placement,\n};\n\ntype ArrowProps = PopperArrowProps & {\n  showArrow: boolean,\n};\n\ntype Props = {|\n  appearance?: Appearance,\n  arrowProps: ArrowProps,\n  children: Node,\n  id: string,\n  innerRef: (?HTMLElement) => void,\n  onFocus: (evt: SyntheticFocusEvent<HTMLElement>) => void,\n  retainRefFocus?: boolean,\n  placement: string,\n  style: any,\n  wrapperClassName?: string,\n|};\n\nconst PopoverWrapper = ({\n  appearance,\n  arrowProps,\n  children,\n  id,\n  innerRef,\n  onFocus,\n  placement,\n  retainRefFocus,\n  style,\n  wrapperClassName = '',\n}: Props) => (\n  <div\n    className={`${getMainClasses(appearance, styles, {\n      hideArrow: !arrowProps.showArrow,\n      showArrow: arrowProps.showArrow,\n    })} ${wrapperClassName}`}\n    id={id}\n    role=\"tooltip\"\n    ref={innerRef}\n    style={style}\n    data-placement={placement}\n    tabIndex={retainRefFocus ? '-1' : null}\n    onFocus={onFocus}\n  >\n    {children}\n    <span\n      className={getPopoverArrowClasses(appearance, placement, styles)}\n      ref={arrowProps.ref}\n      style={arrowProps.style}\n    />\n  </div>\n);\n\nexport default PopoverWrapper;\n","/* @flow */\nimport type { Node as ReactNode } from 'react';\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React, { Component } from 'react';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport { injectIntl } from 'react-intl';\nimport nanoid from 'nanoid';\n\nimport type { ReactRef } from './types';\n\n// eslint-disable-next-line import/no-cycle\nimport PopoverWrapper from './PopoverWrapper.jsx';\n\nexport type Placement =\n  | 'auto'\n  | 'top'\n  | 'right'\n  | 'bottom'\n  | 'bottom-end'\n  | 'left';\n\ntype RefObj = { ref: ReactRef };\n\nexport type Appearance = {\n  theme: 'dark' | 'grey',\n};\n\nexport type PopoverTrigger = ({\n  ref: ReactRef,\n  id: string,\n  isOpen: boolean,\n  open: () => void,\n  close: () => void,\n  toggle: () => void,\n}) => ReactNode;\n\nexport type Props = {|\n  appearance?: Appearance,\n  /** Child element to trigger the popover */\n  children: React$Element<*> | PopoverTrigger,\n  /** Whether the popover should close when clicking anywhere */\n  closeOnOutsideClick?: boolean,\n  /** Popover content */\n  content:\n    | ReactNode\n    | MessageDescriptor\n    | (({ close: () => void }) => ReactNode),\n  /** Values for content (react-intl interpolation) */\n  contentValues?: Object,\n  /** Set the open state from outside */\n  isOpen?: boolean,\n  /** Called when Popover closes */\n  onClose?: (data?: any, modifiers?: { cancelled: boolean }) => void,\n  /** Delay opening of popover for `openDelay` ms */\n  openDelay?: number,\n  /** Popover placement */\n  placement?: Placement,\n  /** Options to pass through the <Popper> element. See here: https://github.com/FezVrasta/react-popper#api-documentation */\n  popperProps?: Object,\n  /** Whether the reference element should retain focus when popover is open (only for `HTMLInputElements`) */\n  retainRefFocus?: boolean,\n  /** Whether there should be an arrow on the popover */\n  showArrow: boolean,\n  /** How the popover gets triggered. Won't work when using a render prop as `children` */\n  trigger?: 'hover' | 'click' | 'disabled',\n  /** @ignore injected by `react-intl` */\n  intl: IntlShape,\n  /** `className` to be used IN ADDITION TO the normal wrapper classNames */\n  wrapperClassName?: string,\n|};\n\ntype State = {\n  isOpen: boolean,\n};\n\nclass Popover extends Component<Props, State> {\n  refNode: ?HTMLElement;\n\n  contentNode: ?HTMLElement;\n\n  id: string;\n\n  openTimeout: TimeoutID;\n\n  static displayName = 'Popover';\n\n  static defaultProps = {\n    closeOnOutsideClick: true,\n    placement: 'top',\n    showArrow: true,\n    trigger: 'click',\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.id = nanoid();\n    this.state = {\n      isOpen: props.isOpen || false,\n    };\n  }\n\n  componentDidUpdate(\n    { closeOnOutsideClick, isOpen: prevIsOpenProp, trigger },\n    { isOpen: prevOpen },\n  ) {\n    const { isOpen: isOpenProp } = this.props;\n    const { isOpen } = this.state;\n    if (\n      isOpen &&\n      !prevOpen &&\n      closeOnOutsideClick &&\n      document.body &&\n      (trigger === 'click' || !trigger)\n    ) {\n      document.body.addEventListener('click', this.handleOutsideClick, true);\n    } else if (!isOpen && prevOpen) {\n      this.removeOutsideClickListener();\n    }\n    if (isOpenProp !== prevIsOpenProp) {\n      // We are guarded perfectly fine against this, only when the outside prop changes we change the state as well\n      // Maybe there's a better way that I'm not seeing right now\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        isOpen: isOpenProp,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeOutsideClickListener();\n  }\n\n  removeOutsideClickListener = () => {\n    if (document.body) {\n      document.body.removeEventListener('click', this.handleOutsideClick, true);\n    }\n  };\n\n  getChildProps = (ref: ReactRef) => {\n    const { id } = this;\n    const { children, trigger } = this.props;\n    const { isOpen } = this.state;\n    const childProps: {\n      'aria-describedby': ?string,\n      innerRef?: ReactRef,\n      ref?: ReactRef,\n    } = {\n      'aria-describedby': isOpen ? id : null,\n    };\n    if (typeof children.type == 'function') {\n      childProps.innerRef = ref;\n    } else {\n      childProps.ref = ref;\n    }\n    return Object.assign(\n      {},\n      childProps,\n      trigger\n        ? {\n            hover: {\n              onMouseEnter: this.requestOpen,\n              onMouseLeave: this.close,\n            },\n            click: { onClick: this.toggle },\n            disabled: null,\n          }[trigger]\n        : null,\n    );\n  };\n\n  handleOutsideClick = (evt: MouseEvent) => {\n    if (\n      (evt.target instanceof HTMLElement &&\n        this.contentNode &&\n        this.contentNode.contains(evt.target)) ||\n      (evt.target instanceof HTMLElement &&\n        this.refNode &&\n        this.refNode.contains(evt.target))\n    ) {\n      return;\n    }\n    this.close();\n  };\n\n  requestOpen = () => {\n    const { isOpen } = this.state;\n    const { openDelay } = this.props;\n    if (isOpen) {\n      return;\n    }\n    if (openDelay) {\n      this.openTimeout = setTimeout(this.open.bind(this), openDelay);\n      return;\n    }\n    this.open();\n  };\n\n  open = () => {\n    const { isOpen } = this.state;\n    if (isOpen) return;\n    this.setState({ isOpen: true });\n  };\n\n  close = (data?: any, modifiers?: { cancelled: boolean }) => {\n    const { onClose } = this.props;\n    const { isOpen } = this.state;\n    clearTimeout(this.openTimeout);\n    if (!isOpen) return;\n    this.setState({ isOpen: false });\n    if (typeof onClose == 'function') onClose(data, modifiers);\n  };\n\n  toggle = () => {\n    const { isOpen } = this.state;\n    if (isOpen) {\n      return this.close();\n    }\n    return this.requestOpen();\n  };\n\n  registerRefNode = (node: ?HTMLElement | ?HTMLInputElement) => {\n    this.refNode = node;\n  };\n\n  registerContentNode = (node: ?HTMLElement) => {\n    this.contentNode = node;\n  };\n\n  handleWrapperFocus = () => {\n    const { retainRefFocus } = this.props;\n    if (retainRefFocus && this.refNode instanceof HTMLInputElement) {\n      this.refNode.focus();\n    }\n  };\n\n  renderReference = () => {\n    const { children } = this.props;\n    const { isOpen } = this.state;\n    const { id, requestOpen, close, toggle } = this;\n\n    if (typeof children == 'function') {\n      return ({ ref }: RefObj) =>\n        children({ ref, id, isOpen, open: requestOpen, close, toggle });\n    }\n    return ({ ref }: RefObj) =>\n      React.cloneElement(children, this.getChildProps(ref));\n  };\n\n  renderContent = () => {\n    const {\n      content,\n      contentValues,\n      intl: { formatMessage },\n    } = this.props;\n    if (typeof content == 'string') {\n      return content;\n    }\n    if (typeof content == 'function') {\n      return content({ close: this.close });\n    }\n    if (React.isValidElement(content)) {\n      return content;\n    }\n    // How to tell flow that this can only be a MessageDescriptor in this case?\n    // $FlowFixMe - might be related to https://github.com/facebook/flow/issues/4775\n    return formatMessage(content, contentValues);\n  };\n\n  render() {\n    const {\n      appearance,\n      placement: origPlacement,\n      popperProps,\n      retainRefFocus,\n      showArrow,\n      wrapperClassName,\n    } = this.props;\n\n    const { isOpen } = this.state;\n    const content = this.renderContent();\n    return (\n      <Manager>\n        <Reference innerRef={this.registerRefNode}>\n          {this.renderReference()}\n        </Reference>\n        {isOpen && (\n          <Popper\n            innerRef={this.registerContentNode}\n            placement={origPlacement}\n            {...popperProps}\n          >\n            {({ ref, style, arrowProps }) => (\n              // $FlowFixMe see above renderContent\n              <PopoverWrapper\n                appearance={{ ...appearance, placement: origPlacement }}\n                id={this.id}\n                innerRef={ref}\n                style={style}\n                placement={origPlacement}\n                arrowProps={{\n                  ...arrowProps,\n                  showArrow,\n                }}\n                onFocus={this.handleWrapperFocus}\n                retainRefFocus={retainRefFocus}\n                wrapperClassName={wrapperClassName}\n              >\n                {content}\n              </PopoverWrapper>\n            )}\n          </Popper>\n        )}\n      </Manager>\n    );\n  }\n}\n\nexport default injectIntl(Popover);\n","/* @flow */\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React, { Component, createRef } from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport 'docsearch.js/dist/cdn/docsearch.min.css';\n\nimport Button from '~core/Button';\nimport Icon from '~core/Icon';\nimport { getMainClasses } from '~utils/css';\n\nimport {\n  docSearchApiKey,\n  docSearcIndexName,\n} from '../../../../docsearch-settings';\n\nimport styles from './Search.module.css';\nimport './algolia-overrides.css';\n\nconst MSG = defineMessages({\n  defaultPlaceholderText: {\n    id: 'Search.defaultPlaceholderText',\n    defaultMessage: 'Search',\n  },\n});\n\ntype Appearance = {|\n  theme?: 'light',\n  type?: 'quickSearch',\n|};\n\ntype Props = {|\n  appearance?: Appearance,\n  /** Required by `docsearch`, can't be dynamic because of static build process */\n  inputId: string,\n  /** Injected by `injectIntl` */\n  intl: IntlShape,\n  placeholderText: MessageDescriptor | string,\n  placeholderTextValues?: Object,\n|};\n\ntype State = {|\n  isEnabled: boolean,\n|};\n\nclass Search extends Component<Props, State> {\n  inputRef: { current: null | HTMLInputElement };\n\n  static defaultProps = {\n    placeholderText: MSG.defaultPlaceholderText,\n  };\n\n  static displayName = 'Search';\n\n  constructor(props) {\n    super(props);\n\n    this.inputRef = createRef();\n  }\n\n  state = {\n    isEnabled: true,\n  };\n\n  componentDidMount() {\n    if (typeof window !== 'undefined') {\n      const { inputId } = this.props;\n      import(/* webpackChunkName: \"docSearch\" */ 'docsearch.js').then(\n        ({ default: docsearch }) => {\n          docsearch({\n            apiKey: docSearchApiKey,\n            indexName: docSearcIndexName,\n            inputSelector: `#${inputId}`,\n          });\n        },\n      );\n    } else {\n      this.setState({ isEnabled: false });\n    }\n  }\n\n  focusInput = () => {\n    if (this.inputRef && this.inputRef.current) {\n      this.inputRef.current.focus();\n    }\n  };\n\n  render() {\n    const {\n      appearance,\n      inputId,\n      intl: { formatMessage },\n      placeholderText,\n      placeholderTextValues,\n    } = this.props;\n    const { isEnabled } = this.state;\n    const placeholderTextContent =\n      typeof placeholderText === 'string'\n        ? placeholderText\n        : formatMessage(placeholderText, placeholderTextValues);\n    const isQuickSearch = appearance && appearance.type === 'quickSearch';\n    return isEnabled ? (\n      <div className={getMainClasses(appearance, styles)}>\n        <input\n          className={styles.searchInput}\n          id={inputId}\n          placeholder={placeholderTextContent}\n          ref={this.inputRef}\n          title={placeholderTextContent}\n          type=\"text\"\n        />\n        {isQuickSearch && (\n          <Button\n            appearance={{ theme: 'reset' }}\n            onClick={this.focusInput}\n            /*\n             * Because the adjacent `input` is naturally focusable,\n             * let's disable tabstop on this button.\n             */\n            tabIndex=\"-1\"\n          >\n            <Icon\n              className={styles.quickSearchIcon}\n              name=\"search\"\n              title={placeholderTextContent}\n              viewBox=\"0 0 25 34\"\n            />\n          </Button>\n        )}\n      </div>\n    ) : null;\n  }\n}\n\nexport default injectIntl(Search);\n","/* @flow */\nexport const docSearchApiKey = 'bda3b62b0c5a0d2028abfaebbb651336';\nexport const docSearcIndexName = 'colony';\n","/* @flow */\nimport type { IntlShape, MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport slugify from 'slugify';\n\nimport type { Appearance as HeadingAppearance } from '~core/Heading';\nimport type { InProps as LinkProps } from '~core/Link/types';\nimport { getMainClasses } from '~utils/css';\n\nimport Heading from '~core/Heading';\nimport Link from '~core/Link';\n\nimport styles from './VerticalMenu.module.css';\n\nconst MSG = defineMessages({\n  navAriaLabelDefault: {\n    id: 'VerticalMenu.navAriaLabelDefault',\n    defaultMessage: 'Alternate Navigation',\n  },\n});\n\ntype Appearance = {|\n  /*\n   * Only has impact if `numColumns` is provided, and > 1.\n   *\n   * Since responsiveness is mobile-first, this will determine at\n   * which viewport size (and up) the menu will be multi-column.\n   *\n   * Below this size, items will be in 1 column.\n   */\n  expandForViewport?: 'small' | 'medium' | 'large',\n  margins?: 'none' | 'small' | 'large',\n|};\n\ntype Props = {|\n  appearance?: Appearance,\n  headingAppearance?: HeadingAppearance,\n  headingText?: MessageDescriptor | string,\n  headingTextValues?: Object,\n  /* Injected via `injectIntl` */\n  intl: IntlShape,\n  menuItems: Array<LinkProps>,\n  numColumns?: number,\n|};\n\nconst displayName = 'VerticalMenu';\n\nconst VerticalMenu = ({\n  appearance,\n  headingAppearance = {},\n  headingText,\n  headingTextValues,\n  intl: { formatMessage },\n  menuItems,\n  numColumns = 1,\n}: Props) => {\n  const columnStyles = {\n    columnCount: `${numColumns}`,\n  };\n  const labelText =\n    typeof headingText === 'string'\n      ? headingText\n      : headingText && formatMessage(headingText, headingTextValues);\n  const ariaProps = {};\n  if (labelText) {\n    ariaProps['aria-labelledby'] = slugify(labelText);\n  } else {\n    ariaProps['aria-label'] = formatMessage(MSG.navAriaLabelDefault);\n  }\n  return (\n    <div className={getMainClasses(appearance, styles)}>\n      {headingText && (\n        <Heading\n          appearance={{\n            margin: 'small',\n            size: 'normal',\n            weight: 'medium',\n            ...headingAppearance,\n          }}\n          id={slugify(labelText)}\n          text={headingText}\n          textValues={headingTextValues}\n        />\n      )}\n      {menuItems && menuItems.length > 0 && (\n        <nav\n          className={styles.menu}\n          role=\"navigation\"\n          style={columnStyles}\n          {...ariaProps}\n        >\n          {menuItems.map(menuItemProps => (\n            <div key={menuItemProps.href} className={styles.menuItem}>\n              <Link {...menuItemProps} />\n            </div>\n          ))}\n        </nav>\n      )}\n    </div>\n  );\n};\n\nVerticalMenu.displayName = displayName;\n\nexport default injectIntl(VerticalMenu);\n","/* @flow */\nimport type { IntlShape } from 'react-intl';\n\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport type { Project } from '~types';\n\nimport Heading from '~core/Heading';\nimport Image from '~core/Image';\nimport Link from '~core/Link';\nimport VerticalMenu from '~core/VerticalMenu';\n\nimport { coreProjectSortOrder } from '~pages/Developers/CoreProducts';\nimport { openSourceProjectSortOrder } from '~pages/Developers/OpenSource';\n\nimport styles from './DocsDropdownContent.module.css';\n\nconst MSG = defineMessages({\n  ariaLabel: {\n    id: 'layouts.DeveloperPortalLayout.DocsDropdownContent.ariaLabel',\n    defaultMessage: 'Docs Menu',\n  },\n  heroTitle: {\n    id: 'layouts.DeveloperPortalLayout.DocsDropdownContent.heroTitle',\n    defaultMessage: 'Start building with Colony',\n  },\n  heroSubTitle: {\n    id: 'layouts.DeveloperPortalLayout.DocsDropdownContent.heroSubTitle',\n    defaultMessage: 'Get started',\n  },\n  headingCoreProducts: {\n    id: 'layouts.DeveloperPortalLayout.DocsDropdownContent.headingCoreProducts',\n    defaultMessage: 'Colony Core',\n  },\n  headingOpenSourceProducts: {\n    id:\n      // eslint-disable-next-line max-len\n      'layouts.DeveloperPortalLayout.DocsDropdownContent.headingOpenSourceProducts',\n    defaultMessage: 'Open Source Tools',\n  },\n});\n\nconst getProjectLinks = ({ entryPoint, name }: Project) => ({\n  href: entryPoint,\n  text: name,\n});\n\ntype Props = {|\n  coreProjects: Array<Project>,\n  intl: IntlShape,\n  openSourceProjects: Array<Project>,\n|};\n\nconst displayName = 'layouts.DeveloperPortalLayout.DocsDropdownContent';\n\nconst DocsDropdownContent = ({\n  coreProjects,\n  intl: { formatMessage },\n  openSourceProjects,\n}: Props) => {\n  const coreProjectsLinks = coreProjects\n    .map(getProjectLinks)\n    .sort(\n      ({ text: textA }, { text: textB }) =>\n        coreProjectSortOrder.indexOf(textA) -\n        coreProjectSortOrder.indexOf(textB),\n    );\n  const openSourceProjectsLinks = openSourceProjects\n    .map(getProjectLinks)\n    .sort(\n      ({ text: textA }, { text: textB }) =>\n        openSourceProjectSortOrder.indexOf(textA) -\n        openSourceProjectSortOrder.indexOf(textB),\n    );\n  const featureProject = coreProjects.find(({ name }) => name === 'colonyJS');\n  const ariaLabel = formatMessage(MSG.ariaLabel);\n  return (\n    <div className={styles.main} aria-label={ariaLabel}>\n      {featureProject && (\n        <Link className={styles.heroLink} href={featureProject.entryPoint}>\n          <div className={styles.hero}>\n            <div className={styles.logoContainer}>\n              <Image\n                alt={featureProject.name}\n                className={styles.logo}\n                project={featureProject.name}\n                src={featureProject.logoSmall}\n              />\n            </div>\n            <div className={styles.cta}>\n              <Heading\n                appearance={{\n                  margin: 'none',\n                  size: 'small',\n                  theme: 'light',\n                  weight: 'thin',\n                }}\n                text={MSG.heroSubTitle}\n              />\n              <Heading\n                appearance={{\n                  margin: 'none',\n                  size: 'medium',\n                  theme: 'dark',\n                  weight: 'thin',\n                }}\n                text={MSG.heroTitle}\n              />\n            </div>\n          </div>\n        </Link>\n      )}\n      <div className={styles.menuContent}>\n        <div className={styles.menuContainer}>\n          <VerticalMenu\n            appearance={{ margins: 'small' }}\n            headingAppearance={{\n              size: 'small',\n              theme: 'light',\n              weight: 'thin',\n            }}\n            headingText={MSG.headingCoreProducts}\n            menuItems={coreProjectsLinks}\n          />\n        </div>\n        <div className={styles.menuContainer}>\n          <VerticalMenu\n            appearance={{ expandForViewport: 'medium', margins: 'small' }}\n            headingAppearance={{\n              size: 'small',\n              theme: 'light',\n              weight: 'thin',\n            }}\n            headingText={MSG.headingOpenSourceProducts}\n            menuItems={openSourceProjectsLinks}\n            numColumns={2}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDocsDropdownContent.displayName = displayName;\n\nexport default DocsDropdownContent;\n","/* @flow */\nimport type { IntlShape } from 'react-intl';\n\nimport React, { useState } from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport type { Project } from '~types';\n\nimport Button from '~core/Button';\nimport Icon from '~core/Icon';\nimport Link from '~core/Link';\nimport NavigationToggle from '~core/NavigationToggle';\nimport Popover from '~core/Popover';\nimport Search from '~core/Search';\nimport DocsDropdownContent from '~layouts/DeveloperPortalLayout/DocsDropdownContent';\nimport { COLONY_DISCOURSE_SUPPORT, PAGE_DEVELOPER_PORTAL } from '~routes';\n\nimport styles from './Header.module.css';\n\nconst MSG = defineMessages({\n  imageAltDevPortal: {\n    id: 'layouts.DeveloperPortalLayout.Header.imageAltDevPortal',\n    defaultMessage: 'Colony Developer Portal',\n  },\n  navAriaLabel: {\n    id: 'layouts.DeveloperPortalLayout.Header.navAriaLabel',\n    defaultMessage: 'Main Navigation',\n  },\n  navLinkDocs: {\n    id: 'layouts.DeveloperPortalLayout.Header.navLinkDocs',\n    defaultMessage: 'Docs',\n  },\n  navLinkSupport: {\n    id: 'layouts.DeveloperPortalLayout.Header.navLinkSupport',\n    defaultMessage: 'Support',\n  },\n});\n\ntype Props = {|\n  coreProjects: Array<Project>,\n  /* Injected via `injectIntl` */\n  intl: IntlShape,\n  openSourceProjects: Array<Project>,\n|};\n\nconst displayName = 'layouts.DeveloperPortalLayout.Header';\n\nconst Header = ({\n  coreProjects,\n  intl: { formatMessage },\n  intl,\n  openSourceProjects,\n}: Props) => {\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const navAriaLabel = formatMessage(MSG.navAriaLabel);\n  return (\n    <div className={styles.main}>\n      <div className={styles.menuWrapper}>\n        <Link href={PAGE_DEVELOPER_PORTAL}>\n          <Icon\n            className={styles.logo}\n            name=\"developerPortal_white\"\n            title={MSG.imageAltDevPortal}\n            viewBox=\"0 0 134 33\"\n          />\n        </Link>\n        <div aria-expanded={isNavOpen} className={styles.navContainer}>\n          <nav\n            className={styles.navigation}\n            role=\"navigation\"\n            aria-label={navAriaLabel}\n          >\n            <span className={`${styles.navLink} ${styles.docsDropdownParent}`}>\n              <Button appearance={{ theme: 'reset' }}>\n                <Popover\n                  appearance={{ theme: 'grey' }}\n                  content={() => (\n                    <DocsDropdownContent\n                      coreProjects={coreProjects}\n                      intl={intl}\n                      openSourceProjects={openSourceProjects}\n                    />\n                  )}\n                  /*\n                   * `isOpen` is always true for a11y purposes. This ensures the dropdown\n                   * menu is always in the DOM, and visibility is controlled via CSS.\n                   */\n                  isOpen\n                  placement=\"bottom-end\"\n                  popperProps={{\n                    modifiers: {\n                      offset: {\n                        offset: '140px',\n                      },\n                    },\n                  }}\n                  trigger=\"disabled\"\n                  wrapperClassName={styles.docsDropdownContainer}\n                >\n                  <div className={styles.dropdownParent} aria-haspopup=\"true\">\n                    <FormattedMessage {...MSG.navLinkDocs} />\n                  </div>\n                </Popover>\n              </Button>\n              <div className={styles.mobileDocsDropdown}>\n                <DocsDropdownContent\n                  coreProjects={coreProjects}\n                  intl={intl}\n                  openSourceProjects={openSourceProjects}\n                />\n              </div>\n            </span>\n            <Link\n              className={styles.navLink}\n              href={COLONY_DISCOURSE_SUPPORT}\n              text={MSG.navLinkSupport}\n            />\n          </nav>\n          <div className={styles.searchContainer}>\n            <Search\n              appearance={{ theme: 'light', type: 'quickSearch' }}\n              inputId=\"devPortalLayoutHeaderSearch\"\n            />\n          </div>\n        </div>\n        <div className={styles.navToggle}>\n          <NavigationToggle\n            appearance={{ hideAtSize: 'medium', theme: 'light' }}\n            isNavOpen={isNavOpen}\n            onClick={() => setIsNavOpen(!isNavOpen)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeader.displayName = displayName;\n\nexport default injectIntl(Header);\n","/* @flow */\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport type { Project } from '~types';\n\nimport Icon from '~core/Icon';\nimport Link from '~core/Link';\nimport VerticalMenu from '~core/VerticalMenu';\nimport {\n  COLONY_BLOG,\n  COLONY_DISCOURSE,\n  COLONY_GITHUB,\n  COLONY_GITTER,\n  COLONY_TWITTER,\n  COLONY_WEBSITE,\n  PAGE_PRIVACY_POLICY,\n  PAGE_TERMS_SERVICE,\n} from '~routes';\n\nimport { coreProjectSortOrder } from '~pages/Developers/CoreProducts';\nimport { openSourceProjectSortOrder } from '~pages/Developers/OpenSource';\n\nimport styles from './Footer.module.css';\n\nconst MSG = defineMessages({\n  linkVisitColony: {\n    id: 'layouts.DeveloperPortalLayout.Footer.linkVisitColony',\n    defaultMessage: 'Visit {domain}',\n  },\n  navTitleGetStarted: {\n    id: 'layouts.DeveloperPortalLayout.Footer.navTitleGetStarted',\n    defaultMessage: 'Get Started',\n  },\n  navLinkSupport: {\n    id: 'layouts.DeveloperPortalLayout.Footer.navLinkSupport',\n    defaultMessage: 'Support',\n  },\n  navTitleCoreProducts: {\n    id: 'layouts.DeveloperPortalLayout.Footer.navTitleCoreProducts',\n    defaultMessage: 'Colony Core',\n  },\n  navTitleOpenSourceTools: {\n    id: 'layouts.DeveloperPortalLayout.Footer.navTitleOpenSourceTools',\n    defaultMessage: 'Open Source Tools',\n  },\n  metaLinkTos: {\n    id: 'layouts.DeveloperPortalLayout.Footer.metaLinkTos',\n    defaultMessage: 'Terms & Service',\n  },\n  metaLinkPrivacy: {\n    id: 'layouts.DeveloperPortalLayout.Footer.metaLinkPrivacy',\n    defaultMessage: 'Privacy Policy',\n  },\n  metaLinkMediaKit: {\n    id: 'layouts.DeveloperPortalLayout.Footer.metaLinkMediaKit',\n    defaultMessage: 'Media Kit',\n  },\n});\n\nconst getProjectLinks = ({ repoUrl, name }: Project) => ({\n  href: repoUrl,\n  text: name,\n});\n\ntype Props = {|\n  coreProjects: Array<Project>,\n  openSourceProjects: Array<Project>,\n|};\n\nconst displayName = 'layouts.DeveloperPortalLayout.Footer';\n\nconst Footer = ({ coreProjects, openSourceProjects }: Props) => {\n  const coreProjectsLinks = coreProjects\n    .map(getProjectLinks)\n    .sort(\n      ({ text: textA }, { text: textB }) =>\n        coreProjectSortOrder.indexOf(textA) -\n        coreProjectSortOrder.indexOf(textB),\n    );\n  const openSourceProjectsLinks = openSourceProjects\n    .map(getProjectLinks)\n    .sort(\n      ({ text: textA }, { text: textB }) =>\n        openSourceProjectSortOrder.indexOf(textA) -\n        openSourceProjectSortOrder.indexOf(textB),\n    );\n  return (\n    <div className={styles.main}>\n      <div className={styles.footerContent}>\n        <div className={styles.navRow}>\n          <div className={styles.logoContainer}>\n            <Icon\n              className={styles.logo}\n              name=\"colony_logomark\"\n              title=\"Colony\"\n            />\n            <div>\n              <Link\n                href={COLONY_WEBSITE}\n                text={MSG.linkVisitColony}\n                textValues={{ domain: 'colony.io' }}\n              />\n            </div>\n          </div>\n          <div className={styles.navGroup}>\n            <div className={styles.navGroupItem}>\n              <VerticalMenu\n                appearance={{ margins: 'large' }}\n                headingAppearance={{ theme: 'invert' }}\n                headingText={MSG.navTitleGetStarted}\n                menuItems={[\n                  {\n                    href: COLONY_DISCOURSE,\n                    text: MSG.navLinkSupport,\n                  },\n                ]}\n              />\n            </div>\n            <div className={styles.navGroupItem}>\n              <VerticalMenu\n                appearance={{ margins: 'large' }}\n                headingAppearance={{ theme: 'invert' }}\n                headingText={MSG.navTitleCoreProducts}\n                menuItems={coreProjectsLinks}\n              />\n            </div>\n            <div className={styles.navGroupItem}>\n              <VerticalMenu\n                appearance={{ expandForViewport: 'medium', margins: 'large' }}\n                headingAppearance={{ theme: 'invert' }}\n                headingText={MSG.navTitleOpenSourceTools}\n                menuItems={openSourceProjectsLinks}\n                numColumns={2}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={styles.metaRow}>\n          <div className={styles.metaNavContainer}>\n            <nav className={styles.metaNav}>\n              <Link\n                href={PAGE_TERMS_SERVICE}\n                className={styles.metaNavLink}\n                text={MSG.metaLinkTos}\n              />\n              <Link\n                href={PAGE_PRIVACY_POLICY}\n                className={styles.metaNavLink}\n                text={MSG.metaLinkPrivacy}\n              />\n            </nav>\n          </div>\n          <div className={styles.socialIconContainer}>\n            <Link alt=\"Ghost\" href={COLONY_BLOG}>\n              <Icon\n                className={styles.socialIcon}\n                title=\"Ghost\"\n                name=\"social_ghost_devPortal\"\n              />\n            </Link>\n            <Link alt=\"Twitter\" href={COLONY_TWITTER}>\n              <Icon\n                className={styles.socialIcon}\n                title=\"Twitter\"\n                name=\"social_twitter_devPortal\"\n              />\n            </Link>\n            <Link alt=\"Discourse\" href={COLONY_DISCOURSE}>\n              <Icon\n                className={styles.socialIcon}\n                title=\"Discourse\"\n                name=\"social_discourse_devPortal\"\n              />\n            </Link>\n            <Link alt=\"GitHub\" href={COLONY_GITHUB}>\n              <Icon\n                className={styles.socialIcon}\n                title=\"GitHub\"\n                name=\"social_github_devPortal\"\n              />\n            </Link>\n            <Link alt=\"Gitter\" href={COLONY_GITTER}>\n              <Icon\n                className={styles.socialIcon}\n                title=\"Gitter\"\n                name=\"social_gitter_devPortal\"\n              />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nFooter.displayName = displayName;\n\nexport default Footer;\n","/* @flow */\nimport type { Node } from 'react';\nimport type { IntlShape } from 'react-intl';\n\nimport React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport type { Project } from '~types';\n\nimport { transformProjectData } from '~utils/docs';\n\nimport Header from './Header';\nimport Footer from './Footer';\n\nimport styles from './DeveloperPortalLayout.module.css';\n\ntype Props = {|\n  children: Node,\n  intl: IntlShape,\n|};\n\nconst displayName = 'layouts.DeveloperPortalLayout';\n\nconst DeveloperPortalLayout = ({ children, intl: { locale } }: Props) => {\n  const projectQueryData = useStaticQuery(graphql`\n    {\n      ...coreProjectsFragment\n      ...openSourceProjectsFragment\n    }\n  `);\n  const coreProjects: Array<Project> =\n    projectQueryData.coreProjects.edges.map(edge =>\n      transformProjectData(edge, locale),\n    ) || [];\n  const openSourceProjects: Array<Project> =\n    projectQueryData.openSourceProjects.edges.map(edge =>\n      transformProjectData(edge, locale),\n    ) || [];\n  return (\n    <>\n      <Header\n        coreProjects={coreProjects}\n        openSourceProjects={openSourceProjects}\n      />\n      <div className={styles.body}>{children}</div>\n      <Footer\n        coreProjects={coreProjects}\n        openSourceProjects={openSourceProjects}\n      />\n    </>\n  );\n};\n\nDeveloperPortalLayout.displayName = displayName;\n\nexport default DeveloperPortalLayout;\n","/* @flow */\nimport { compose, nest } from 'recompose';\nimport { injectIntl } from 'react-intl';\n\nimport type { GlobalLayoutProps } from '~layouts/GlobalLayout/GlobalLayout.jsx';\n\nimport GlobalLayout from '~layouts/GlobalLayout';\n\nimport DeveloperPortalLayout from './DeveloperPortalLayout.jsx';\n\nconst enhance = compose(injectIntl);\n\nexport default nest<GlobalLayoutProps>(\n  GlobalLayout,\n  enhance(DeveloperPortalLayout),\n);\n","/* @flow */\nexport { default } from './DeveloperPortalLayout';\n","/* @flow */\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport type { Project } from '~types';\n\nimport Heading from '~core/Heading';\nimport Image from '~core/Image';\nimport Link from '~core/Link';\n\nimport styles from './CoreProductsItem.module.css';\n\nconst MSG = defineMessages({\n  docsLinkText: {\n    id: 'pages.Developers.CoreProductsItem.docsLinkText',\n    defaultMessage: 'Docs',\n  },\n});\n\ntype Props = {|\n  project: Project,\n|};\n\nconst displayName = 'pages.Developers.CoreProductsItem';\n\nconst CoreProductsItem = ({\n  project: { description, entryPoint, logoSmall, name, repoUrl },\n}: Props) => (\n  <>\n    <div>\n      <Link href={entryPoint}>\n        <div className={styles.imageContainer}>\n          {/* @TODO get dark logo for hover state, link image to docs */}\n          <Image\n            alt={name}\n            className={styles.image}\n            project={name}\n            src={logoSmall}\n          />\n        </div>\n      </Link>\n      <Heading\n        appearance={{ theme: 'invert', size: 'medium', weight: 'medium' }}\n        text={name}\n      />\n      <p className={styles.descriptionText}>{description}</p>\n    </div>\n    <p>\n      <Link\n        className={styles.itemLink}\n        href={entryPoint}\n        text={MSG.docsLinkText}\n      />\n      <Link\n        arrow=\"right\"\n        className={styles.itemLink}\n        href={repoUrl}\n        text=\"GitHub\"\n      />\n    </p>\n  </>\n);\n\nCoreProductsItem.displayName = displayName;\n\nexport default CoreProductsItem;\n","/* @flow */\nimport type { IntlShape } from 'react-intl';\n\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport type { Project } from '~types';\n\nimport Heading from '~core/Heading';\nimport { transformProjectData } from '~utils/docs';\n\nimport CoreProductsItem from '../CoreProductsItem';\n\nimport styles from './CoreProducts.module.css';\n\nconst MSG = defineMessages({\n  sectionTitle: {\n    id: 'pages.Developers.CoreProducts.sectionTitle',\n    defaultMessage: 'Colony Core',\n  },\n  sectionText: {\n    id: 'pages.Developers.CoreProducts.sectionText',\n    defaultMessage:\n      // eslint-disable-next-line max-len\n      'Engage with Colony to manage work, shared funds, and reputation. Integrate directly with the smart contracts, use colonyJS to build Colony into your dapp, or fire up the colonyStarter for boilerplates and implementation examples.',\n  },\n});\n\ntype Props = {|\n  /** Injected via `injectIntl` */\n  intl: IntlShape,\n|};\n\nexport const coreProjectSortOrder: Array<string> = [\n  'colonyNetwork',\n  'colonyJS',\n  'colonyStarter',\n];\n\nconst displayName = 'pages.Developers.CoreProducts';\n\nconst CoreProducts = ({ intl: { locale } }: Props) => {\n  const projectQueryData = useStaticQuery(graphql`\n    {\n      ...coreProjectsFragment\n    }\n  `);\n\n  const projects: Array<Project> = projectQueryData.coreProjects.edges\n    .map(projectEdge => transformProjectData(projectEdge, locale))\n    // Sort projects by order defined in above array\n    .sort(\n      ({ name: nameA }, { name: nameB }) =>\n        coreProjectSortOrder.indexOf(nameA) -\n        coreProjectSortOrder.indexOf(nameB),\n    );\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.gradientWrapper}>\n        <div className={styles.sectionIntroContent}>\n          <Heading\n            appearance={{ size: 'large', theme: 'invert', weight: 'medium' }}\n            text={MSG.sectionTitle}\n          />\n          <p>\n            <FormattedMessage {...MSG.sectionText} />\n          </p>\n        </div>\n        <div className={styles.coreProductsRow}>\n          {projects.map(project => (\n            <div className={styles.coreProductsItem} key={project.name}>\n              <CoreProductsItem project={project} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCoreProducts.displayName = displayName;\n\nexport default injectIntl(CoreProducts);\n","/* @flow */\nexport { coreProjectSortOrder, default } from './CoreProducts.jsx';\n","/* @flow */\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport type { Project } from '~types';\n\nimport Heading from '~core/Heading';\nimport Image from '~core/Image';\nimport Link from '~core/Link';\n\nimport styles from './OpenSourceItem.module.css';\n\nconst MSG = defineMessages({\n  docsLinkText: {\n    id: 'pages.Developers.OpenSourceItem.docsLinkText',\n    defaultMessage: 'Docs',\n  },\n});\n\ntype Props = {|\n  project: Project,\n|};\n\nconst displayName = 'pages.Developers.OpenSourceItem';\n\nconst OpenSourceItem = ({\n  project: { description, entryPoint, logoSmall, name, repoUrl },\n}: Props) => (\n  <div className={styles.main}>\n    <Link href={entryPoint}>\n      <div className={styles.imageContainer}>\n        <Image\n          alt={name}\n          className={styles.image}\n          project={name}\n          src={logoSmall}\n        />\n      </div>\n    </Link>\n    <div className={styles.contentContainer}>\n      <div>\n        <Heading\n          appearance={{\n            margin: 'none',\n            size: 'medium',\n            theme: 'invert',\n            weight: 'medium',\n          }}\n          text={name}\n        />\n        <div className={styles.description}>\n          <p>{description}</p>\n        </div>\n      </div>\n      <div className={styles.linkContainer}>\n        <p>\n          <Link\n            className={styles.itemLink}\n            href={entryPoint}\n            text={MSG.docsLinkText}\n          />\n          <Link\n            arrow=\"right\"\n            className={styles.itemLink}\n            href={repoUrl}\n            text=\"GitHub\"\n          />\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nOpenSourceItem.displayName = displayName;\n\nexport default OpenSourceItem;\n","/* @flow */\nimport type { IntlShape } from 'react-intl';\n\nimport React from 'react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport type { Project } from '~types';\n\nimport Heading from '~core/Heading';\nimport { transformProjectData } from '~utils/docs';\n\nimport OpenSourceItem from '../OpenSourceItem';\n\nimport styles from './OpenSource.module.css';\n\nconst MSG = defineMessages({\n  sectionIntroTitle: {\n    id: 'pages.Developers.OpenSource.sectionIntroTitle',\n    defaultMessage: 'Open Source Tools',\n  },\n  sectionIntroText: {\n    id: 'pages.Developers.OpenSource.sectionIntroText',\n    defaultMessage: 'Standalone tools for Ethereum developers.',\n  },\n});\n\ntype Props = {|\n  /** Injected via `injectIntl` */\n  intl: IntlShape,\n|};\n\nexport const openSourceProjectSortOrder: Array<string> = [\n  'purser',\n  'tailor',\n  'pinion',\n  'trufflepig',\n  'budgetBox',\n  'solcover',\n];\n\nconst displayName = 'pages.Developers.OpenSource';\n\nconst OpenSource = ({ intl: { locale } }: Props) => {\n  const projectQueryData = useStaticQuery(graphql`\n    {\n      ...openSourceProjectsFragment\n    }\n  `);\n\n  const projects: Array<Project> = projectQueryData.openSourceProjects.edges\n    .map(edge => transformProjectData(edge, locale))\n    // Sort projects by order defined in above array\n    .sort(\n      ({ name: nameA }, { name: nameB }) =>\n        openSourceProjectSortOrder.indexOf(nameA) -\n        openSourceProjectSortOrder.indexOf(nameB),\n    );\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.introSection}>\n        <Heading\n          appearance={{\n            margin: 'double',\n            size: 'large',\n            theme: 'invert',\n            weight: 'medium',\n          }}\n          text={MSG.sectionIntroTitle}\n        />\n        <p>\n          <FormattedMessage {...MSG.sectionIntroText} />\n        </p>\n      </div>\n      <div className={styles.openSourceProductGrid}>\n        {projects.map(project => (\n          <div className={styles.openSourceItem} key={project.name}>\n            <OpenSourceItem project={project} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nOpenSource.displayName = displayName;\n\nexport default injectIntl(OpenSource);\n","/* @flow */\nexport { openSourceProjectSortOrder, default } from './OpenSource.jsx';\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}