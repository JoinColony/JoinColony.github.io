{"version":3,"sources":["webpack:///./src/modules/parts/components/BugBounty/BugBounty.jsx","webpack:///./src/modules/layouts/components/MainLayout/Header/Header.jsx","webpack:///./src/modules/layouts/components/MainLayout/Header/Header.js","webpack:///./src/modules/layouts/components/MainLayout/Footer/Footer.jsx","webpack:///./src/modules/layouts/components/MainLayout/MainLayout.jsx","webpack:///./src/modules/layouts/components/MainLayout/MainLayout.js","webpack:///./src/modules/pages/components/404/404.jsx","webpack:///./src/pages/404.js"],"names":["MSG","defineMessages","title","id","defaultMessage","subTitle","BugBounty","react_default","a","createElement","Link","className","styles","container","href","PAGE_BUG_BOUNTY","persistLocale","leftText","index_es","boldText","displayName","btnTitleToggleNavigation","imageAltColonyDocs","linkProducts","socialIconTitle","description","Header","state","isNavExpanded","isScrolled","handleScroll","_this","window","pageYOffset","setState","isProjectActive","project","location","props","pathname","startsWith","slug","handleCloseNavigation","handleToggleNavigation","componentDidMount","addEventListener","this","componentWillUnmount","removeEventListener","render","_this2","projects","_this$state","activeProject","find","selectedProject","name","activeLinkClassNames","projectLink","projectLinkActive","navLinks","map","key","entryPoint","onClick","getProps","header","aria-expanded","role","style","boxShadow","headerContent","wrapper","PAGE_INDEX","logo","Image","src","withPrefix","alt","mainNavigation","emptySpace","navigation","Button","navigationButton","navigationArrow","navigationContent","secondaryLinkList","secondaryLinkListItem","repoLink","COLONY_GITHUB","Icon","repoIcon","titleValues","projectOrOrg","platform","COLONY_GITTER","COLONY_DISCOURSE","searchContainer","Search","inputId","aria-hidden","mobileIcon","mobileIconLine","React","Component","withLocation","contentTagline","linkBlog","linkGetInvolved","linkLogin","linkTerms","Footer","socialLinks","url","icon","COLONY_REDDIT","COLONY_BLOG","COLONY_TWITTER","footer","section","logoContainer","COLONY_WEBSITE","viewBox","logoTagline","Object","assign","values","lineBreak","socials","socialLink","socialItem","socialIcon","nav","navLink","PAGE_GET_INVOLVED","text","PAGE_TERMS_SERVICE","PAGE_LOGIN","MainLayout","_ref","children","locale","intl","gatsby_browser_entry","query","data","edges","edge","transformProjectData","gridContainer","components_BugBounty_BugBounty","components_MainLayout_Header_Header","MainLayout_Footer_Footer","_4213061621","enhance","compose","injectIntl","nest","GlobalLayout","contentExplanation","linkHome","NotFoundPage","layouts_components_MainLayout_MainLayout","main","content","Heading","NotFound"],"mappings":"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","file":"component---src-pages-404-js-3b44ceed641c2f490e4b.js","sourcesContent":["/* @flow */\nimport React from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport Link from '~core/Link';\nimport { PAGE_BUG_BOUNTY } from '~routes';\n\nimport styles from './BugBounty.module.css';\n\nconst MSG = defineMessages({\n  title: {\n    id: 'parts.BugBounty.title',\n    defaultMessage: 'Secure the network',\n  },\n  subTitle: {\n    id: 'parts.BugBounty.subTitle',\n    defaultMessage: 'Bug Bounty 2019',\n  },\n});\n\nconst displayName = 'parts.BugBounty';\n\nconst BugBounty = () => (\n  <Link\n    className={styles.container}\n    href={PAGE_BUG_BOUNTY}\n    persistLocale={false}\n  >\n    <span className={styles.leftText}>\n      <FormattedMessage {...MSG.title} />\n    </span>\n    <span className={styles.boldText}>\n      <FormattedMessage {...MSG.subTitle} />\n    </span>\n  </Link>\n);\n\nBugBounty.displayName = displayName;\n\nexport default BugBounty;\n","/* @flow */\nimport React from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\nimport { withPrefix } from 'gatsby';\n\nimport type { Project } from '~types';\nimport type { EnhancedProps as Props } from './types';\n\nimport Button from '~core/Button';\nimport Icon from '~core/Icon';\nimport Image from '~core/Image';\nimport Link from '~core/Link';\nimport Search from '~core/Search';\nimport {\n  COLONY_DISCOURSE,\n  COLONY_GITHUB,\n  COLONY_GITTER,\n  PAGE_INDEX,\n} from '~routes';\n\nimport styles from './Header.module.css';\n\nconst MSG = defineMessages({\n  btnTitleToggleNavigation: {\n    id: 'layouts.MainLayout.Header.btnTitleToggleNavigation',\n    defaultMessage: 'Toggle Navigation',\n  },\n  imageAltColonyDocs: {\n    id: 'layouts.MainLayout.Header.imageAltColonyDocs',\n    defaultMessage: 'Colony Docs',\n  },\n  linkProducts: {\n    id: 'layouts.MainLayout.Header.linkProducts',\n    defaultMessage: 'Products',\n  },\n  socialIconTitle: {\n    id: 'layouts.MainLayout.Header.socialIconTitle',\n    defaultMessage: '{projectOrOrg} on {platform}',\n    description:\n      'For instance, `Colony on GitHub` or `colonyNetwork on GitHub`',\n  },\n});\n\ntype State = {|\n  isNavExpanded: boolean,\n  isScrolled: boolean,\n|};\n\nclass Header extends React.Component<Props, State> {\n  static displayName = 'layouts.MainLayout.Header';\n\n  state = {\n    isNavExpanded: false,\n    isScrolled: false,\n  };\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n    const { isScrolled } = this.state;\n    if (window.pageYOffset > 0) {\n      if (isScrolled) return;\n      this.setState({ isScrolled: true });\n    } else {\n      this.setState({ isScrolled: false });\n    }\n  };\n\n  isProjectActive = (project: Project) => {\n    const { location } = this.props;\n    return location && location.pathname.startsWith(`/${project.slug}`);\n  };\n\n  handleCloseNavigation = () => {\n    this.setState({\n      isNavExpanded: false,\n    });\n  };\n\n  handleToggleNavigation = () => {\n    const { isNavExpanded } = this.state;\n    this.setState({\n      isNavExpanded: !isNavExpanded,\n    });\n  };\n\n  render() {\n    const { projects } = this.props;\n    const { isNavExpanded, isScrolled } = this.state;\n\n    const activeProject = projects.find(this.isProjectActive);\n    const selectedProject = (activeProject && activeProject.name) || '';\n\n    const activeLinkClassNames = `${styles.projectLink} ${\n      styles.projectLinkActive\n    }`;\n\n    const navLinks = projects.map(project => (\n      <Link\n        key={project.slug}\n        href={project.entryPoint}\n        onClick={this.handleCloseNavigation}\n        persistLocale={false}\n        getProps={() =>\n          activeProject &&\n          selectedProject &&\n          project.slug === activeProject.slug\n            ? { className: activeLinkClassNames }\n            : { className: styles.projectLink }\n        }\n      >\n        {project.name}\n      </Link>\n    ));\n\n    return (\n      <div id=\"header\" className={styles.container}>\n        <header\n          className={styles.header}\n          aria-expanded={isNavExpanded}\n          role=\"navigation\"\n          style={\n            isScrolled ? { boxShadow: '0 0 10px 1px rgb(238, 238, 238)' } : null\n          }\n        >\n          <div className={styles.headerContent}>\n            <div className={styles.wrapper}>\n              <Link\n                href={PAGE_INDEX}\n                className={styles.logo}\n                onClick={this.handleCloseNavigation}\n              >\n                <Image\n                  src={withPrefix('/img/colonyDocs_navy.svg')}\n                  alt={MSG.imageAltColonyDocs}\n                />\n              </Link>\n              <div className={styles.mainNavigation}>\n                <div className={styles.emptySpace} />\n                <nav className={styles.navigation}>\n                  <Button className={styles.navigationButton}>\n                    <FormattedMessage {...MSG.linkProducts} />\n                    <i className={styles.navigationArrow} />\n                  </Button>\n                  <div\n                    id=\"navigationContent\"\n                    className={styles.navigationContent}\n                  >\n                    {navLinks}\n                  </div>\n                </nav>\n                <ul className={styles.secondaryLinkList}>\n                  <li className={styles.secondaryLinkListItem}>\n                    <Link\n                      className={styles.repoLink}\n                      href={`${COLONY_GITHUB}/${selectedProject}`}\n                    >\n                      <Icon\n                        className={styles.repoIcon}\n                        name=\"social_github\"\n                        title={MSG.socialIconTitle}\n                        titleValues={{\n                          projectOrOrg: selectedProject || 'Colony',\n                          platform: 'GitHub',\n                        }}\n                      />\n                    </Link>\n                  </li>\n                  <li className={styles.secondaryLinkListItem}>\n                    <Link\n                      className={styles.repoLink}\n                      href={`${COLONY_GITTER}/${selectedProject}`}\n                    >\n                      <Icon\n                        className={styles.repoIcon}\n                        name=\"social_gitter\"\n                        title={MSG.socialIconTitle}\n                        titleValues={{\n                          projectOrOrg: selectedProject || 'Colony',\n                          platform: 'Gitter',\n                        }}\n                      />\n                    </Link>\n                  </li>\n                  <li className={styles.secondaryLinkListItem}>\n                    <Link className={styles.repoLink} href={COLONY_DISCOURSE}>\n                      <Icon\n                        className={styles.repoIcon}\n                        name=\"social_discourse\"\n                        title={MSG.socialIconTitle}\n                        titleValues={{\n                          projectOrOrg: 'Colony',\n                          platform: 'Discourse',\n                        }}\n                      />\n                    </Link>\n                  </li>\n                </ul>\n                <div className={styles.searchContainer}>\n                  <Search inputId=\"mainLayoutHeaderSearch\" />\n                </div>\n              </div>\n              <Button\n                aria-hidden\n                className={styles.mobileIcon}\n                onClick={this.handleToggleNavigation}\n                title={MSG.btnTitleToggleNavigation}\n              >\n                <span className={styles.mobileIconLine} />\n                <span className={styles.mobileIconLine} />\n                <span className={styles.mobileIconLine} />\n                <span className={styles.mobileIconLine} />\n              </Button>\n            </div>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","/* @flow */\nimport { withLocation } from '~hoc/location';\n\nimport Header from './Header.jsx';\n\nexport default withLocation()(Header);\n","/* @flow */\nimport React from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport Icon from '~core/Icon';\nimport Link from '~core/Link';\nimport {\n  COLONY_BLOG,\n  COLONY_GITHUB,\n  COLONY_REDDIT,\n  COLONY_TWITTER,\n  COLONY_WEBSITE,\n  PAGE_GET_INVOLVED,\n  PAGE_LOGIN,\n  PAGE_TERMS_SERVICE,\n} from '~routes';\n\nimport styles from './Footer.module.css';\n\nconst MSG = defineMessages({\n  contentTagline: {\n    id: 'layouts.MainLayout.Footer.contentTagline',\n    defaultMessage: 'A Platform for {lineBreak} Open Organizations',\n  },\n  linkBlog: {\n    id: 'layouts.MainLayout.Footer.linkBlog',\n    defaultMessage: 'Blog',\n  },\n  linkGetInvolved: {\n    id: 'layouts.MainLayout.Footer.linkGetInvolved',\n    defaultMessage: 'Get Involved',\n  },\n  linkLogin: {\n    id: 'layouts.MainLayout.Footer.linkLogin',\n    defaultMessage: 'Login',\n  },\n  linkTerms: {\n    id: 'layouts.MainLayout.Footer.linkTerms',\n    defaultMessage: 'Terms',\n  },\n  socialIconTitle: {\n    id: 'layouts.MainLayout.Footer.socialIconTitle',\n    defaultMessage: 'Colony on {platform}',\n    description: 'For instance, `Colony on GitHub`',\n  },\n});\n\nconst displayName = 'layouts.MainLayout.Footer';\n\nconst Footer = () => {\n  const socialLinks = [\n    {\n      name: 'Github',\n      url: COLONY_GITHUB,\n      icon: 'social_github',\n    },\n    {\n      name: 'Reddit',\n      url: COLONY_REDDIT,\n      icon: 'social_reddit',\n    },\n    {\n      name: 'Medium',\n      url: COLONY_BLOG,\n      icon: 'social_medium',\n    },\n    {\n      name: 'Twitter',\n      url: COLONY_TWITTER,\n      icon: 'social_twitter',\n    },\n  ];\n\n  return (\n    <footer className={styles.footer}>\n      <div className={styles.wrapper}>\n        <div className={styles.section}>\n          <div className={styles.logoContainer}>\n            <Link href={COLONY_WEBSITE} className={styles.logo}>\n              <Icon\n                name=\"colony_logo_vertical_white\"\n                title=\"Colony\"\n                viewBox=\"0 0 122 112\"\n              />\n            </Link>\n            <p className={styles.logoTagline}>\n              <FormattedMessage\n                {...MSG.contentTagline}\n                values={{ lineBreak: <br /> }}\n              />\n            </p>\n          </div>\n          <ul className={styles.socials}>\n            {socialLinks.map(socialLink => (\n              <Link\n                key={socialLink.name}\n                className={styles.socialItem}\n                href={socialLink.url}\n              >\n                <Icon\n                  className={styles.socialIcon}\n                  title={MSG.socialIconTitle}\n                  titleValues={{\n                    platform: socialLink.name,\n                  }}\n                  name={socialLink.icon}\n                />\n              </Link>\n            ))}\n          </ul>\n          <nav className={styles.nav} role=\"navigation\">\n            <Link\n              className={styles.navLink}\n              href={PAGE_GET_INVOLVED}\n              text={MSG.linkGetInvolved}\n            />\n            <Link\n              className={styles.navLink}\n              href={COLONY_BLOG}\n              text={MSG.linkBlog}\n            />\n            <Link\n              className={styles.navLink}\n              href={PAGE_TERMS_SERVICE}\n              text={MSG.linkTerms}\n            />\n            <Link\n              className={styles.navLink}\n              href={PAGE_LOGIN}\n              text={MSG.linkLogin}\n            />\n          </nav>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nFooter.displayName = displayName;\n\nexport default Footer;\n","/* @flow */\nimport type { Node } from 'react';\nimport type { IntlShape } from 'react-intl';\n\nimport React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport BugBounty from '~parts/BugBounty';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { transformProjectData } from '~utils/docs';\n\nimport styles from './MainLayout.module.css';\n\ntype Props = {|\n  children: Node,\n  intl: IntlShape,\n|};\n\nconst displayName = 'layouts.MainLayout';\n\nconst MainLayout = ({ children, intl: { locale } }: Props) => {\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          ...allProjectsFragment\n        }\n      `}\n      render={data => {\n        const projects =\n          data.projects.edges.map(edge => transformProjectData(edge, locale)) ||\n          [];\n        return (\n          <div className={styles.gridContainer}>\n            <BugBounty /> {/* BUG BOUNTY */}\n            <Header projects={projects} />\n            {children}\n            <Footer projects={projects} />\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nMainLayout.displayName = displayName;\n\nexport default MainLayout;\n","/* @flow */\nimport { compose, nest } from 'recompose';\nimport { injectIntl } from 'react-intl';\n\nimport type { GlobalLayoutProps } from '~layouts/GlobalLayout/GlobalLayout.jsx';\n\nimport GlobalLayout from '~layouts/GlobalLayout';\n\nimport MainLayout from './MainLayout.jsx';\n\nconst enhance = compose(injectIntl);\n\nexport default nest<GlobalLayoutProps>(GlobalLayout, enhance(MainLayout));\n","/* @flow */\nimport React from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport Heading from '~core/Heading';\nimport Link from '~core/Link';\nimport MainLayout from '~layouts/MainLayout';\nimport { PAGE_INDEX } from '~routes';\n\nimport styles from './404.module.css';\n\nconst MSG = defineMessages({\n  contentExplanation: {\n    id: 'pages.NotFoundPage.contentExplanation',\n    defaultMessage: `You just hit a route that doesn't exist... the sadness.`,\n  },\n  title: {\n    id: 'pages.NotFoundPage.title',\n    defaultMessage: 'NOT FOUND',\n  },\n  linkHome: {\n    id: 'pages.NotFoundPage.linkHome',\n    defaultMessage: 'Home',\n  },\n});\n\nconst displayName = 'pages.NotFoundPage';\n\nconst NotFoundPage = () => (\n  <MainLayout>\n    <main className={styles.main}>\n      <div className={styles.content}>\n        <Heading text={MSG.title} />\n        <p>\n          <FormattedMessage {...MSG.contentExplanation} />\n        </p>\n        <Link href={PAGE_INDEX} text={MSG.linkHome} />\n      </div>\n    </main>\n  </MainLayout>\n);\n\nNotFoundPage.displayName = displayName;\n\nexport default NotFoundPage;\n","/* @flow */\nimport { createElement } from 'react';\n\nimport NotFoundPage from '~pages/404';\n\nconst NotFound = () => createElement(NotFoundPage);\n\nexport default NotFound;\n"],"sourceRoot":""}