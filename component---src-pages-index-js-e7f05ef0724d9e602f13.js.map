{"version":3,"sources":["webpack:///./src/modules/parts/components/SupportCta/SupportCta.jsx","webpack:///./src/modules/pages/components/Developers/HeroFeatureItem/HeroFeatureItem.jsx","webpack:///./src/modules/pages/components/Developers/Hero/Hero.jsx","webpack:///./src/modules/pages/components/Developers/Developers.jsx","webpack:///./src/modules/pages/components/Developers/Developers.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.string.starts-with.js","webpack:///./src/modules/parts/components/SEO/SEO.jsx","webpack:///./src/modules/parts/components/SEO/SEO.js","webpack:///./src/hoc/files/index.js","webpack:///./src/modules/parts/components/SEO/index.js"],"names":["MSG","defineMessages","sectionTitle","id","defaultMessage","SupportCta","react_default","a","createElement","className","styles","main","contentWrapper","Heading","appearance","size","theme","weight","text","iconRow","Link","iconItemLink","href","COLONY_DISCOURSE","Icon","name","title","COLONY_GITHUB","COLONY_GITTER_COLONYJS","displayName","HeroFeatureItem","_ref","contentText","headingText","linkText","linkUrl","Fragment","margin","heroFeatureTextContainer","heroFeatureText","index_es","arrow","heroFeatureLink","heroTitle","heroFeatureGetStartedTitle","heroFeatureGetStartedText","heroFeatureGetStartedLinkText","heroFeatureContributeTitle","heroFeatureContributeText","heroFeatureForumTitle","heroFeatureForumText","Hero","heroBackgroundImage","Image","alt","src","withPrefix","contentContainer","heroFeature","heroFeatureItem","Developers_HeroFeatureItem_HeroFeatureItem","PAGE_GET_STARTED_COLONYJS","pageDescription","pageTitle","Developers","formatMessage","intl","SEO","description","Helmet","Developers_Hero_Hero","CoreProducts","OpenSource","components_SupportCta_SupportCta","withBackground","enhance","compose","injectIntl","nest","DeveloperPortalLayout","Home","$export","__webpack_require__","toLength","context","$startsWith","P","F","startsWith","searchString","that","this","index","Math","min","arguments","length","undefined","search","String","call","slice","siteName","baseUrl","descriptionContent","descriptionValues","getAbsoluteImagePath","isDocPage","location","siteLogo","titleContent","titleValues","_ref$images","images","absolutePath","pathname","imagePaths","map","indexOf","push","ogType","schemaOrgJSONLD","@context","@type","url","itemListElement","position","item","@id","image","author","headline","Helmet_default","content","imagePath","key","type","JSON","stringify","itemProp","property","BaseComponent","fromRenderProps","FileContext","Consumer","files","withLocation","defaultProps","withProps","withHandlers","project","_ref2","d","__webpack_exports__","parts_components_SEO_SEO"],"mappings":"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","file":"component---src-pages-index-js-e7f05ef0724d9e602f13.js","sourcesContent":["/* @flow */\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\n\nimport Heading from '~core/Heading';\nimport Icon from '~core/Icon';\nimport Link from '~core/Link';\nimport {\n  COLONY_DISCOURSE,\n  COLONY_GITHUB,\n  COLONY_GITTER_COLONYJS,\n} from '~routes';\n\nimport styles from './SupportCta.module.css';\n\nconst MSG = defineMessages({\n  sectionTitle: {\n    id: 'parts.SupportCta.sectionTitle',\n    defaultMessage: 'Questions? Problems? Existential dilemmas? We can help!',\n  },\n});\n\nconst displayName = 'parts.SupportCta';\n\nconst SupportCta = () => (\n  <div className={styles.main}>\n    <div className={styles.contentWrapper}>\n      <Heading\n        appearance={{\n          size: 'large',\n          theme: 'primary',\n          weight: 'medium',\n        }}\n        text={MSG.sectionTitle}\n      />\n      <div className={styles.iconRow}>\n        <Link className={styles.iconItemLink} href={COLONY_DISCOURSE}>\n          <Icon name=\"social_discourse_devPortal\" title=\"Discourse\" />\n        </Link>\n        <Link className={styles.iconItemLink} href={COLONY_GITHUB}>\n          <Icon name=\"social_github_devPortal\" title=\"GitHub\" />\n        </Link>\n        <Link className={styles.iconItemLink} href={COLONY_GITTER_COLONYJS}>\n          <Icon name=\"social_gitter_devPortal\" title=\"Gitter\" />\n        </Link>\n      </div>\n    </div>\n  </div>\n);\n\nSupportCta.displayName = displayName;\n\nexport default SupportCta;\n","/* @flow */\nimport type { MessageDescriptor } from 'react-intl';\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Heading from '~core/Heading';\nimport Link from '~core/Link';\n\nimport styles from './HeroFeatureItem.module.css';\n\ntype Props = {|\n  contentText: MessageDescriptor,\n  headingText: MessageDescriptor,\n  linkText: MessageDescriptor | string,\n  linkUrl: string,\n|};\n\nconst displayName = 'pages.Developers.HeroFeatureItem';\n\nconst HeroFeatureItem = ({\n  contentText,\n  headingText,\n  linkText,\n  linkUrl,\n}: Props) => (\n  <>\n    <div>\n      <div>\n        <Heading\n          appearance={{\n            margin: 'none',\n            size: 'medium',\n            theme: 'invert',\n            weight: 'medium',\n          }}\n          text={headingText}\n        />\n      </div>\n      <div className={styles.heroFeatureTextContainer}>\n        <p className={styles.heroFeatureText}>\n          <FormattedMessage {...contentText} />\n        </p>\n      </div>\n    </div>\n    <div>\n      <Link\n        arrow=\"right\"\n        className={styles.heroFeatureLink}\n        href={linkUrl}\n        text={linkText}\n      />\n    </div>\n  </>\n);\n\nHeroFeatureItem.displayName = displayName;\n\nexport default HeroFeatureItem;\n","/* @flow */\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\nimport { withPrefix } from 'gatsby';\n\nimport Heading from '~core/Heading';\nimport Image from '~core/Image';\nimport {\n  COLONY_DISCOURSE,\n  COLONY_GITHUB,\n  PAGE_GET_STARTED_COLONYJS,\n} from '~routes';\n\nimport HeroFeatureItem from '../HeroFeatureItem';\n\nimport styles from './Hero.module.css';\n\nconst MSG = defineMessages({\n  heroTitle: {\n    id: 'pages.Developers.heroTitle',\n    defaultMessage: 'Build with Colony',\n  },\n  heroFeatureGetStartedTitle: {\n    id: 'pages.Developers.heroFeatureGetStartedTitle',\n    defaultMessage: 'Get Started',\n  },\n  heroFeatureGetStartedText: {\n    id: 'pages.Developers.heroFeatureGetStartedText',\n    defaultMessage:\n      'Build incentives and reputation into your app, firm, or community.',\n  },\n  heroFeatureGetStartedLinkText: {\n    id: 'pages.Developers.heroFeatureGetStartedLinkText',\n    defaultMessage: 'Build',\n  },\n  heroFeatureContributeTitle: {\n    id: 'pages.Developers.heroFeatureContributeTitle',\n    defaultMessage: 'Contribute',\n  },\n  heroFeatureContributeText: {\n    id: 'pages.Developers.heroFeatureContributeText',\n    defaultMessage:\n      // eslint-disable-next-line max-len\n      'We believe in being open. All of our projects are open-source and accepting contributions.',\n  },\n  heroFeatureForumTitle: {\n    id: 'pages.Developers.heroFeatureForumTitle',\n    defaultMessage: 'Discuss',\n  },\n  heroFeatureForumText: {\n    id: 'pages.Developers.heroFeatureForumText',\n    defaultMessage:\n      'Join in the discussion and collaborate with our community of builders.',\n  },\n});\n\nconst displayName = 'pages.Developers.Hero';\n\nconst Hero = () => (\n  <div className={styles.main}>\n    <div className={styles.heroBackgroundImage}>\n      <Image\n        alt={MSG.heroTitle}\n        src={withPrefix('img/devPortal_banner_bg.svg')}\n      />\n    </div>\n    <div className={styles.contentContainer}>\n      <div className={styles.heroTitle}>\n        <Heading\n          appearance={{ size: 'huge', theme: 'invert', weight: 'medium' }}\n          text={MSG.heroTitle}\n        />\n      </div>\n      <div className={styles.heroFeature}>\n        <div className={styles.heroFeatureItem}>\n          <HeroFeatureItem\n            contentText={MSG.heroFeatureGetStartedText}\n            headingText={MSG.heroFeatureGetStartedTitle}\n            linkText={MSG.heroFeatureGetStartedLinkText}\n            linkUrl={PAGE_GET_STARTED_COLONYJS}\n          />\n        </div>\n        <div className={styles.heroFeatureItem}>\n          <HeroFeatureItem\n            contentText={MSG.heroFeatureContributeText}\n            headingText={MSG.heroFeatureContributeTitle}\n            linkText=\"GitHub\"\n            linkUrl={COLONY_GITHUB}\n          />\n        </div>\n        <div className={styles.heroFeatureItem}>\n          <HeroFeatureItem\n            contentText={MSG.heroFeatureForumText}\n            headingText={MSG.heroFeatureForumTitle}\n            linkText=\"Discourse\"\n            linkUrl={COLONY_DISCOURSE}\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nHero.displayName = displayName;\n\nexport default Hero;\n","/* @flow */\nimport type { IntlShape } from 'react-intl';\n\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\nimport { Helmet } from 'react-helmet';\n\nimport SEO from '~parts/SEO';\nimport SupportCta from '~parts/SupportCta';\n\nimport CoreProducts from './CoreProducts';\nimport Hero from './Hero';\nimport OpenSource from './OpenSource';\n\nimport styles from './Developers.module.css';\n\nconst MSG = defineMessages({\n  pageDescription: {\n    id: 'pages.Developers.pageDescription',\n    defaultMessage: `Just like the organizations that will run on Colony,\neach component in the colony stack is the product of collaboration and open\nengagement. Here, you'll find the up-to-date documentation for all of the\nColony projects.`,\n  },\n  pageTitle: {\n    id: 'pages.Developers.pageTitle',\n    defaultMessage: 'Developer Portal',\n  },\n});\n\ntype Props = {|\n  /** Injected via `injectIntl` */\n  intl: IntlShape,\n|};\n\nconst displayName = 'pages.Developers';\n\nconst Developers = ({ intl: { formatMessage } }: Props) => {\n  const title = formatMessage(MSG.pageTitle);\n  return (\n    <>\n      <SEO description={MSG.pageDescription} title={title} />\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <main className={styles.main}>\n        <Hero />\n        <CoreProducts />\n        <OpenSource />\n        <SupportCta withBackground />\n      </main>\n    </>\n  );\n};\n\nDevelopers.displayName = displayName;\n\nexport default Developers;\n","/* @flow */\nimport { compose, nest } from 'recompose';\nimport { injectIntl } from 'react-intl';\n\nimport DeveloperPortalLayout from '~layouts/DeveloperPortalLayout';\n\nimport Developers from './Developers.jsx';\n\nconst enhance = compose(injectIntl);\n\nexport default nest<{}>(DeveloperPortalLayout, enhance(Developers));\n","/* @flow */\nimport { createElement } from 'react';\n\nimport Developers from '~pages/Developers';\n\nconst Home = () => createElement(Developers);\n\nexport default Home;\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","/* @flow */\nimport React from 'react';\nimport { defineMessages } from 'react-intl';\nimport Helmet from 'react-helmet';\nimport { withPrefix } from 'gatsby';\n\nimport type { OutProps as Props } from './types';\n\nconst MSG = defineMessages({\n  siteName: {\n    id: 'parts.SEO.siteName',\n    defaultMessage: 'Colony Open Source Docs',\n  },\n});\n\nconst displayName = 'parts.SEO';\n\nconst SEO = ({\n  baseUrl,\n  description: descriptionContent,\n  descriptionValues,\n  getAbsoluteImagePath,\n  intl: { formatMessage },\n  isDocPage,\n  location,\n  siteLogo,\n  title: titleContent,\n  titleValues,\n  images = [siteLogo],\n}: Props) => {\n  const absolutePath = location && `${baseUrl}${withPrefix(location.pathname)}`;\n  const imagePaths = images.map(getAbsoluteImagePath);\n  if (imagePaths.indexOf(siteLogo) < 0) imagePaths.push(siteLogo);\n  const ogType = location && location.pathname === '/' ? 'website' : 'article';\n  const siteName = formatMessage(MSG.siteName);\n  const title =\n    typeof titleContent === 'string'\n      ? titleContent\n      : formatMessage(titleContent, titleValues);\n  const description =\n    typeof descriptionContent === 'string'\n      ? descriptionContent\n      : formatMessage(descriptionContent, descriptionValues);\n\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: baseUrl,\n      name: siteName,\n    },\n  ];\n\n  if (isDocPage) {\n    schemaOrgJSONLD.push(\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: [\n          {\n            '@type': 'ListItem',\n            position: 1,\n            item: {\n              '@id': absolutePath,\n              name: title,\n              image: imagePaths[0],\n            },\n          },\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'BlogPosting',\n        author: 'Colony',\n        url: absolutePath,\n        name: title,\n        headline: title,\n        image: {\n          '@type': 'ImageObject',\n          url: imagePaths[0],\n        },\n        description,\n      },\n    );\n  }\n\n  return (\n    <Helmet>\n      {/* General tags */}\n      <meta name=\"description\" content={description} />\n      {imagePaths.map(imagePath => (\n        <meta name=\"image\" content={imagePath} key={imagePath} />\n      ))}\n\n      {/* Schema.org tags */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaOrgJSONLD)}\n      </script>\n\n      {/* Google+ tags */}\n      <meta itemProp=\"name\" content={title} />\n      <meta itemProp=\"description\" content={description} />\n      {imagePaths.map(imagePath => (\n        <meta itemProp=\"image\" content={imagePath} key={imagePath} />\n      ))}\n\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={absolutePath} />\n      <meta property=\"og:type\" content={ogType} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:site_name\" content={siteName} />\n      {imagePaths.map(imagePath => (\n        <meta property=\"og:image\" content={imagePath} key={imagePath} />\n      ))}\n\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@joincolony\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      {imagePaths.map(imagePath => (\n        <meta name=\"twitter:image\" content={imagePath} key={imagePath} />\n      ))}\n    </Helmet>\n  );\n};\n\nSEO.displayName = displayName;\n\nexport default SEO;\n","/* @flow */\nimport type { HOC } from 'recompose';\n\nimport { injectIntl } from 'react-intl';\nimport { compose, defaultProps, withHandlers, withProps } from 'recompose';\n\nimport { withFileContext } from '~hoc/files';\nimport { withLocation } from '~hoc/location';\n\nimport type { InProps } from './types';\n\nimport SEO from './SEO.jsx';\n\nconst enhance: HOC<*, InProps> = compose(\n  injectIntl,\n  withFileContext(),\n  withLocation(),\n  defaultProps({\n    isDocPage: false,\n  }),\n  withProps(() => ({\n    baseUrl: 'https://docs.colony.io',\n  })),\n  withHandlers({\n    getAbsoluteImagePath: ({ baseUrl, files, project }) => (\n      imagePath: string,\n    ) => {\n      return imagePath.startsWith('http')\n        ? imagePath\n        : `${baseUrl}${\n            files && files[`${project}/${imagePath}`]\n              ? files[`${project}/${imagePath}`]\n              : imagePath\n          }`;\n    },\n  }),\n  withProps(({ getAbsoluteImagePath }) => ({\n    siteLogo: getAbsoluteImagePath('/img/colonyDocs_combomark.svg'),\n  })),\n);\n\nexport default enhance(SEO);\n","/* @flow */\nimport type { ComponentType } from 'react';\n\nimport { fromRenderProps } from 'recompose';\n\nimport FileContext from '~context/FileContext';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const withFileContext = () => (BaseComponent: ComponentType<Object>) =>\n  // $FlowFixMe\n  fromRenderProps(FileContext.Consumer, files => ({ files }))(BaseComponent);\n","/* @flow */\nexport { default } from './SEO';\n"],"sourceRoot":""}